{
	"id": "03674edfccec81a978a0523b1b07cd8b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @dev The contract has an owner address, and provides basic authorization control whitch\n * simplifies the implementation of user permissions. This contract is based on the source code at:\n * https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol\n */\ncontract Ownable\n{\n\n  /**\n   * @dev Error constants.\n   */\n  string public constant NOT_CURRENT_OWNER = \"018001\";\n  string public constant CANNOT_TRANSFER_TO_ZERO_ADDRESS = \"018002\";\n\n  /**\n   * @dev Current owner address.\n   */\n  address public owner;\n\n  /**\n   * @dev An event which is triggered when the owner is changed.\n   * @param previousOwner The address of the previous owner.\n   * @param newOwner The address of the new owner.\n   */\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n  /**\n   * @dev The constructor sets the original `owner` of the contract to the sender account.\n   */\n  constructor()\n  {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner()\n  {\n    require(msg.sender == owner, NOT_CURRENT_OWNER);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(\n    address _newOwner\n  )\n    public\n    onlyOwner\n  {\n    require(_newOwner != address(0), CANNOT_TRANSFER_TO_ZERO_ADDRESS);\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NOT_CURRENT_OWNER",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The contract has an owner address, and provides basic authorization control whitch simplifies the implementation of user permissions. This contract is based on the source code at: https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol",
						"events": {
							"OwnershipTransferred(address,address)": {
								"details": "An event which is triggered when the owner is changed.",
								"params": {
									"newOwner": "The address of the new owner.",
									"previousOwner": "The address of the previous owner."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "The constructor sets the original `owner` of the contract to the sender account."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"_newOwner": "The address to transfer ownership to."
								}
							}
						},
						"stateVariables": {
							"NOT_CURRENT_OWNER": {
								"details": "Error constants."
							},
							"owner": {
								"details": "Current owner address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":357:1612  contract Ownable... */\n  mstore(0x40, 0x80)\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1005:1050  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1035:1045  msg.sender */\n  caller\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1027:1032  owner */\n  0x00\n  dup1\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1027:1045  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":357:1612  contract Ownable... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":357:1612  contract Ownable... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x860d248a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf3fe3bc3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":473:538  string public constant CANNOT_TRANSFER_TO_ZERO_ADDRESS = \"018002\" */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":588:608  address public owner */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1380:1609  function transferOwnership(... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":418:469  string public constant NOT_CURRENT_OWNER = \"018001\" */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":473:538  string public constant CANNOT_TRANSFER_TO_ZERO_ADDRESS = \"018002\" */\n    tag_8:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3031383030320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":588:608  address public owner */\n    tag_12:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1380:1609  function transferOwnership(... */\n    tag_18:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1181:1186  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1167:1186  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1167:1177  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1167:1186  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1188:1205  NOT_CURRENT_OWNER */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3031383030310000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1159:1206  require(msg.sender == owner, NOT_CURRENT_OWNER) */\n      swap1\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1496:1497  0 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1475:1498  _newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1475:1484  _newOwner */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1475:1498  _newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1500:1531  CANNOT_TRANSFER_TO_ZERO_ADDRESS */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3031383030320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1467:1532  require(_newOwner != address(0), CANNOT_TRANSFER_TO_ZERO_ADDRESS) */\n      swap1\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1571:1580  _newOwner */\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1543:1581  OwnershipTransferred(owner, _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1564:1569  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1543:1581  OwnershipTransferred(owner, _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1595:1604  _newOwner */\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1587:1592  owner */\n      0x00\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1587:1604  owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":1380:1609  function transferOwnership(... */\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":418:469  string public constant NOT_CURRENT_OWNER = \"018001\" */\n    tag_20:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3031383030310000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_28:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_29:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:594   */\n    tag_30:\n        /* \"#utility.yul\":355:356   */\n      0x00\n        /* \"#utility.yul\":365:478   */\n    tag_45:\n        /* \"#utility.yul\":379:385   */\n      dup4\n        /* \"#utility.yul\":376:377   */\n      dup2\n        /* \"#utility.yul\":373:386   */\n      lt\n        /* \"#utility.yul\":365:478   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":464:465   */\n      dup1\n        /* \"#utility.yul\":459:462   */\n      dup3\n        /* \"#utility.yul\":455:466   */\n      add\n        /* \"#utility.yul\":449:467   */\n      mload\n        /* \"#utility.yul\":445:446   */\n      dup2\n        /* \"#utility.yul\":440:443   */\n      dup5\n        /* \"#utility.yul\":436:447   */\n      add\n        /* \"#utility.yul\":429:468   */\n      mstore\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":398:399   */\n      dup2\n        /* \"#utility.yul\":394:404   */\n      add\n        /* \"#utility.yul\":389:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:478   */\n      jump(tag_45)\n    tag_47:\n        /* \"#utility.yul\":496:502   */\n      dup4\n        /* \"#utility.yul\":493:494   */\n      dup2\n        /* \"#utility.yul\":490:503   */\n      gt\n        /* \"#utility.yul\":487:588   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":576:577   */\n      0x00\n        /* \"#utility.yul\":567:573   */\n      dup5\n        /* \"#utility.yul\":562:565   */\n      dup5\n        /* \"#utility.yul\":558:574   */\n      add\n        /* \"#utility.yul\":551:578   */\n      mstore\n        /* \"#utility.yul\":487:588   */\n    tag_48:\n        /* \"#utility.yul\":336:594   */\n      pop\n        /* \"#utility.yul\":287:594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":600:702   */\n    tag_31:\n        /* \"#utility.yul\":641:647   */\n      0x00\n        /* \"#utility.yul\":692:694   */\n      0x1f\n        /* \"#utility.yul\":688:695   */\n      not\n        /* \"#utility.yul\":683:685   */\n      0x1f\n        /* \"#utility.yul\":676:681   */\n      dup4\n        /* \"#utility.yul\":672:686   */\n      add\n        /* \"#utility.yul\":668:696   */\n      and\n        /* \"#utility.yul\":658:696   */\n      swap1\n      pop\n        /* \"#utility.yul\":600:702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:1072   */\n    tag_32:\n        /* \"#utility.yul\":796:799   */\n      0x00\n        /* \"#utility.yul\":824:863   */\n      tag_51\n        /* \"#utility.yul\":857:862   */\n      dup3\n        /* \"#utility.yul\":824:863   */\n      tag_28\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":879:950   */\n      tag_52\n        /* \"#utility.yul\":943:949   */\n      dup2\n        /* \"#utility.yul\":938:941   */\n      dup6\n        /* \"#utility.yul\":879:950   */\n      tag_29\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":872:950   */\n      swap4\n      pop\n        /* \"#utility.yul\":959:1011   */\n      tag_53\n        /* \"#utility.yul\":1004:1010   */\n      dup2\n        /* \"#utility.yul\":999:1002   */\n      dup6\n        /* \"#utility.yul\":992:996   */\n      0x20\n        /* \"#utility.yul\":985:990   */\n      dup7\n        /* \"#utility.yul\":981:997   */\n      add\n        /* \"#utility.yul\":959:1011   */\n      tag_30\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1036:1065   */\n      tag_54\n        /* \"#utility.yul\":1058:1064   */\n      dup2\n        /* \"#utility.yul\":1036:1065   */\n      tag_31\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1031:1034   */\n      dup5\n        /* \"#utility.yul\":1027:1066   */\n      add\n        /* \"#utility.yul\":1020:1066   */\n      swap2\n      pop\n        /* \"#utility.yul\":800:1072   */\n      pop\n        /* \"#utility.yul\":708:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1391   */\n    tag_10:\n        /* \"#utility.yul\":1191:1195   */\n      0x00\n        /* \"#utility.yul\":1229:1231   */\n      0x20\n        /* \"#utility.yul\":1218:1227   */\n      dup3\n        /* \"#utility.yul\":1214:1232   */\n      add\n        /* \"#utility.yul\":1206:1232   */\n      swap1\n      pop\n        /* \"#utility.yul\":1278:1287   */\n      dup2\n        /* \"#utility.yul\":1272:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1288   */\n      sub\n        /* \"#utility.yul\":1264:1265   */\n      0x00\n        /* \"#utility.yul\":1253:1262   */\n      dup4\n        /* \"#utility.yul\":1249:1266   */\n      add\n        /* \"#utility.yul\":1242:1289   */\n      mstore\n        /* \"#utility.yul\":1306:1384   */\n      tag_56\n        /* \"#utility.yul\":1379:1383   */\n      dup2\n        /* \"#utility.yul\":1370:1376   */\n      dup5\n        /* \"#utility.yul\":1306:1384   */\n      tag_32\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1298:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1078:1391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1397:1523   */\n    tag_33:\n        /* \"#utility.yul\":1434:1441   */\n      0x00\n        /* \"#utility.yul\":1474:1516   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1467:1472   */\n      dup3\n        /* \"#utility.yul\":1463:1517   */\n      and\n        /* \"#utility.yul\":1452:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1397:1523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1529:1625   */\n    tag_34:\n        /* \"#utility.yul\":1566:1573   */\n      0x00\n        /* \"#utility.yul\":1595:1619   */\n      tag_59\n        /* \"#utility.yul\":1613:1618   */\n      dup3\n        /* \"#utility.yul\":1595:1619   */\n      tag_33\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1584:1619   */\n      swap1\n      pop\n        /* \"#utility.yul\":1529:1625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1631:1749   */\n    tag_35:\n        /* \"#utility.yul\":1718:1742   */\n      tag_61\n        /* \"#utility.yul\":1736:1741   */\n      dup2\n        /* \"#utility.yul\":1718:1742   */\n      tag_34\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1713:1716   */\n      dup3\n        /* \"#utility.yul\":1706:1743   */\n      mstore\n        /* \"#utility.yul\":1631:1749   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1755:1977   */\n    tag_14:\n        /* \"#utility.yul\":1848:1852   */\n      0x00\n        /* \"#utility.yul\":1886:1888   */\n      0x20\n        /* \"#utility.yul\":1875:1884   */\n      dup3\n        /* \"#utility.yul\":1871:1889   */\n      add\n        /* \"#utility.yul\":1863:1889   */\n      swap1\n      pop\n        /* \"#utility.yul\":1899:1970   */\n      tag_63\n        /* \"#utility.yul\":1967:1968   */\n      0x00\n        /* \"#utility.yul\":1956:1965   */\n      dup4\n        /* \"#utility.yul\":1952:1969   */\n      add\n        /* \"#utility.yul\":1943:1949   */\n      dup5\n        /* \"#utility.yul\":1899:1970   */\n      tag_35\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1755:1977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2064:2181   */\n    tag_37:\n        /* \"#utility.yul\":2173:2174   */\n      0x00\n        /* \"#utility.yul\":2170:2171   */\n      dup1\n        /* \"#utility.yul\":2163:2175   */\n      revert\n        /* \"#utility.yul\":2310:2432   */\n    tag_39:\n        /* \"#utility.yul\":2383:2407   */\n      tag_68\n        /* \"#utility.yul\":2401:2406   */\n      dup2\n        /* \"#utility.yul\":2383:2407   */\n      tag_34\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2376:2381   */\n      dup2\n        /* \"#utility.yul\":2373:2408   */\n      eq\n        /* \"#utility.yul\":2363:2426   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":2422:2423   */\n      0x00\n        /* \"#utility.yul\":2419:2420   */\n      dup1\n        /* \"#utility.yul\":2412:2424   */\n      revert\n        /* \"#utility.yul\":2363:2426   */\n    tag_69:\n        /* \"#utility.yul\":2310:2432   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2438:2577   */\n    tag_40:\n        /* \"#utility.yul\":2484:2489   */\n      0x00\n        /* \"#utility.yul\":2522:2528   */\n      dup2\n        /* \"#utility.yul\":2509:2529   */\n      calldataload\n        /* \"#utility.yul\":2500:2529   */\n      swap1\n      pop\n        /* \"#utility.yul\":2538:2571   */\n      tag_71\n        /* \"#utility.yul\":2565:2570   */\n      dup2\n        /* \"#utility.yul\":2538:2571   */\n      tag_39\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2438:2577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2583:2912   */\n    tag_17:\n        /* \"#utility.yul\":2642:2648   */\n      0x00\n        /* \"#utility.yul\":2691:2693   */\n      0x20\n        /* \"#utility.yul\":2679:2688   */\n      dup3\n        /* \"#utility.yul\":2670:2677   */\n      dup5\n        /* \"#utility.yul\":2666:2689   */\n      sub\n        /* \"#utility.yul\":2662:2694   */\n      slt\n        /* \"#utility.yul\":2659:2778   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":2697:2776   */\n      tag_74\n      tag_37\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2659:2778   */\n    tag_73:\n        /* \"#utility.yul\":2817:2818   */\n      0x00\n        /* \"#utility.yul\":2842:2895   */\n      tag_75\n        /* \"#utility.yul\":2887:2894   */\n      dup5\n        /* \"#utility.yul\":2878:2884   */\n      dup3\n        /* \"#utility.yul\":2867:2876   */\n      dup6\n        /* \"#utility.yul\":2863:2885   */\n      add\n        /* \"#utility.yul\":2842:2895   */\n      tag_40\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2832:2895   */\n      swap2\n      pop\n        /* \"#utility.yul\":2788:2905   */\n      pop\n        /* \"#utility.yul\":2583:2912   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e01552ea1e66067f3a149cbca5ba4124f4d211fbf6af221de5cc4fa81bbebcd264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610535806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063860d248a146100515780638da5cb5b1461006f578063f2fde38b1461008d578063f3fe3bc3146100a9575b600080fd5b6100596100c7565b6040516100669190610423565b60405180910390f35b610077610100565b6040516100849190610486565b60405180910390f35b6100a760048036038101906100a291906104d2565b610124565b005b6100b1610351565b6040516100be9190610423565b60405180910390f35b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e19190610423565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525090610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028a9190610423565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b600081519050919050565b600082825260208201905092915050565b60005b838110156103c45780820151818401526020810190506103a9565b838111156103d3576000848401525b50505050565b6000601f19601f8301169050919050565b60006103f58261038a565b6103ff8185610395565b935061040f8185602086016103a6565b610418816103d9565b840191505092915050565b6000602082019050818103600083015261043d81846103ea565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061047082610445565b9050919050565b61048081610465565b82525050565b600060208201905061049b6000830184610477565b92915050565b600080fd5b6104af81610465565b81146104ba57600080fd5b50565b6000813590506104cc816104a6565b92915050565b6000602082840312156104e8576104e76104a1565b5b60006104f6848285016104bd565b9150509291505056fea2646970667358221220e01552ea1e66067f3a149cbca5ba4124f4d211fbf6af221de5cc4fa81bbebcd264736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x535 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x860D248A EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xF3FE3BC3 EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x124 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031383030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031383030310000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031383030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031383030310000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 DUP3 PUSH2 0x38A JUMP JUMPDEST PUSH2 0x3FF DUP2 DUP6 PUSH2 0x395 JUMP JUMPDEST SWAP4 POP PUSH2 0x40F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x418 DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43D DUP2 DUP5 PUSH2 0x3EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x470 DUP3 PUSH2 0x445 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x480 DUP2 PUSH2 0x465 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AF DUP2 PUSH2 0x465 JUMP JUMPDEST DUP2 EQ PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4CC DUP2 PUSH2 0x4A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E7 PUSH2 0x4A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F6 DUP5 DUP3 DUP6 ADD PUSH2 0x4BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 ISZERO MSTORE 0xEA 0x1E PUSH7 0x67F3A149CBCA5 0xBA COINBASE 0x24 DELEGATECALL 0xD2 GT 0xFB 0xF6 0xAF 0x22 SAR 0xE5 0xCC 0x4F 0xA8 SHL 0xBE 0xBC 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "357:1255:0:-:0;;;1005:45;;;;;;;;;;1035:10;1027:5;;:18;;;;;;;;;;;;;;;;;;357:1255;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CANNOT_TRANSFER_TO_ZERO_ADDRESS_9": {
									"entryPoint": 199,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NOT_CURRENT_OWNER_6": {
									"entryPoint": 849,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_12": {
									"entryPoint": 256,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_70": {
									"entryPoint": 292,
									"id": 70,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2915:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "336:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "346:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "355:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "350:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "440:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "445:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "436:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "436:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "464:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "455:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "455:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "449:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "429:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "429:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "429:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "376:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "373:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "387:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "389:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "398:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "394:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "389:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "369:3:1",
																"statements": []
															},
															"src": "365:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "562:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "567:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "558:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "558:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "496:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "490:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:1"
															},
															"nodeType": "YulIf",
															"src": "487:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "318:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "323:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "328:6:1",
														"type": ""
													}
												],
												"src": "287:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "658:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "676:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "683:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "692:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "631:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "641:6:1",
														"type": ""
													}
												],
												"src": "600:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "800:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "810:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "857:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "824:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "814:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "872:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "879:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "985:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "992:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "999:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1004:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "959:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1020:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1031:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1036:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "781:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "788:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "796:3:1",
														"type": ""
													}
												],
												"src": "708:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1206:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1218:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1229:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1214:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1206:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1264:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1272:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1379:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1306:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1298:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1180:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1191:4:1",
														"type": ""
													}
												],
												"src": "1078:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1442:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1452:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1467:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1474:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1463:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1463:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1452:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1424:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1434:7:1",
														"type": ""
													}
												],
												"src": "1397:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1574:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1584:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1613:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1595:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1595:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1584:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1556:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1566:7:1",
														"type": ""
													}
												],
												"src": "1529:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1696:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1713:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1736:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1718:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1718:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1706:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1706:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1706:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1684:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													}
												],
												"src": "1631:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1875:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1886:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1863:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1943:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1956:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1967:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1952:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1899:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1899:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1899:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1825:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1755:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2023:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2033:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2049:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2043:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2033:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2016:6:1",
														"type": ""
													}
												],
												"src": "1983:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2153:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2170:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2173:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2163:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2163:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2064:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2293:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2296:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2187:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2410:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2419:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2422:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2412:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2412:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2412:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2376:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2401:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2383:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2383:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2373:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2373:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:43:1"
															},
															"nodeType": "YulIf",
															"src": "2363:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2346:5:1",
														"type": ""
													}
												],
												"src": "2310:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2490:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2500:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2522:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2509:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2509:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2500:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2538:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2538:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2468:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2476:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2484:5:1",
														"type": ""
													}
												],
												"src": "2438:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2649:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2695:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2697:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2697:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2697:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2670:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2679:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2666:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2666:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2691:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:32:1"
															},
															"nodeType": "YulIf",
															"src": "2659:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2788:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2803:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2817:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2807:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2832:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2867:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2878:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2863:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2863:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2887:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2842:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2842:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2832:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2619:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2630:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2642:6:1",
														"type": ""
													}
												],
												"src": "2583:329:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063860d248a146100515780638da5cb5b1461006f578063f2fde38b1461008d578063f3fe3bc3146100a9575b600080fd5b6100596100c7565b6040516100669190610423565b60405180910390f35b610077610100565b6040516100849190610486565b60405180910390f35b6100a760048036038101906100a291906104d2565b610124565b005b6100b1610351565b6040516100be9190610423565b60405180910390f35b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e19190610423565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525090610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028a9190610423565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b600081519050919050565b600082825260208201905092915050565b60005b838110156103c45780820151818401526020810190506103a9565b838111156103d3576000848401525b50505050565b6000601f19601f8301169050919050565b60006103f58261038a565b6103ff8185610395565b935061040f8185602086016103a6565b610418816103d9565b840191505092915050565b6000602082019050818103600083015261043d81846103ea565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061047082610445565b9050919050565b61048081610465565b82525050565b600060208201905061049b6000830184610477565b92915050565b600080fd5b6104af81610465565b81146104ba57600080fd5b50565b6000813590506104cc816104a6565b92915050565b6000602082840312156104e8576104e76104a1565b5b60006104f6848285016104bd565b9150509291505056fea2646970667358221220e01552ea1e66067f3a149cbca5ba4124f4d211fbf6af221de5cc4fa81bbebcd264736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x860D248A EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xF3FE3BC3 EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x124 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031383030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031383030310000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031383030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031383030310000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 DUP3 PUSH2 0x38A JUMP JUMPDEST PUSH2 0x3FF DUP2 DUP6 PUSH2 0x395 JUMP JUMPDEST SWAP4 POP PUSH2 0x40F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x418 DUP2 PUSH2 0x3D9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43D DUP2 DUP5 PUSH2 0x3EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x470 DUP3 PUSH2 0x445 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x480 DUP2 PUSH2 0x465 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AF DUP2 PUSH2 0x465 JUMP JUMPDEST DUP2 EQ PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4CC DUP2 PUSH2 0x4A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E7 PUSH2 0x4A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F6 DUP5 DUP3 DUP6 ADD PUSH2 0x4BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 ISZERO MSTORE 0xEA 0x1E PUSH7 0x67F3A149CBCA5 0xBA COINBASE 0x24 DELEGATECALL 0xD2 GT 0xFB 0xF6 0xAF 0x22 SAR 0xE5 0xCC 0x4F 0xA8 SHL 0xBE 0xBC 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "357:1255:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;473:65;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;588:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:229;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;418:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;473:65;;;;;;;;;;;;;;;;;;;:::o;588:20::-;;;;;;;;;;;;:::o;1380:229::-;1181:5;;;;;;;;;;1167:19;;:10;:19;;;1188:17;;;;;;;;;;;;;;;;;1159:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1496:1:::1;1475:23;;:9;:23;;;;1500:31;;;;;;;;;;;;;;;;::::0;1467:65:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1571:9;1543:38;;1564:5;::::0;::::1;;;;;;;;1543:38;;;;;;;;;;;;1595:9;1587:5;::::0;:17:::1;;;;;;;;;;;;;;;;;;1380:229:::0;:::o;418:51::-;;;;;;;;;;;;;;;;;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1397:126::-;1434:7;1474:42;1467:5;1463:54;1452:65;;1397:126;;;:::o;1529:96::-;1566:7;1595:24;1613:5;1595:24;:::i;:::-;1584:35;;1529:96;;;:::o;1631:118::-;1718:24;1736:5;1718:24;:::i;:::-;1713:3;1706:37;1631:118;;:::o;1755:222::-;1848:4;1886:2;1875:9;1871:18;1863:26;;1899:71;1967:1;1956:9;1952:17;1943:6;1899:71;:::i;:::-;1755:222;;;;:::o;2064:117::-;2173:1;2170;2163:12;2310:122;2383:24;2401:5;2383:24;:::i;:::-;2376:5;2373:35;2363:63;;2422:1;2419;2412:12;2363:63;2310:122;:::o;2438:139::-;2484:5;2522:6;2509:20;2500:29;;2538:33;2565:5;2538:33;:::i;:::-;2438:139;;;;:::o;2583:329::-;2642:6;2691:2;2679:9;2670:7;2666:23;2662:32;2659:119;;;2697:79;;:::i;:::-;2659:119;2817:1;2842:53;2887:7;2878:6;2867:9;2863:22;2842:53;:::i;:::-;2832:63;;2788:117;2583:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "266600",
								"executionCost": "24572",
								"totalCost": "291172"
							},
							"external": {
								"CANNOT_TRANSFER_TO_ZERO_ADDRESS()": "infinite",
								"NOT_CURRENT_OWNER()": "infinite",
								"owner()": "2511",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 357,
									"end": 1612,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 357,
									"end": 1612,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 1612,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1005,
									"end": 1050,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1005,
									"end": 1050,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1005,
									"end": 1050,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1005,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1005,
									"end": 1050,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1005,
									"end": 1050,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1005,
									"end": 1050,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1005,
									"end": 1050,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1005,
									"end": 1050,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1005,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1005,
									"end": 1050,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1035,
									"end": 1045,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1032,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1027,
									"end": 1032,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 357,
									"end": 1612,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 1612,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 357,
									"end": 1612,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 1612,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 1612,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 357,
									"end": 1612,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 1612,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e01552ea1e66067f3a149cbca5ba4124f4d211fbf6af221de5cc4fa81bbebcd264736f6c634300080d0033",
									".code": [
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "860D248A"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "F3FE3BC3"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 1612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "3031383030320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 473,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 538,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 588,
											"end": 608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 608,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1186,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1181,
											"end": 1186,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1186,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1181,
											"end": 1186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1177,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "3031383030310000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "3031383030320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1581,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1609,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "3031383030310000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 376,
											"end": 377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 386,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 464,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 459,
											"end": 462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 455,
											"end": 466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 449,
											"end": 467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 440,
											"end": 443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 429,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 394,
											"end": 404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 389,
											"end": 404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 496,
											"end": 502,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 493,
											"end": 494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 503,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 562,
											"end": 565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 558,
											"end": 574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 336,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 695,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 672,
											"end": 686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 668,
											"end": 696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 658,
											"end": 696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 796,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 872,
											"end": 950,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 872,
											"end": 950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1002,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 981,
											"end": 997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1397,
											"end": 1523,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1397,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1516,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1523,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1529,
											"end": 1625,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1529,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1613,
											"end": 1618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1595,
											"end": 1619,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1619,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1595,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1625,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1631,
											"end": 1749,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1631,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1736,
											"end": 1741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1718,
											"end": 1742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1718,
											"end": 1742,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1718,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1706,
											"end": 1743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1749,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1755,
											"end": 1977,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1755,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1888,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1899,
											"end": 1970,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1899,
											"end": 1970,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1899,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1977,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2175,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2432,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2310,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2401,
											"end": 2406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2408,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2363,
											"end": 2426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2363,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2432,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2438,
											"end": 2577,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2529,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2538,
											"end": 2571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2538,
											"end": 2571,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2538,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2577,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2577,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2583,
											"end": 2912,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2583,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2693,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2677,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2694,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2778,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2659,
											"end": 2778,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2697,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2697,
											"end": 2776,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2697,
											"end": 2776,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2697,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2778,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2659,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2887,
											"end": 2894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2912,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2912,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CANNOT_TRANSFER_TO_ZERO_ADDRESS()": "860d248a",
							"NOT_CURRENT_OWNER()": "f3fe3bc3",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CANNOT_TRANSFER_TO_ZERO_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NOT_CURRENT_OWNER\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract has an owner address, and provides basic authorization control whitch simplifies the implementation of user permissions. This contract is based on the source code at: https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol\",\"events\":{\"OwnershipTransferred(address,address)\":{\"details\":\"An event which is triggered when the owner is changed.\",\"params\":{\"newOwner\":\"The address of the new owner.\",\"previousOwner\":\"The address of the previous owner.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The constructor sets the original `owner` of the contract to the sender account.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"stateVariables\":{\"NOT_CURRENT_OWNER\":{\"details\":\"Error constants.\"},\"owner\":{\"details\":\"Current owner address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":{\"keccak256\":\"0x908240d3963f350dadc785d79f11471753f0fb6c75892a2678a397c295874336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f458d0715dce36e97e7fb507429db7c2b98d611c9c90b46111eadd12e5a06df7\",\"dweb:/ipfs/QmdeQ3Apwx9DwEYzxGj5iUmiUTv87PG12GUmqbbQGs1fYu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": ".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol": {
				"ast": {
					"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							71
						]
					},
					"id": 72,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:299:0",
								"text": " @dev The contract has an owner address, and provides basic authorization control whitch\n simplifies the implementation of user permissions. This contract is based on the source code at:\n https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol"
							},
							"fullyImplemented": true,
							"id": 71,
							"linearizedBaseContracts": [
								71
							],
							"name": "Ownable",
							"nameLocation": "366:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "379:36:0",
										"text": " @dev Error constants."
									},
									"functionSelector": "f3fe3bc3",
									"id": 6,
									"mutability": "constant",
									"name": "NOT_CURRENT_OWNER",
									"nameLocation": "441:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 71,
									"src": "418:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 4,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "418:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "303138303031",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "461:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bd0bb0ffcede826a2f9c8e6df6999546ede560374c0eac292714390c5fb3897d",
											"typeString": "literal_string \"018001\""
										},
										"value": "018001"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "860d248a",
									"id": 9,
									"mutability": "constant",
									"name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
									"nameLocation": "496:31:0",
									"nodeType": "VariableDeclaration",
									"scope": 71,
									"src": "473:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 7,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "473:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "303138303032",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "530:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a5b29f7035b13dcadb3cd5c407a8edcad826c048054710c3b5817e694ac8cf3f",
											"typeString": "literal_string \"018002\""
										},
										"value": "018002"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "543:42:0",
										"text": " @dev Current owner address."
									},
									"functionSelector": "8da5cb5b",
									"id": 12,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "603:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 71,
									"src": "588:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "588:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "613:186:0",
										"text": " @dev An event which is triggered when the owner is changed.\n @param previousOwner The address of the previous owner.\n @param newOwner The address of the new owner."
									},
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 19,
									"name": "OwnershipTransferred",
									"nameLocation": "808:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "850:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "834:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "885:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "869:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:69:0"
									},
									"src": "802:96:0"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "1021:29:0",
										"statements": [
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 23,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1027:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 24,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1035:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1035:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1027:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "1027:18:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "902:100:0",
										"text": " @dev The constructor sets the original `owner` of the contract to the sender account."
									},
									"id": 29,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1021:0:0"
									},
									"scope": 71,
									"src": "1005:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1153:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 33,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1167:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1167:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 35,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "1181:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1167:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 37,
															"name": "NOT_CURRENT_OWNER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1188:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1159:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1159:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "1159:47:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "1212:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1054:73:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 42,
									"name": "onlyOwner",
									"nameLocation": "1139:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:2:0"
									},
									"src": "1130:88:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1461:148:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 51,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1475:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1496:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1488:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 52,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1488:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1488:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1475:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 57,
															"name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1500:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1467:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "1467:65:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 61,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1564:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1571:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1543:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1543:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "EmitStatement",
												"src": "1538:43:0"
											},
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1587:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 66,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1595:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1587:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "1587:17:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1222:155:0",
										"text": " @dev Allows the current owner to transfer control of the contract to a newOwner.\n @param _newOwner The address to transfer ownership to."
									},
									"functionSelector": "f2fde38b",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 48,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 47,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "1449:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1449:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1389:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "1420:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1412:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:27:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:0:0"
									},
									"scope": 71,
									"src": "1380:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 72,
							"src": "357:1255:0",
							"usedErrors": []
						}
					],
					"src": "32:1581:0"
				},
				"id": 0
			}
		}
	}
}