{
	"id": "ef1b07debd7acd0091eaaed759a3b6f3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./erc721.sol\";\nimport \"./erc721-token-receiver.sol\";\nimport \"../utils/supports-interface.sol\";\nimport \"../utils/address-utils.sol\";\n\n/**\n * @dev Implementation of ERC-721 non-fungible token standard.\n */\ncontract NFToken is\n  ERC721,\n  SupportsInterface\n{\n  using AddressUtils for address;\n\n  /**\n   * @dev List of revert message codes. Implementing dApp should handle showing the correct message.\n   * Based on 0xcert framework error codes.\n   */\n  string constant ZERO_ADDRESS = \"003001\";\n  string constant NOT_VALID_NFT = \"003002\";\n  string constant NOT_OWNER_OR_OPERATOR = \"003003\";\n  string constant NOT_OWNER_APPROVED_OR_OPERATOR = \"003004\";\n  string constant NOT_ABLE_TO_RECEIVE_NFT = \"003005\";\n  string constant NFT_ALREADY_EXISTS = \"003006\";\n  string constant NOT_OWNER = \"003007\";\n  string constant IS_OWNER = \"003008\";\n\n  /**\n   * @dev Magic value of a smart contract that can receive NFT.\n   * Equal to: bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\")).\n   */\n  bytes4 internal constant MAGIC_ON_ERC721_RECEIVED = 0x150b7a02;\n\n  /**\n   * @dev A mapping from NFT ID to the address that owns it.\n   */\n  mapping (uint256 => address) internal idToOwner;\n\n  /**\n   * @dev Mapping from NFT ID to approved address.\n   */\n  mapping (uint256 => address) internal idToApproval;\n\n   /**\n   * @dev Mapping from owner address to count of their tokens.\n   */\n  mapping (address => uint256) private ownerToNFTokenCount;\n\n  /**\n   * @dev Mapping from owner address to mapping of operator addresses.\n   */\n  mapping (address => mapping (address => bool)) internal ownerToOperators;\n\n  /**\n   * @dev Guarantees that the msg.sender is an owner or operator of the given NFT.\n   * @param _tokenId ID of the NFT to validate.\n   */\n  modifier canOperate(\n    uint256 _tokenId\n  )\n  {\n    address tokenOwner = idToOwner[_tokenId];\n    require(\n      tokenOwner == msg.sender || ownerToOperators[tokenOwner][msg.sender],\n      NOT_OWNER_OR_OPERATOR\n    );\n    _;\n  }\n\n  /**\n   * @dev Guarantees that the msg.sender is allowed to transfer NFT.\n   * @param _tokenId ID of the NFT to transfer.\n   */\n  modifier canTransfer(\n    uint256 _tokenId\n  )\n  {\n    address tokenOwner = idToOwner[_tokenId];\n    require(\n      tokenOwner == msg.sender\n      || idToApproval[_tokenId] == msg.sender\n      || ownerToOperators[tokenOwner][msg.sender],\n      NOT_OWNER_APPROVED_OR_OPERATOR\n    );\n    _;\n  }\n\n  /**\n   * @dev Guarantees that _tokenId is a valid Token.\n   * @param _tokenId ID of the NFT to validate.\n   */\n  modifier validNFToken(\n    uint256 _tokenId\n  )\n  {\n    require(idToOwner[_tokenId] != address(0), NOT_VALID_NFT);\n    _;\n  }\n\n  /**\n   * @dev Contract constructor.\n   */\n  constructor()\n  {\n    supportedInterfaces[0x80ac58cd] = true; // ERC721\n  }\n\n  /**\n   * @notice Throws unless `msg.sender` is the current owner, an authorized operator, or the\n   * approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is\n   * the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this\n   * function checks if `_to` is a smart contract (code size > 0). If so, it calls\n   * `onERC721Received` on `_to` and throws if the return value is not\n   * `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`.\n   * @dev Transfers the ownership of an NFT from one address to another address. This function can\n   * be changed to payable.\n   * @param _from The current owner of the NFT.\n   * @param _to The new owner.\n   * @param _tokenId The NFT to transfer.\n   * @param _data Additional data with no specified format, sent in call to `_to`.\n   */\n  function safeTransferFrom(\n    address _from,\n    address _to,\n    uint256 _tokenId,\n    bytes calldata _data\n  )\n    external\n    override\n  {\n    _safeTransferFrom(_from, _to, _tokenId, _data);\n  }\n\n  /**\n   * @notice This works identically to the other function with an extra data parameter, except this\n   * function just sets data to \"\".\n   * @dev Transfers the ownership of an NFT from one address to another address. This function can\n   * be changed to payable.\n   * @param _from The current owner of the NFT.\n   * @param _to The new owner.\n   * @param _tokenId The NFT to transfer.\n   */\n  function safeTransferFrom(\n    address _from,\n    address _to,\n    uint256 _tokenId\n  )\n    external\n    override\n  {\n    _safeTransferFrom(_from, _to, _tokenId, \"\");\n  }\n\n  /**\n   * @notice The caller is responsible to confirm that `_to` is capable of receiving NFTs or else\n   * they may be permanently lost.\n   * @dev Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n   * address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero\n   * address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\n   * @param _from The current owner of the NFT.\n   * @param _to The new owner.\n   * @param _tokenId The NFT to transfer.\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _tokenId\n  )\n    external\n    override\n    canTransfer(_tokenId)\n    validNFToken(_tokenId)\n  {\n    address tokenOwner = idToOwner[_tokenId];\n    require(tokenOwner == _from, NOT_OWNER);\n    require(_to != address(0), ZERO_ADDRESS);\n\n    _transfer(_to, _tokenId);\n  }\n\n  /**\n   * @notice The zero address indicates there is no approved address. Throws unless `msg.sender` is\n   * the current NFT owner, or an authorized operator of the current owner.\n   * @dev Set or reaffirm the approved address for an NFT. This function can be changed to payable.\n   * @param _approved Address to be approved for the given NFT ID.\n   * @param _tokenId ID of the token to be approved.\n   */\n  function approve(\n    address _approved,\n    uint256 _tokenId\n  )\n    external\n    override\n    canOperate(_tokenId)\n    validNFToken(_tokenId)\n  {\n    address tokenOwner = idToOwner[_tokenId];\n    require(_approved != tokenOwner, IS_OWNER);\n\n    idToApproval[_tokenId] = _approved;\n    emit Approval(tokenOwner, _approved, _tokenId);\n  }\n\n  /**\n   * @notice This works even if sender doesn't own any tokens at the time.\n   * @dev Enables or disables approval for a third party (\"operator\") to manage all of\n   * `msg.sender`'s assets. It also emits the ApprovalForAll event.\n   * @param _operator Address to add to the set of authorized operators.\n   * @param _approved True if the operators is approved, false to revoke approval.\n   */\n  function setApprovalForAll(\n    address _operator,\n    bool _approved\n  )\n    external\n    override\n  {\n    ownerToOperators[msg.sender][_operator] = _approved;\n    emit ApprovalForAll(msg.sender, _operator, _approved);\n  }\n\n  /**\n   * @dev Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are\n   * considered invalid, and this function throws for queries about the zero address.\n   * @param _owner Address for whom to query the balance.\n   * @return Balance of _owner.\n   */\n  function balanceOf(\n    address _owner\n  )\n    external\n    override\n    view\n    returns (uint256)\n  {\n    require(_owner != address(0), ZERO_ADDRESS);\n    return _getOwnerNFTCount(_owner);\n  }\n\n  /**\n   * @dev Returns the address of the owner of the NFT. NFTs assigned to the zero address are\n   * considered invalid, and queries about them do throw.\n   * @param _tokenId The identifier for an NFT.\n   * @return _owner Address of _tokenId owner.\n   */\n  function ownerOf(\n    uint256 _tokenId\n  )\n    external\n    override\n    view\n    returns (address _owner)\n  {\n    _owner = idToOwner[_tokenId];\n    require(_owner != address(0), NOT_VALID_NFT);\n  }\n\n  /**\n   * @notice Throws if `_tokenId` is not a valid NFT.\n   * @dev Get the approved address for a single NFT.\n   * @param _tokenId ID of the NFT to query the approval of.\n   * @return Address that _tokenId is approved for.\n   */\n  function getApproved(\n    uint256 _tokenId\n  )\n    external\n    override\n    view\n    validNFToken(_tokenId)\n    returns (address)\n  {\n    return idToApproval[_tokenId];\n  }\n\n  /**\n   * @dev Checks if `_operator` is an approved operator for `_owner`.\n   * @param _owner The address that owns the NFTs.\n   * @param _operator The address that acts on behalf of the owner.\n   * @return True if approved for all, false otherwise.\n   */\n  function isApprovedForAll(\n    address _owner,\n    address _operator\n  )\n    external\n    override\n    view\n    returns (bool)\n  {\n    return ownerToOperators[_owner][_operator];\n  }\n\n  /**\n   * @notice Does NO checks.\n   * @dev Actually performs the transfer.\n   * @param _to Address of a new owner.\n   * @param _tokenId The NFT that is being transferred.\n   */\n  function _transfer(\n    address _to,\n    uint256 _tokenId\n  )\n    internal\n    virtual\n  {\n    address from = idToOwner[_tokenId];\n    _clearApproval(_tokenId);\n\n    _removeNFToken(from, _tokenId);\n    _addNFToken(_to, _tokenId);\n\n    emit Transfer(from, _to, _tokenId);\n  }\n\n  /**\n   * @notice This is an internal function which should be called from user-implemented external\n   * mint function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @dev Mints a new NFT.\n   * @param _to The address that will own the minted NFT.\n   * @param _tokenId of the NFT to be minted by the msg.sender.\n   */\n  function _mint(\n    address _to,\n    uint256 _tokenId\n  )\n    internal\n    virtual\n  {\n    require(_to != address(0), ZERO_ADDRESS);\n    require(idToOwner[_tokenId] == address(0), NFT_ALREADY_EXISTS);\n\n    _addNFToken(_to, _tokenId);\n\n    emit Transfer(address(0), _to, _tokenId);\n  }\n\n  /**\n   * @notice This is an internal function which should be called from user-implemented external burn\n   * function. Its purpose is to show and properly initialize data structures when using this\n   * implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n   * NFT.\n   * @dev Burns a NFT.\n   * @param _tokenId ID of the NFT to be burned.\n   */\n  function _burn(\n    uint256 _tokenId\n  )\n    internal\n    virtual\n    validNFToken(_tokenId)\n  {\n    address tokenOwner = idToOwner[_tokenId];\n    _clearApproval(_tokenId);\n    _removeNFToken(tokenOwner, _tokenId);\n    emit Transfer(tokenOwner, address(0), _tokenId);\n  }\n\n  /**\n   * @notice Use and override this function with caution. Wrong usage can have serious consequences.\n   * @dev Removes a NFT from owner.\n   * @param _from Address from which we want to remove the NFT.\n   * @param _tokenId Which NFT we want to remove.\n   */\n  function _removeNFToken(\n    address _from,\n    uint256 _tokenId\n  )\n    internal\n    virtual\n  {\n    require(idToOwner[_tokenId] == _from, NOT_OWNER);\n    ownerToNFTokenCount[_from] -= 1;\n    delete idToOwner[_tokenId];\n  }\n\n  /**\n   * @notice Use and override this function with caution. Wrong usage can have serious consequences.\n   * @dev Assigns a new NFT to owner.\n   * @param _to Address to which we want to add the NFT.\n   * @param _tokenId Which NFT we want to add.\n   */\n  function _addNFToken(\n    address _to,\n    uint256 _tokenId\n  )\n    internal\n    virtual\n  {\n    require(idToOwner[_tokenId] == address(0), NFT_ALREADY_EXISTS);\n\n    idToOwner[_tokenId] = _to;\n    ownerToNFTokenCount[_to] += 1;\n  }\n\n  /**\n   * @dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\n   * extension to remove double storage (gas optimization) of owner NFT count.\n   * @param _owner Address for whom to query the count.\n   * @return Number of _owner NFTs.\n   */\n  function _getOwnerNFTCount(\n    address _owner\n  )\n    internal\n    virtual\n    view\n    returns (uint256)\n  {\n    return ownerToNFTokenCount[_owner];\n  }\n\n  /**\n   * @dev Actually perform the safeTransferFrom.\n   * @param _from The current owner of the NFT.\n   * @param _to The new owner.\n   * @param _tokenId The NFT to transfer.\n   * @param _data Additional data with no specified format, sent in call to `_to`.\n   */\n  function _safeTransferFrom(\n    address _from,\n    address _to,\n    uint256 _tokenId,\n    bytes memory _data\n  )\n    private\n    canTransfer(_tokenId)\n    validNFToken(_tokenId)\n  {\n    address tokenOwner = idToOwner[_tokenId];\n    require(tokenOwner == _from, NOT_OWNER);\n    require(_to != address(0), ZERO_ADDRESS);\n\n    _transfer(_to, _tokenId);\n\n    if (_to.isContract())\n    {\n      bytes4 retval = ERC721TokenReceiver(_to).onERC721Received(msg.sender, _from, _tokenId, _data);\n      require(retval == MAGIC_ON_ERC721_RECEIVED, NOT_ABLE_TO_RECEIVE_NFT);\n    }\n  }\n\n  /**\n   * @dev Clears the current approval of a given NFT ID.\n   * @param _tokenId ID of the NFT to be transferred.\n   */\n  function _clearApproval(\n    uint256 _tokenId\n  )\n    private\n  {\n    delete idToApproval[_tokenId];\n  }\n\n}\n"
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @notice Based on:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\n * Requires EIP-1052.\n * @dev Utility library of inline functions on addresses.\n */\nlibrary AddressUtils\n{\n\n  /**\n   * @dev Returns whether the target address is a contract.\n   * @param _addr Address to check.\n   * @return addressCheck True if _addr is a contract, false if not.\n   */\n  function isContract(\n    address _addr\n  )\n    internal\n    view\n    returns (bool addressCheck)\n  {\n    // This method relies in extcodesize, which returns 0 for contracts in\n    // construction, since the code is only stored at the end of the\n    // constructor execution.\n\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n    // for accounts without code, i.e. `keccak256('')`\n    bytes32 codehash;\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n    assembly { codehash := extcodehash(_addr) } // solhint-disable-line\n    addressCheck = (codehash != 0x0 && codehash != accountHash);\n  }\n\n}\n"
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./erc165.sol\";\n\n/**\n * @dev Implementation of standard for detect smart contract interfaces.\n */\ncontract SupportsInterface is\n  ERC165\n{\n\n  /**\n   * @dev Mapping of supported intefraces. You must not set element 0xffffffff to true.\n   */\n  mapping(bytes4 => bool) internal supportedInterfaces;\n\n  /**\n   * @dev Contract constructor.\n   */\n  constructor()\n  {\n    supportedInterfaces[0x01ffc9a7] = true; // ERC165\n  }\n\n  /**\n   * @dev Function to check which interfaces are suported by this contract.\n   * @param _interfaceID Id of the interface.\n   * @return True if _interfaceID is supported, false otherwise.\n   */\n  function supportsInterface(\n    bytes4 _interfaceID\n  )\n    external\n    override\n    view\n    returns (bool)\n  {\n    return supportedInterfaces[_interfaceID];\n  }\n\n}\n"
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-721 interface for accepting safe transfers.\n * See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.\n */\ninterface ERC721TokenReceiver\n{\n\n  /**\n   * @notice The contract address is always the message sender. A wallet/broker/auction application\n   * MUST implement the wallet interface if it will accept safe transfers.\n   * @dev Handle the receipt of a NFT. The ERC721 smart contract calls this function on the\n   * recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return\n   * of other than the magic value MUST result in the transaction being reverted.\n   * Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.\n   * @param _operator The address which called `safeTransferFrom` function.\n   * @param _from The address which previously owned the token.\n   * @param _tokenId The NFT identifier which is being transferred.\n   * @param _data Additional data with no specified format.\n   * @return Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n   */\n  function onERC721Received(\n    address _operator,\n    address _from,\n    uint256 _tokenId,\n    bytes calldata _data\n  )\n    external\n    returns(bytes4);\n\n}\n"
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-721 non-fungible token standard.\n * See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.\n */\ninterface ERC721\n{\n\n  /**\n   * @dev Emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are\n   * created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any\n   * number of NFTs may be created and assigned without emitting Transfer. At the time of any\n   * transfer, the approved address for that NFT (if any) is reset to none.\n   */\n  event Transfer(\n    address indexed _from,\n    address indexed _to,\n    uint256 indexed _tokenId\n  );\n\n  /**\n   * @dev This emits when the approved address for an NFT is changed or reaffirmed. The zero\n   * address indicates there is no approved address. When a Transfer event emits, this also\n   * indicates that the approved address for that NFT (if any) is reset to none.\n   */\n  event Approval(\n    address indexed _owner,\n    address indexed _approved,\n    uint256 indexed _tokenId\n  );\n\n  /**\n   * @dev This emits when an operator is enabled or disabled for an owner. The operator can manage\n   * all NFTs of the owner.\n   */\n  event ApprovalForAll(\n    address indexed _owner,\n    address indexed _operator,\n    bool _approved\n  );\n\n  /**\n   * @notice Throws unless `msg.sender` is the current owner, an authorized operator, or the\n   * approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is\n   * the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this\n   * function checks if `_to` is a smart contract (code size > 0). If so, it calls\n   * `onERC721Received` on `_to` and throws if the return value is not\n   * `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`.\n   * @dev Transfers the ownership of an NFT from one address to another address. This function can\n   * be changed to payable.\n   * @param _from The current owner of the NFT.\n   * @param _to The new owner.\n   * @param _tokenId The NFT to transfer.\n   * @param _data Additional data with no specified format, sent in call to `_to`.\n   */\n  function safeTransferFrom(\n    address _from,\n    address _to,\n    uint256 _tokenId,\n    bytes calldata _data\n  )\n    external;\n\n  /**\n   * @notice This works identically to the other function with an extra data parameter, except this\n   * function just sets data to \"\"\n   * @dev Transfers the ownership of an NFT from one address to another address. This function can\n   * be changed to payable.\n   * @param _from The current owner of the NFT.\n   * @param _to The new owner.\n   * @param _tokenId The NFT to transfer.\n   */\n  function safeTransferFrom(\n    address _from,\n    address _to,\n    uint256 _tokenId\n  )\n    external;\n\n  /**\n   * @notice The caller is responsible to confirm that `_to` is capable of receiving NFTs or else\n   * they may be permanently lost.\n   * @dev Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n   * address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero\n   * address. Throws if `_tokenId` is not a valid NFT.  This function can be changed to payable.\n   * @param _from The current owner of the NFT.\n   * @param _to The new owner.\n   * @param _tokenId The NFT to transfer.\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _tokenId\n  )\n    external;\n\n  /**\n   * @notice The zero address indicates there is no approved address. Throws unless `msg.sender` is\n   * the current NFT owner, or an authorized operator of the current owner.\n   * @param _approved The new approved NFT controller.\n   * @dev Set or reaffirm the approved address for an NFT. This function can be changed to payable.\n   * @param _tokenId The NFT to approve.\n   */\n  function approve(\n    address _approved,\n    uint256 _tokenId\n  )\n    external;\n\n  /**\n   * @notice The contract MUST allow multiple operators per owner.\n   * @dev Enables or disables approval for a third party (\"operator\") to manage all of\n   * `msg.sender`'s assets. It also emits the ApprovalForAll event.\n   * @param _operator Address to add to the set of authorized operators.\n   * @param _approved True if the operators is approved, false to revoke approval.\n   */\n  function setApprovalForAll(\n    address _operator,\n    bool _approved\n  )\n    external;\n\n  /**\n   * @dev Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are\n   * considered invalid, and this function throws for queries about the zero address.\n   * @notice Count all NFTs assigned to an owner.\n   * @param _owner Address for whom to query the balance.\n   * @return Balance of _owner.\n   */\n  function balanceOf(\n    address _owner\n  )\n    external\n    view\n    returns (uint256);\n\n  /**\n   * @notice Find the owner of an NFT.\n   * @dev Returns the address of the owner of the NFT. NFTs assigned to the zero address are\n   * considered invalid, and queries about them do throw.\n   * @param _tokenId The identifier for an NFT.\n   * @return Address of _tokenId owner.\n   */\n  function ownerOf(\n    uint256 _tokenId\n  )\n    external\n    view\n    returns (address);\n\n  /**\n   * @notice Throws if `_tokenId` is not a valid NFT.\n   * @dev Get the approved address for a single NFT.\n   * @param _tokenId The NFT to find the approved address for.\n   * @return Address that _tokenId is approved for.\n   */\n  function getApproved(\n    uint256 _tokenId\n  )\n    external\n    view\n    returns (address);\n\n  /**\n   * @notice Query if an address is an authorized operator for another address.\n   * @dev Returns true if `_operator` is an approved operator for `_owner`, false otherwise.\n   * @param _owner The address that owns the NFTs.\n   * @param _operator The address that acts on behalf of the owner.\n   * @return True if approved for all, false otherwise.\n   */\n  function isApprovedForAll(\n    address _owner,\n    address _operator\n  )\n    external\n    view\n    returns (bool);\n\n}\n"
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/utils/erc165.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @dev A standard for detecting smart contract interfaces. \n * See: https://eips.ethereum.org/EIPS/eip-165.\n */\ninterface ERC165\n{\n\n  /**\n   * @dev Checks if the smart contract includes a specific interface.\n   * This function uses less than 30,000 gas.\n   * @param _interfaceID The interface identifier, as specified in ERC-165.\n   * @return True if _interfaceID is supported, false otherwise.\n   */\n  function supportsInterface(\n    bytes4 _interfaceID\n  )\n    external\n    view\n    returns (bool);\n    \n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol": {
				"ERC721TokenReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-721 interface for accepting safe transfers. See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Handle the receipt of a NFT. The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.",
								"params": {
									"_data": "Additional data with no specified format.",
									"_from": "The address which previously owned the token.",
									"_operator": "The address which called `safeTransferFrom` function.",
									"_tokenId": "The NFT identifier which is being transferred."
								},
								"returns": {
									"_0": "Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 interface for accepting safe transfers. See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Handle the receipt of a NFT. The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Returns `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))` unless throwing.\",\"params\":{\"_data\":\"Additional data with no specified format.\",\"_from\":\"The address which previously owned the token.\",\"_operator\":\"The address which called `safeTransferFrom` function.\",\"_tokenId\":\"The NFT identifier which is being transferred.\"},\"returns\":{\"_0\":\"Returns `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"The contract address is always the message sender. A wallet/broker/auction application MUST implement the wallet interface if it will accept safe transfers.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol\":\"ERC721TokenReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0x99ce9e2c0a810cc6e281c5da9c8b24cffb26f0da6dc9cf422a918f3604f24a02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1de6f77cfd4eef30c77aadb18f024f9d62497a846bbe90ec6d9b1ba8fe952f1\",\"dweb:/ipfs/QmSqJKA5ZyciDR4NXme3tjCyMxfkXMFTaTTGsjmfhZZEso\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"notice": "The contract address is always the message sender. A wallet/broker/auction application MUST implement the wallet interface if it will accept safe transfers."
							}
						},
						"version": 1
					}
				}
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721.sol": {
				"ERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-721 non-fungible token standard. See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or reaffirmed. The zero address indicates there is no approved address. When a Transfer event emits, this also indicates that the approved address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner. The operator can manage all NFTs of the owner."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any number of NFTs may be created and assigned without emitting Transfer. At the time of any transfer, the approved address for that NFT (if any) is reset to none."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
								"params": {
									"_approved": "The new approved NFT controller.",
									"_tokenId": "The NFT to approve."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
								"params": {
									"_owner": "Address for whom to query the balance."
								},
								"returns": {
									"_0": "Balance of _owner."
								}
							},
							"getApproved(uint256)": {
								"details": "Get the approved address for a single NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for."
								},
								"returns": {
									"_0": "Address that _tokenId is approved for."
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `_operator` is an approved operator for `_owner`, false otherwise.",
								"params": {
									"_operator": "The address that acts on behalf of the owner.",
									"_owner": "The address that owns the NFTs."
								},
								"returns": {
									"_0": "True if approved for all, false otherwise."
								}
							},
							"ownerOf(uint256)": {
								"details": "Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT."
								},
								"returns": {
									"_0": "Address of _tokenId owner."
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
								"params": {
									"_from": "The current owner of the NFT.",
									"_to": "The new owner.",
									"_tokenId": "The NFT to transfer."
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
								"params": {
									"_data": "Additional data with no specified format, sent in call to `_to`.",
									"_from": "The current owner of the NFT.",
									"_to": "The new owner.",
									"_tokenId": "The NFT to transfer."
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
								"params": {
									"_approved": "True if the operators is approved, false to revoke approval.",
									"_operator": "Address to add to the set of authorized operators."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.  This function can be changed to payable.",
								"params": {
									"_from": "The current owner of the NFT.",
									"_to": "The new owner.",
									"_tokenId": "The NFT to transfer."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 non-fungible token standard. See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or reaffirmed. The zero address indicates there is no approved address. When a Transfer event emits, this also indicates that the approved address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner. The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any number of NFTs may be created and assigned without emitting Transfer. At the time of any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"The new approved NFT controller.\",\"_tokenId\":\"The NFT to approve.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `_operator` is an approved operator for `_owner`, false otherwise.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_0\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.  This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address.\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"The contract MUST allow multiple operators per owner.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721.sol\":{\"keccak256\":\"0xc3ad568e38940de085b4beba2b74242a433de410bc0a5efb957d5afcf42d5453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61b3a889568966553961a54939db431849ec3c4038dbe2ae108bc8cc92a0d55\",\"dweb:/ipfs/QmUiXGskuzSbdSydkDoLRGuxqN5MERxnXpfBy2WtkDCpNy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner."
							},
							"getApproved(uint256)": {
								"notice": "Throws if `_tokenId` is not a valid NFT."
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address."
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT."
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
							},
							"setApprovalForAll(address,bool)": {
								"notice": "The contract MUST allow multiple operators per owner."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost."
							}
						},
						"version": 1
					}
				}
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol": {
				"NFToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of ERC-721 non-fungible token standard.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
								"params": {
									"_approved": "Address to be approved for the given NFT ID.",
									"_tokenId": "ID of the token to be approved."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
								"params": {
									"_owner": "Address for whom to query the balance."
								},
								"returns": {
									"_0": "Balance of _owner."
								}
							},
							"constructor": {
								"details": "Contract constructor."
							},
							"getApproved(uint256)": {
								"details": "Get the approved address for a single NFT.",
								"params": {
									"_tokenId": "ID of the NFT to query the approval of."
								},
								"returns": {
									"_0": "Address that _tokenId is approved for."
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Checks if `_operator` is an approved operator for `_owner`.",
								"params": {
									"_operator": "The address that acts on behalf of the owner.",
									"_owner": "The address that owns the NFTs."
								},
								"returns": {
									"_0": "True if approved for all, false otherwise."
								}
							},
							"ownerOf(uint256)": {
								"details": "Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT."
								},
								"returns": {
									"_owner": "Address of _tokenId owner."
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
								"params": {
									"_from": "The current owner of the NFT.",
									"_to": "The new owner.",
									"_tokenId": "The NFT to transfer."
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
								"params": {
									"_data": "Additional data with no specified format, sent in call to `_to`.",
									"_from": "The current owner of the NFT.",
									"_to": "The new owner.",
									"_tokenId": "The NFT to transfer."
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
								"params": {
									"_approved": "True if the operators is approved, false to revoke approval.",
									"_operator": "Address to add to the set of authorized operators."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Function to check which interfaces are suported by this contract.",
								"params": {
									"_interfaceID": "Id of the interface."
								},
								"returns": {
									"_0": "True if _interfaceID is supported, false otherwise."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
								"params": {
									"_from": "The current owner of the NFT.",
									"_to": "The new owner.",
									"_tokenId": "The NFT to transfer."
								}
							}
						},
						"stateVariables": {
							"MAGIC_ON_ERC721_RECEIVED": {
								"details": "Magic value of a smart contract that can receive NFT. Equal to: bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))."
							},
							"ZERO_ADDRESS": {
								"details": "List of revert message codes. Implementing dApp should handle showing the correct message. Based on 0xcert framework error codes."
							},
							"idToApproval": {
								"details": "Mapping from NFT ID to approved address."
							},
							"idToOwner": {
								"details": "A mapping from NFT ID to the address that owns it."
							},
							"ownerToNFTokenCount": {
								"details": "Mapping from owner address to count of their tokens."
							},
							"ownerToOperators": {
								"details": "Mapping from owner address to mapping of operator addresses."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":269:12806  contract NFToken is... */\n  mstore(0x40, 0x80)\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2754:2829  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":463:467  true */\n  0x01\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":429:448  supportedInterfaces */\n  0x00\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":429:460  supportedInterfaces[0x01ffc9a7] */\n  dup1\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":449:459  0x01ffc9a7 */\n  0x01ffc9a7\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":429:460  supportedInterfaces[0x01ffc9a7] */\n  0xe0\n  shl\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":429:467  supportedInterfaces[0x01ffc9a7] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2810:2814  true */\n  0x01\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2776:2795  supportedInterfaces */\n  0x00\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2776:2807  supportedInterfaces[0x80ac58cd] */\n  dup1\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2796:2806  0x80ac58cd */\n  0x80ac58cd\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2776:2807  supportedInterfaces[0x80ac58cd] */\n  0xe0\n  shl\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2776:2814  supportedInterfaces[0x80ac58cd] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":269:12806  contract NFToken is... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":269:12806  contract NFToken is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":685:848  function supportsInterface(... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7909:8082  function getApproved(... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5770:6108  function approve(... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5020:5358  function transferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":4286:4456  function safeTransferFrom(... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7475:7673  function ownerOf(... */\n    tag_8:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7019:7213  function balanceOf(... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6510:6733  function setApprovalForAll(... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":3687:3886  function safeTransferFrom(... */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8343:8525  function isApprovedForAll(... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":685:848  function supportsInterface(... */\n    tag_17:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":789:793  bool */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":810:829  supportedInterfaces */\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":810:843  supportedInterfaces[_interfaceID] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":830:842  _interfaceID */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":810:843  supportedInterfaces[_interfaceID] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":803:843  return supportedInterfaces[_interfaceID] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":685:848  function supportsInterface(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7909:8082  function getApproved(... */\n    tag_23:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8031:8038  address */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8008:8016  _tokenId */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2676:2677  0 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2678  idToOwner[_tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2654  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2664  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2655:2663  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2664  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2678  idToOwner[_tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2680:2693  NOT_VALID_NFT */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2637:2694  require(idToOwner[_tokenId] != address(0), NOT_VALID_NFT) */\n      swap1\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8055:8067  idToApproval */\n      0x02\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8055:8077  idToApproval[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8068:8076  _tokenId */\n      dup5\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8055:8077  idToApproval[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8048:8077  return idToApproval[_tokenId] */\n      swap2\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7909:8082  function getApproved(... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5770:6108  function approve(... */\n    tag_29:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5877:5885  _tokenId */\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1863:1881  address tokenOwner */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1884:1893  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1884:1903  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1894:1902  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1884:1903  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1863:1903  address tokenOwner = idToOwner[_tokenId] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1938:1948  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1924:1948  tokenOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1924:1934  tokenOwner */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1924:1948  tokenOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1924:1992  tokenOwner == msg.sender || ownerToOperators[tokenOwner][msg.sender] */\n      dup1\n      tag_67\n      jumpi\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1952:1968  ownerToOperators */\n      0x04\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1952:1980  ownerToOperators[tokenOwner] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1969:1979  tokenOwner */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1952:1980  ownerToOperators[tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1952:1992  ownerToOperators[tokenOwner][msg.sender] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1981:1991  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1952:1992  ownerToOperators[tokenOwner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1924:1992  tokenOwner == msg.sender || ownerToOperators[tokenOwner][msg.sender] */\n    tag_67:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2000:2021  NOT_OWNER_OR_OPERATOR */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030330000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1909:2027  require(... */\n      swap1\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5904:5912  _tokenId */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2676:2677  0 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2678  idToOwner[_tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2654  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2664  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2655:2663  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2664  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2678  idToOwner[_tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2680:2693  NOT_VALID_NFT */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2637:2694  require(idToOwner[_tokenId] != address(0), NOT_VALID_NFT) */\n      swap1\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5922:5940  address tokenOwner */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5943:5952  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5943:5962  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5953:5961  _tokenId */\n      dup7\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5943:5962  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5922:5962  address tokenOwner = idToOwner[_tokenId] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5989:5999  tokenOwner */\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5976:5999  _approved != tokenOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5976:5985  _approved */\n      dup7\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5976:5999  _approved != tokenOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6001:6009  IS_OWNER */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030380000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5968:6010  require(_approved != tokenOwner, IS_OWNER) */\n      swap1\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6042:6051  _approved */\n      dup6\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6017:6029  idToApproval */\n      0x02\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6017:6039  idToApproval[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6030:6038  _tokenId */\n      dup8\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6017:6039  idToApproval[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6017:6051  idToApproval[_tokenId] = _approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6094:6102  _tokenId */\n      dup5\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6083:6092  _approved */\n      dup7\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6062:6103  Approval(tokenOwner, _approved, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6071:6081  tokenOwner */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6062:6103  Approval(tokenOwner, _approved, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5916:6108  {... */\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2033:2034  _ */\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1857:2039  {... */\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5770:6108  function approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5020:5358  function transferFrom(... */\n    tag_33:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5146:5154  _tokenId */\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2227:2245  address tokenOwner */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2248:2257  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2248:2267  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2258:2266  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2248:2267  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2227:2267  address tokenOwner = idToOwner[_tokenId] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2302:2312  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2312  tokenOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2298  tokenOwner */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2312  tokenOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2358  tokenOwner == msg.sender... */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2348:2358  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2322:2358  idToApproval[_tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2322:2334  idToApproval */\n      0x02\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2322:2344  idToApproval[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2335:2343  _tokenId */\n      dup5\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2322:2344  idToApproval[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2322:2358  idToApproval[_tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2358  tokenOwner == msg.sender... */\n    tag_77:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2408  tokenOwner == msg.sender... */\n      dup1\n      tag_78\n      jumpi\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2368:2384  ownerToOperators */\n      0x04\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2368:2396  ownerToOperators[tokenOwner] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2385:2395  tokenOwner */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2368:2396  ownerToOperators[tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2368:2408  ownerToOperators[tokenOwner][msg.sender] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2397:2407  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2368:2408  ownerToOperators[tokenOwner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2408  tokenOwner == msg.sender... */\n    tag_78:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2416:2446  NOT_OWNER_APPROVED_OR_OPERATOR */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030340000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2273:2452  require(... */\n      swap1\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5173:5181  _tokenId */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2676:2677  0 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2678  idToOwner[_tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2654  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2664  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2655:2663  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2664  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2678  idToOwner[_tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2680:2693  NOT_VALID_NFT */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2637:2694  require(idToOwner[_tokenId] != address(0), NOT_VALID_NFT) */\n      swap1\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5191:5209  address tokenOwner */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5212:5221  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5212:5231  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5222:5230  _tokenId */\n      dup7\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5212:5231  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5191:5231  address tokenOwner = idToOwner[_tokenId] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5259:5264  _from */\n      dup7\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5245:5264  tokenOwner == _from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5245:5255  tokenOwner */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5245:5264  tokenOwner == _from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5266:5275  NOT_OWNER */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030370000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5237:5276  require(tokenOwner == _from, NOT_OWNER) */\n      swap1\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5305:5306  0 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5290:5307  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5290:5293  _to */\n      dup7\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5290:5307  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5309:5321  ZERO_ADDRESS */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030310000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5282:5322  require(_to != address(0), ZERO_ADDRESS) */\n      swap1\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5329:5353  _transfer(_to, _tokenId) */\n      tag_89\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5339:5342  _to */\n      dup7\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5344:5352  _tokenId */\n      dup7\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5329:5338  _transfer */\n      tag_90\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5329:5353  _transfer(_to, _tokenId) */\n      jump\t// in\n    tag_89:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5185:5358  {... */\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2458:2459  _ */\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2221:2464  {... */\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":5020:5358  function transferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":4286:4456  function safeTransferFrom(... */\n    tag_36:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":4408:4451  _safeTransferFrom(_from, _to, _tokenId, \"\") */\n      tag_92\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":4426:4431  _from */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":4433:4436  _to */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":4438:4446  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":4408:4451  _safeTransferFrom(_from, _to, _tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":4408:4425  _safeTransferFrom */\n      tag_93\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":4408:4451  _safeTransferFrom(_from, _to, _tokenId, \"\") */\n      jump\t// in\n    tag_92:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":4286:4456  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7475:7673  function ownerOf(... */\n    tag_39:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7566:7580  address _owner */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7599:7608  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7599:7618  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7609:7617  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7599:7618  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7590:7618  _owner = idToOwner[_tokenId] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7650:7651  0 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7632:7652  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7632:7638  _owner */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7632:7652  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7654:7667  NOT_VALID_NFT */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7624:7668  require(_owner != address(0), NOT_VALID_NFT) */\n      swap1\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7475:7673  function ownerOf(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7019:7213  function balanceOf(... */\n    tag_44:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7110:7117  uint256 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7153:7154  0 */\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7135:7155  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7135:7141  _owner */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7135:7155  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7157:7169  ZERO_ADDRESS */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030310000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7127:7170  require(_owner != address(0), ZERO_ADDRESS) */\n      swap1\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7183:7208  _getOwnerNFTCount(_owner) */\n      tag_100\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7201:7207  _owner */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7183:7200  _getOwnerNFTCount */\n      tag_101\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7183:7208  _getOwnerNFTCount(_owner) */\n      jump\t// in\n    tag_100:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7176:7208  return _getOwnerNFTCount(_owner) */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":7019:7213  function balanceOf(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6510:6733  function setApprovalForAll(... */\n    tag_50:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6660:6669  _approved */\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6618:6634  ownerToOperators */\n      0x04\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6618:6646  ownerToOperators[msg.sender] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6635:6645  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6618:6646  ownerToOperators[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6618:6657  ownerToOperators[msg.sender][_operator] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6647:6656  _operator */\n      dup5\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6618:6657  ownerToOperators[msg.sender][_operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6618:6669  ownerToOperators[msg.sender][_operator] = _approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6707:6716  _operator */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6680:6728  ApprovalForAll(msg.sender, _operator, _approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6695:6705  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6680:6728  ApprovalForAll(msg.sender, _operator, _approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6718:6727  _approved */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6680:6728  ApprovalForAll(msg.sender, _operator, _approved) */\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":6510:6733  function setApprovalForAll(... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":3687:3886  function safeTransferFrom(... */\n    tag_54:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":3835:3881  _safeTransferFrom(_from, _to, _tokenId, _data) */\n      tag_105\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":3853:3858  _from */\n      dup6\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":3860:3863  _to */\n      dup6\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":3865:3873  _tokenId */\n      dup6\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":3875:3880  _data */\n      dup6\n      dup6\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":3835:3881  _safeTransferFrom(_from, _to, _tokenId, _data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":3835:3852  _safeTransferFrom */\n      tag_93\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":3835:3881  _safeTransferFrom(_from, _to, _tokenId, _data) */\n      jump\t// in\n    tag_105:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":3687:3886  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8343:8525  function isApprovedForAll(... */\n    tag_58:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8464:8468  bool */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8485:8501  ownerToOperators */\n      0x04\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8485:8509  ownerToOperators[_owner] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8502:8508  _owner */\n      dup5\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8485:8509  ownerToOperators[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8485:8520  ownerToOperators[_owner][_operator] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8510:8519  _operator */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8485:8520  ownerToOperators[_owner][_operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8478:8520  return ownerToOperators[_owner][_operator] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8343:8525  function isApprovedForAll(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8708:8982  function _transfer(... */\n    tag_90:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8803:8815  address from */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8818:8827  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8818:8837  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8828:8836  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8818:8837  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8803:8837  address from = idToOwner[_tokenId] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8843:8867  _clearApproval(_tokenId) */\n      tag_108\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8858:8866  _tokenId */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8843:8857  _clearApproval */\n      tag_109\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8843:8867  _clearApproval(_tokenId) */\n      jump\t// in\n    tag_108:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8874:8904  _removeNFToken(from, _tokenId) */\n      tag_110\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8889:8893  from */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8895:8903  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8874:8888  _removeNFToken */\n      tag_111\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8874:8904  _removeNFToken(from, _tokenId) */\n      jump\t// in\n    tag_110:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8910:8936  _addNFToken(_to, _tokenId) */\n      tag_112\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8922:8925  _to */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8927:8935  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8910:8921  _addNFToken */\n      tag_113\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8910:8936  _addNFToken(_to, _tokenId) */\n      jump\t// in\n    tag_112:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8968:8976  _tokenId */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8963:8966  _to */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8948:8977  Transfer(from, _to, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8957:8961  from */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8948:8977  Transfer(from, _to, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8797:8982  {... */\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":8708:8982  function _transfer(... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12003:12572  function _safeTransferFrom(... */\n    tag_93:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12144:12152  _tokenId */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2227:2245  address tokenOwner */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2248:2257  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2248:2267  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2258:2266  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2248:2267  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2227:2267  address tokenOwner = idToOwner[_tokenId] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2302:2312  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2312  tokenOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2298  tokenOwner */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2312  tokenOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2358  tokenOwner == msg.sender... */\n      dup1\n      tag_115\n      jumpi\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2348:2358  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2322:2358  idToApproval[_tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2322:2334  idToApproval */\n      0x02\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2322:2344  idToApproval[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2335:2343  _tokenId */\n      dup5\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2322:2344  idToApproval[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2322:2358  idToApproval[_tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2358  tokenOwner == msg.sender... */\n    tag_115:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2408  tokenOwner == msg.sender... */\n      dup1\n      tag_116\n      jumpi\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2368:2384  ownerToOperators */\n      0x04\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2368:2396  ownerToOperators[tokenOwner] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2385:2395  tokenOwner */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2368:2396  ownerToOperators[tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2368:2408  ownerToOperators[tokenOwner][msg.sender] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2397:2407  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2368:2408  ownerToOperators[tokenOwner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2288:2408  tokenOwner == msg.sender... */\n    tag_116:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2416:2446  NOT_OWNER_APPROVED_OR_OPERATOR */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030340000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2273:2452  require(... */\n      swap1\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12171:12179  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2676:2677  0 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2678  idToOwner[_tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2654  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2664  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2655:2663  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2664  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2645:2678  idToOwner[_tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2680:2693  NOT_VALID_NFT */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2637:2694  require(idToOwner[_tokenId] != address(0), NOT_VALID_NFT) */\n      swap1\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12189:12207  address tokenOwner */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12210:12219  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12210:12229  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12220:12228  _tokenId */\n      dup8\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12210:12229  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12189:12229  address tokenOwner = idToOwner[_tokenId] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12257:12262  _from */\n      dup8\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12243:12262  tokenOwner == _from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12243:12253  tokenOwner */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12243:12262  tokenOwner == _from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12264:12273  NOT_OWNER */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030370000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12235:12274  require(tokenOwner == _from, NOT_OWNER) */\n      swap1\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12303:12304  0 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12288:12305  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12288:12291  _to */\n      dup8\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12288:12305  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12307:12319  ZERO_ADDRESS */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030310000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12280:12320  require(_to != address(0), ZERO_ADDRESS) */\n      swap1\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12327:12351  _transfer(_to, _tokenId) */\n      tag_127\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12337:12340  _to */\n      dup8\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12342:12350  _tokenId */\n      dup8\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12327:12336  _transfer */\n      tag_90\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12327:12351  _transfer(_to, _tokenId) */\n      jump\t// in\n    tag_127:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12362:12378  _to.isContract() */\n      tag_128\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12362:12365  _to */\n      dup8\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12362:12376  _to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_129\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12362:12378  _to.isContract() */\n      jump\t// in\n    tag_128:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12358:12568  if (_to.isContract())... */\n      iszero\n      tag_130\n      jumpi\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12392:12405  bytes4 retval */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12428:12431  _to */\n      dup8\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12408:12449  ERC721TokenReceiver(_to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12450:12460  msg.sender */\n      caller\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12462:12467  _from */\n      dup12\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12469:12477  _tokenId */\n      dup11\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12479:12484  _data */\n      dup11\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12408:12485  ERC721TokenReceiver(_to).onERC721Received(msg.sender, _from, _tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12392:12485  bytes4 retval = ERC721TokenReceiver(_to).onERC721Received(msg.sender, _from, _tokenId, _data) */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":1111:1121  0x150b7a02 */\n      0x150b7a02\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12511:12535  MAGIC_ON_ERC721_RECEIVED */\n      0xe0\n      shl\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12501:12535  retval == MAGIC_ON_ERC721_RECEIVED */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12501:12507  retval */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12501:12535  retval == MAGIC_ON_ERC721_RECEIVED */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12537:12560  NOT_ABLE_TO_RECEIVE_NFT */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030350000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12493:12561  require(retval == MAGIC_ON_ERC721_RECEIVED, NOT_ABLE_TO_RECEIVE_NFT) */\n      swap1\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12384:12568  {... */\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12358:12568  if (_to.isContract())... */\n    tag_130:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12183:12572  {... */\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2458:2459  _ */\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":2221:2464  {... */\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12003:12572  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11580:11734  function _getOwnerNFTCount(... */\n    tag_101:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11678:11685  uint256 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11702:11721  ownerToNFTokenCount */\n      0x03\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11702:11729  ownerToNFTokenCount[_owner] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11722:11728  _owner */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11702:11729  ownerToNFTokenCount[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11695:11729  return ownerToNFTokenCount[_owner] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11580:11734  function _getOwnerNFTCount(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12699:12803  function _clearApproval(... */\n    tag_109:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12776:12788  idToApproval */\n      0x02\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12776:12798  idToApproval[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12789:12797  _tokenId */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12776:12798  idToApproval[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12769:12798  delete idToApproval[_tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":12699:12803  function _clearApproval(... */\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10578:10802  function _removeNFToken(... */\n    tag_111:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10711:10716  _from */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10688:10716  idToOwner[_tokenId] == _from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10688:10697  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10688:10707  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10698:10706  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10688:10707  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10688:10716  idToOwner[_tokenId] == _from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10718:10727  NOT_OWNER */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030370000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10680:10728  require(idToOwner[_tokenId] == _from, NOT_OWNER) */\n      swap1\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10764:10765  1 */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10734:10753  ownerToNFTokenCount */\n      0x03\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10734:10760  ownerToNFTokenCount[_from] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10754:10759  _from */\n      dup5\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10734:10760  ownerToNFTokenCount[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10734:10765  ownerToNFTokenCount[_from] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10778:10787  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10778:10797  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10788:10796  _tokenId */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10778:10797  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10771:10797  delete idToOwner[_tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":10578:10802  function _removeNFToken(... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11061:11292  function _addNFToken(... */\n    tag_113:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11197:11198  0 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11166:11199  idToOwner[_tokenId] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11166:11175  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11166:11185  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11176:11184  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11166:11185  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11166:11199  idToOwner[_tokenId] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11201:11219  NFT_ALREADY_EXISTS */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x3030333030360000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11158:11220  require(idToOwner[_tokenId] == address(0), NFT_ALREADY_EXISTS) */\n      swap1\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11249:11252  _to */\n      dup2\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11227:11236  idToOwner */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11227:11246  idToOwner[_tokenId] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11237:11245  _tokenId */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11227:11246  idToOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11227:11252  idToOwner[_tokenId] = _to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11286:11287  1 */\n      0x01\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11258:11277  ownerToNFTokenCount */\n      0x03\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11258:11282  ownerToNFTokenCount[_to] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11278:11281  _to */\n      dup5\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11258:11282  ownerToNFTokenCount[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11258:11287  ownerToNFTokenCount[_to] += 1 */\n      dup3\n      dup3\n      sload\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":11061:11292  function _addNFToken(... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":467:1229  function isContract(... */\n    tag_129:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":545:562  bool addressCheck */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":977:993  bytes32 codehash */\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":999:1018  bytes32 accountHash */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1021:1087  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":999:1087  bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0x00\n      shl\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1128:1133  _addr */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1116:1134  extcodehash(_addr) */\n      extcodehash\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1104:1134  codehash := extcodehash(_addr) */\n      swap2\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1193:1196  0x0 */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1181:1196  codehash != 0x0 */\n      dup1\n      shl\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1181:1189  codehash */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1181:1196  codehash != 0x0 */\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1181:1223  codehash != 0x0 && codehash != accountHash */\n      dup1\n      iszero\n      tag_153\n      jumpi\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1212:1223  accountHash */\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1200:1208  codehash */\n      dup3\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1200:1223  codehash != accountHash */\n      eq\n      iszero\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1181:1223  codehash != 0x0 && codehash != accountHash */\n    tag_153:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":1165:1224  addressCheck = (codehash != 0x0 && codehash != accountHash) */\n      swap3\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":566:1229  {... */\n      pop\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":467:1229  function isContract(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_155:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_157\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:285   */\n    tag_159:\n        /* \"#utility.yul\":195:200   */\n      0x00\n        /* \"#utility.yul\":233:239   */\n      dup2\n        /* \"#utility.yul\":220:240   */\n      calldataload\n        /* \"#utility.yul\":211:240   */\n      swap1\n      pop\n        /* \"#utility.yul\":249:279   */\n      tag_161\n        /* \"#utility.yul\":273:278   */\n      dup2\n        /* \"#utility.yul\":249:279   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":152:285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":291:428   */\n    tag_163:\n        /* \"#utility.yul\":336:341   */\n      0x00\n        /* \"#utility.yul\":374:380   */\n      dup2\n        /* \"#utility.yul\":361:381   */\n      calldataload\n        /* \"#utility.yul\":352:381   */\n      swap1\n      pop\n        /* \"#utility.yul\":390:422   */\n      tag_165\n        /* \"#utility.yul\":416:421   */\n      dup2\n        /* \"#utility.yul\":390:422   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":291:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:575   */\n    tag_167:\n        /* \"#utility.yul\":490:495   */\n      0x00\n        /* \"#utility.yul\":521:527   */\n      dup2\n        /* \"#utility.yul\":515:528   */\n      mload\n        /* \"#utility.yul\":506:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":537:569   */\n      tag_169\n        /* \"#utility.yul\":563:568   */\n      dup2\n        /* \"#utility.yul\":537:569   */\n      tag_166\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":434:575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":594:1146   */\n    tag_170:\n        /* \"#utility.yul\":651:659   */\n      0x00\n        /* \"#utility.yul\":661:667   */\n      dup1\n        /* \"#utility.yul\":711:714   */\n      dup4\n        /* \"#utility.yul\":704:708   */\n      0x1f\n        /* \"#utility.yul\":696:702   */\n      dup5\n        /* \"#utility.yul\":692:709   */\n      add\n        /* \"#utility.yul\":688:715   */\n      slt\n        /* \"#utility.yul\":678:800   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":719:798   */\n      tag_173\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":678:800   */\n    tag_172:\n        /* \"#utility.yul\":832:838   */\n      dup3\n        /* \"#utility.yul\":819:839   */\n      calldataload\n        /* \"#utility.yul\":809:839   */\n      swap1\n      pop\n        /* \"#utility.yul\":862:880   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":854:860   */\n      dup2\n        /* \"#utility.yul\":851:881   */\n      gt\n        /* \"#utility.yul\":848:965   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":884:963   */\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":848:965   */\n    tag_175:\n        /* \"#utility.yul\":998:1002   */\n      0x20\n        /* \"#utility.yul\":990:996   */\n      dup4\n        /* \"#utility.yul\":986:1003   */\n      add\n        /* \"#utility.yul\":974:1003   */\n      swap2\n      pop\n        /* \"#utility.yul\":1052:1055   */\n      dup4\n        /* \"#utility.yul\":1044:1048   */\n      0x01\n        /* \"#utility.yul\":1036:1042   */\n      dup3\n        /* \"#utility.yul\":1032:1049   */\n      mul\n        /* \"#utility.yul\":1022:1030   */\n      dup4\n        /* \"#utility.yul\":1018:1050   */\n      add\n        /* \"#utility.yul\":1015:1056   */\n      gt\n        /* \"#utility.yul\":1012:1140   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":1059:1138   */\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1012:1140   */\n    tag_178:\n        /* \"#utility.yul\":594:1146   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1152:1291   */\n    tag_181:\n        /* \"#utility.yul\":1198:1203   */\n      0x00\n        /* \"#utility.yul\":1236:1242   */\n      dup2\n        /* \"#utility.yul\":1223:1243   */\n      calldataload\n        /* \"#utility.yul\":1214:1243   */\n      swap1\n      pop\n        /* \"#utility.yul\":1252:1285   */\n      tag_183\n        /* \"#utility.yul\":1279:1284   */\n      dup2\n        /* \"#utility.yul\":1252:1285   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1152:1291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1297:1626   */\n    tag_43:\n        /* \"#utility.yul\":1356:1362   */\n      0x00\n        /* \"#utility.yul\":1405:1407   */\n      0x20\n        /* \"#utility.yul\":1393:1402   */\n      dup3\n        /* \"#utility.yul\":1384:1391   */\n      dup5\n        /* \"#utility.yul\":1380:1403   */\n      sub\n        /* \"#utility.yul\":1376:1408   */\n      slt\n        /* \"#utility.yul\":1373:1492   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1411:1490   */\n      tag_187\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1373:1492   */\n    tag_186:\n        /* \"#utility.yul\":1531:1532   */\n      0x00\n        /* \"#utility.yul\":1556:1609   */\n      tag_189\n        /* \"#utility.yul\":1601:1608   */\n      dup5\n        /* \"#utility.yul\":1592:1598   */\n      dup3\n        /* \"#utility.yul\":1581:1590   */\n      dup6\n        /* \"#utility.yul\":1577:1599   */\n      add\n        /* \"#utility.yul\":1556:1609   */\n      tag_155\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1546:1609   */\n      swap2\n      pop\n        /* \"#utility.yul\":1502:1619   */\n      pop\n        /* \"#utility.yul\":1297:1626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1632:2106   */\n    tag_57:\n        /* \"#utility.yul\":1700:1706   */\n      0x00\n        /* \"#utility.yul\":1708:1714   */\n      dup1\n        /* \"#utility.yul\":1757:1759   */\n      0x40\n        /* \"#utility.yul\":1745:1754   */\n      dup4\n        /* \"#utility.yul\":1736:1743   */\n      dup6\n        /* \"#utility.yul\":1732:1755   */\n      sub\n        /* \"#utility.yul\":1728:1760   */\n      slt\n        /* \"#utility.yul\":1725:1844   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":1763:1842   */\n      tag_192\n      tag_188\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1725:1844   */\n    tag_191:\n        /* \"#utility.yul\":1883:1884   */\n      0x00\n        /* \"#utility.yul\":1908:1961   */\n      tag_193\n        /* \"#utility.yul\":1953:1960   */\n      dup6\n        /* \"#utility.yul\":1944:1950   */\n      dup3\n        /* \"#utility.yul\":1933:1942   */\n      dup7\n        /* \"#utility.yul\":1929:1951   */\n      add\n        /* \"#utility.yul\":1908:1961   */\n      tag_155\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1898:1961   */\n      swap3\n      pop\n        /* \"#utility.yul\":1854:1971   */\n      pop\n        /* \"#utility.yul\":2010:2012   */\n      0x20\n        /* \"#utility.yul\":2036:2089   */\n      tag_194\n        /* \"#utility.yul\":2081:2088   */\n      dup6\n        /* \"#utility.yul\":2072:2078   */\n      dup3\n        /* \"#utility.yul\":2061:2070   */\n      dup7\n        /* \"#utility.yul\":2057:2079   */\n      add\n        /* \"#utility.yul\":2036:2089   */\n      tag_155\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2026:2089   */\n      swap2\n      pop\n        /* \"#utility.yul\":1981:2099   */\n      pop\n        /* \"#utility.yul\":1632:2106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2112:2731   */\n    tag_32:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      dup1\n        /* \"#utility.yul\":2205:2211   */\n      0x00\n        /* \"#utility.yul\":2254:2256   */\n      0x60\n        /* \"#utility.yul\":2242:2251   */\n      dup5\n        /* \"#utility.yul\":2233:2240   */\n      dup7\n        /* \"#utility.yul\":2229:2252   */\n      sub\n        /* \"#utility.yul\":2225:2257   */\n      slt\n        /* \"#utility.yul\":2222:2341   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2260:2339   */\n      tag_197\n      tag_188\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2222:2341   */\n    tag_196:\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2405:2458   */\n      tag_198\n        /* \"#utility.yul\":2450:2457   */\n      dup7\n        /* \"#utility.yul\":2441:2447   */\n      dup3\n        /* \"#utility.yul\":2430:2439   */\n      dup8\n        /* \"#utility.yul\":2426:2448   */\n      add\n        /* \"#utility.yul\":2405:2458   */\n      tag_155\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2395:2458   */\n      swap4\n      pop\n        /* \"#utility.yul\":2351:2468   */\n      pop\n        /* \"#utility.yul\":2507:2509   */\n      0x20\n        /* \"#utility.yul\":2533:2586   */\n      tag_199\n        /* \"#utility.yul\":2578:2585   */\n      dup7\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2558:2567   */\n      dup8\n        /* \"#utility.yul\":2554:2576   */\n      add\n        /* \"#utility.yul\":2533:2586   */\n      tag_155\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2523:2586   */\n      swap3\n      pop\n        /* \"#utility.yul\":2478:2596   */\n      pop\n        /* \"#utility.yul\":2635:2637   */\n      0x40\n        /* \"#utility.yul\":2661:2714   */\n      tag_200\n        /* \"#utility.yul\":2706:2713   */\n      dup7\n        /* \"#utility.yul\":2697:2703   */\n      dup3\n        /* \"#utility.yul\":2686:2695   */\n      dup8\n        /* \"#utility.yul\":2682:2704   */\n      add\n        /* \"#utility.yul\":2661:2714   */\n      tag_181\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2651:2714   */\n      swap2\n      pop\n        /* \"#utility.yul\":2606:2724   */\n      pop\n        /* \"#utility.yul\":2112:2731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2737:3700   */\n    tag_53:\n        /* \"#utility.yul\":2834:2840   */\n      0x00\n        /* \"#utility.yul\":2842:2848   */\n      dup1\n        /* \"#utility.yul\":2850:2856   */\n      0x00\n        /* \"#utility.yul\":2858:2864   */\n      dup1\n        /* \"#utility.yul\":2866:2872   */\n      0x00\n        /* \"#utility.yul\":2915:2918   */\n      0x80\n        /* \"#utility.yul\":2903:2912   */\n      dup7\n        /* \"#utility.yul\":2894:2901   */\n      dup9\n        /* \"#utility.yul\":2890:2913   */\n      sub\n        /* \"#utility.yul\":2886:2919   */\n      slt\n        /* \"#utility.yul\":2883:3003   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2922:3001   */\n      tag_203\n      tag_188\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2883:3003   */\n    tag_202:\n        /* \"#utility.yul\":3042:3043   */\n      0x00\n        /* \"#utility.yul\":3067:3120   */\n      tag_204\n        /* \"#utility.yul\":3112:3119   */\n      dup9\n        /* \"#utility.yul\":3103:3109   */\n      dup3\n        /* \"#utility.yul\":3092:3101   */\n      dup10\n        /* \"#utility.yul\":3088:3110   */\n      add\n        /* \"#utility.yul\":3067:3120   */\n      tag_155\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3057:3120   */\n      swap6\n      pop\n        /* \"#utility.yul\":3013:3130   */\n      pop\n        /* \"#utility.yul\":3169:3171   */\n      0x20\n        /* \"#utility.yul\":3195:3248   */\n      tag_205\n        /* \"#utility.yul\":3240:3247   */\n      dup9\n        /* \"#utility.yul\":3231:3237   */\n      dup3\n        /* \"#utility.yul\":3220:3229   */\n      dup10\n        /* \"#utility.yul\":3216:3238   */\n      add\n        /* \"#utility.yul\":3195:3248   */\n      tag_155\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3185:3248   */\n      swap5\n      pop\n        /* \"#utility.yul\":3140:3258   */\n      pop\n        /* \"#utility.yul\":3297:3299   */\n      0x40\n        /* \"#utility.yul\":3323:3376   */\n      tag_206\n        /* \"#utility.yul\":3368:3375   */\n      dup9\n        /* \"#utility.yul\":3359:3365   */\n      dup3\n        /* \"#utility.yul\":3348:3357   */\n      dup10\n        /* \"#utility.yul\":3344:3366   */\n      add\n        /* \"#utility.yul\":3323:3376   */\n      tag_181\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3313:3376   */\n      swap4\n      pop\n        /* \"#utility.yul\":3268:3386   */\n      pop\n        /* \"#utility.yul\":3453:3455   */\n      0x60\n        /* \"#utility.yul\":3442:3451   */\n      dup7\n        /* \"#utility.yul\":3438:3456   */\n      add\n        /* \"#utility.yul\":3425:3457   */\n      calldataload\n        /* \"#utility.yul\":3484:3502   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3476:3482   */\n      dup2\n        /* \"#utility.yul\":3473:3503   */\n      gt\n        /* \"#utility.yul\":3470:3587   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":3506:3585   */\n      tag_208\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3470:3587   */\n    tag_207:\n        /* \"#utility.yul\":3619:3683   */\n      tag_210\n        /* \"#utility.yul\":3675:3682   */\n      dup9\n        /* \"#utility.yul\":3666:3672   */\n      dup3\n        /* \"#utility.yul\":3655:3664   */\n      dup10\n        /* \"#utility.yul\":3651:3673   */\n      add\n        /* \"#utility.yul\":3619:3683   */\n      tag_170\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3601:3683   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3396:3693   */\n      pop\n        /* \"#utility.yul\":2737:3700   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3706:4174   */\n    tag_49:\n        /* \"#utility.yul\":3771:3777   */\n      0x00\n        /* \"#utility.yul\":3779:3785   */\n      dup1\n        /* \"#utility.yul\":3828:3830   */\n      0x40\n        /* \"#utility.yul\":3816:3825   */\n      dup4\n        /* \"#utility.yul\":3807:3814   */\n      dup6\n        /* \"#utility.yul\":3803:3826   */\n      sub\n        /* \"#utility.yul\":3799:3831   */\n      slt\n        /* \"#utility.yul\":3796:3915   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":3834:3913   */\n      tag_213\n      tag_188\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3796:3915   */\n    tag_212:\n        /* \"#utility.yul\":3954:3955   */\n      0x00\n        /* \"#utility.yul\":3979:4032   */\n      tag_214\n        /* \"#utility.yul\":4024:4031   */\n      dup6\n        /* \"#utility.yul\":4015:4021   */\n      dup3\n        /* \"#utility.yul\":4004:4013   */\n      dup7\n        /* \"#utility.yul\":4000:4022   */\n      add\n        /* \"#utility.yul\":3979:4032   */\n      tag_155\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3969:4032   */\n      swap3\n      pop\n        /* \"#utility.yul\":3925:4042   */\n      pop\n        /* \"#utility.yul\":4081:4083   */\n      0x20\n        /* \"#utility.yul\":4107:4157   */\n      tag_215\n        /* \"#utility.yul\":4149:4156   */\n      dup6\n        /* \"#utility.yul\":4140:4146   */\n      dup3\n        /* \"#utility.yul\":4129:4138   */\n      dup7\n        /* \"#utility.yul\":4125:4147   */\n      add\n        /* \"#utility.yul\":4107:4157   */\n      tag_159\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4097:4157   */\n      swap2\n      pop\n        /* \"#utility.yul\":4052:4167   */\n      pop\n        /* \"#utility.yul\":3706:4174   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4180:4654   */\n    tag_28:\n        /* \"#utility.yul\":4248:4254   */\n      0x00\n        /* \"#utility.yul\":4256:4262   */\n      dup1\n        /* \"#utility.yul\":4305:4307   */\n      0x40\n        /* \"#utility.yul\":4293:4302   */\n      dup4\n        /* \"#utility.yul\":4284:4291   */\n      dup6\n        /* \"#utility.yul\":4280:4303   */\n      sub\n        /* \"#utility.yul\":4276:4308   */\n      slt\n        /* \"#utility.yul\":4273:4392   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":4311:4390   */\n      tag_218\n      tag_188\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4273:4392   */\n    tag_217:\n        /* \"#utility.yul\":4431:4432   */\n      0x00\n        /* \"#utility.yul\":4456:4509   */\n      tag_219\n        /* \"#utility.yul\":4501:4508   */\n      dup6\n        /* \"#utility.yul\":4492:4498   */\n      dup3\n        /* \"#utility.yul\":4481:4490   */\n      dup7\n        /* \"#utility.yul\":4477:4499   */\n      add\n        /* \"#utility.yul\":4456:4509   */\n      tag_155\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4446:4509   */\n      swap3\n      pop\n        /* \"#utility.yul\":4402:4519   */\n      pop\n        /* \"#utility.yul\":4558:4560   */\n      0x20\n        /* \"#utility.yul\":4584:4637   */\n      tag_220\n        /* \"#utility.yul\":4629:4636   */\n      dup6\n        /* \"#utility.yul\":4620:4626   */\n      dup3\n        /* \"#utility.yul\":4609:4618   */\n      dup7\n        /* \"#utility.yul\":4605:4627   */\n      add\n        /* \"#utility.yul\":4584:4637   */\n      tag_181\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4574:4637   */\n      swap2\n      pop\n        /* \"#utility.yul\":4529:4647   */\n      pop\n        /* \"#utility.yul\":4180:4654   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4660:4987   */\n    tag_16:\n        /* \"#utility.yul\":4718:4724   */\n      0x00\n        /* \"#utility.yul\":4767:4769   */\n      0x20\n        /* \"#utility.yul\":4755:4764   */\n      dup3\n        /* \"#utility.yul\":4746:4753   */\n      dup5\n        /* \"#utility.yul\":4742:4765   */\n      sub\n        /* \"#utility.yul\":4738:4770   */\n      slt\n        /* \"#utility.yul\":4735:4854   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":4773:4852   */\n      tag_223\n      tag_188\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4735:4854   */\n    tag_222:\n        /* \"#utility.yul\":4893:4894   */\n      0x00\n        /* \"#utility.yul\":4918:4970   */\n      tag_224\n        /* \"#utility.yul\":4962:4969   */\n      dup5\n        /* \"#utility.yul\":4953:4959   */\n      dup3\n        /* \"#utility.yul\":4942:4951   */\n      dup6\n        /* \"#utility.yul\":4938:4960   */\n      add\n        /* \"#utility.yul\":4918:4970   */\n      tag_163\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4908:4970   */\n      swap2\n      pop\n        /* \"#utility.yul\":4864:4980   */\n      pop\n        /* \"#utility.yul\":4660:4987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4993:5342   */\n    tag_137:\n        /* \"#utility.yul\":5062:5068   */\n      0x00\n        /* \"#utility.yul\":5111:5113   */\n      0x20\n        /* \"#utility.yul\":5099:5108   */\n      dup3\n        /* \"#utility.yul\":5090:5097   */\n      dup5\n        /* \"#utility.yul\":5086:5109   */\n      sub\n        /* \"#utility.yul\":5082:5114   */\n      slt\n        /* \"#utility.yul\":5079:5198   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":5117:5196   */\n      tag_227\n      tag_188\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5079:5198   */\n    tag_226:\n        /* \"#utility.yul\":5237:5238   */\n      0x00\n        /* \"#utility.yul\":5262:5325   */\n      tag_228\n        /* \"#utility.yul\":5317:5324   */\n      dup5\n        /* \"#utility.yul\":5308:5314   */\n      dup3\n        /* \"#utility.yul\":5297:5306   */\n      dup6\n        /* \"#utility.yul\":5293:5315   */\n      add\n        /* \"#utility.yul\":5262:5325   */\n      tag_167\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5252:5325   */\n      swap2\n      pop\n        /* \"#utility.yul\":5208:5335   */\n      pop\n        /* \"#utility.yul\":4993:5342   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5348:5677   */\n    tag_22:\n        /* \"#utility.yul\":5407:5413   */\n      0x00\n        /* \"#utility.yul\":5456:5458   */\n      0x20\n        /* \"#utility.yul\":5444:5453   */\n      dup3\n        /* \"#utility.yul\":5435:5442   */\n      dup5\n        /* \"#utility.yul\":5431:5454   */\n      sub\n        /* \"#utility.yul\":5427:5459   */\n      slt\n        /* \"#utility.yul\":5424:5543   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":5462:5541   */\n      tag_231\n      tag_188\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5424:5543   */\n    tag_230:\n        /* \"#utility.yul\":5582:5583   */\n      0x00\n        /* \"#utility.yul\":5607:5660   */\n      tag_232\n        /* \"#utility.yul\":5652:5659   */\n      dup5\n        /* \"#utility.yul\":5643:5649   */\n      dup3\n        /* \"#utility.yul\":5632:5641   */\n      dup6\n        /* \"#utility.yul\":5628:5650   */\n      add\n        /* \"#utility.yul\":5607:5660   */\n      tag_181\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5597:5660   */\n      swap2\n      pop\n        /* \"#utility.yul\":5553:5670   */\n      pop\n        /* \"#utility.yul\":5348:5677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5683:5801   */\n    tag_233:\n        /* \"#utility.yul\":5770:5794   */\n      tag_235\n        /* \"#utility.yul\":5788:5793   */\n      dup2\n        /* \"#utility.yul\":5770:5794   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5765:5768   */\n      dup3\n        /* \"#utility.yul\":5758:5795   */\n      mstore\n        /* \"#utility.yul\":5683:5801   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5807:5916   */\n    tag_237:\n        /* \"#utility.yul\":5888:5909   */\n      tag_239\n        /* \"#utility.yul\":5903:5908   */\n      dup2\n        /* \"#utility.yul\":5888:5909   */\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5883:5886   */\n      dup3\n        /* \"#utility.yul\":5876:5910   */\n      mstore\n        /* \"#utility.yul\":5807:5916   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5922:6282   */\n    tag_241:\n        /* \"#utility.yul\":6008:6011   */\n      0x00\n        /* \"#utility.yul\":6036:6074   */\n      tag_243\n        /* \"#utility.yul\":6068:6073   */\n      dup3\n        /* \"#utility.yul\":6036:6074   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6090:6160   */\n      tag_245\n        /* \"#utility.yul\":6153:6159   */\n      dup2\n        /* \"#utility.yul\":6148:6151   */\n      dup6\n        /* \"#utility.yul\":6090:6160   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6083:6160   */\n      swap4\n      pop\n        /* \"#utility.yul\":6169:6221   */\n      tag_247\n        /* \"#utility.yul\":6214:6220   */\n      dup2\n        /* \"#utility.yul\":6209:6212   */\n      dup6\n        /* \"#utility.yul\":6202:6206   */\n      0x20\n        /* \"#utility.yul\":6195:6200   */\n      dup7\n        /* \"#utility.yul\":6191:6207   */\n      add\n        /* \"#utility.yul\":6169:6221   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":6246:6275   */\n      tag_249\n        /* \"#utility.yul\":6268:6274   */\n      dup2\n        /* \"#utility.yul\":6246:6275   */\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6241:6244   */\n      dup5\n        /* \"#utility.yul\":6237:6276   */\n      add\n        /* \"#utility.yul\":6230:6276   */\n      swap2\n      pop\n        /* \"#utility.yul\":6012:6282   */\n      pop\n        /* \"#utility.yul\":5922:6282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6288:6652   */\n    tag_251:\n        /* \"#utility.yul\":6376:6379   */\n      0x00\n        /* \"#utility.yul\":6404:6443   */\n      tag_253\n        /* \"#utility.yul\":6437:6442   */\n      dup3\n        /* \"#utility.yul\":6404:6443   */\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6459:6530   */\n      tag_255\n        /* \"#utility.yul\":6523:6529   */\n      dup2\n        /* \"#utility.yul\":6518:6521   */\n      dup6\n        /* \"#utility.yul\":6459:6530   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6452:6530   */\n      swap4\n      pop\n        /* \"#utility.yul\":6539:6591   */\n      tag_257\n        /* \"#utility.yul\":6584:6590   */\n      dup2\n        /* \"#utility.yul\":6579:6582   */\n      dup6\n        /* \"#utility.yul\":6572:6576   */\n      0x20\n        /* \"#utility.yul\":6565:6570   */\n      dup7\n        /* \"#utility.yul\":6561:6577   */\n      add\n        /* \"#utility.yul\":6539:6591   */\n      tag_248\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6616:6645   */\n      tag_258\n        /* \"#utility.yul\":6638:6644   */\n      dup2\n        /* \"#utility.yul\":6616:6645   */\n      tag_250\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6611:6614   */\n      dup5\n        /* \"#utility.yul\":6607:6646   */\n      add\n        /* \"#utility.yul\":6600:6646   */\n      swap2\n      pop\n        /* \"#utility.yul\":6380:6652   */\n      pop\n        /* \"#utility.yul\":6288:6652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6658:6776   */\n    tag_259:\n        /* \"#utility.yul\":6745:6769   */\n      tag_261\n        /* \"#utility.yul\":6763:6768   */\n      dup2\n        /* \"#utility.yul\":6745:6769   */\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6740:6743   */\n      dup3\n        /* \"#utility.yul\":6733:6770   */\n      mstore\n        /* \"#utility.yul\":6658:6776   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6782:7004   */\n    tag_25:\n        /* \"#utility.yul\":6875:6879   */\n      0x00\n        /* \"#utility.yul\":6913:6915   */\n      0x20\n        /* \"#utility.yul\":6902:6911   */\n      dup3\n        /* \"#utility.yul\":6898:6916   */\n      add\n        /* \"#utility.yul\":6890:6916   */\n      swap1\n      pop\n        /* \"#utility.yul\":6926:6997   */\n      tag_264\n        /* \"#utility.yul\":6994:6995   */\n      0x00\n        /* \"#utility.yul\":6983:6992   */\n      dup4\n        /* \"#utility.yul\":6979:6996   */\n      add\n        /* \"#utility.yul\":6970:6976   */\n      dup5\n        /* \"#utility.yul\":6926:6997   */\n      tag_233\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6782:7004   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7010:7650   */\n    tag_132:\n        /* \"#utility.yul\":7205:7209   */\n      0x00\n        /* \"#utility.yul\":7243:7246   */\n      0x80\n        /* \"#utility.yul\":7232:7241   */\n      dup3\n        /* \"#utility.yul\":7228:7247   */\n      add\n        /* \"#utility.yul\":7220:7247   */\n      swap1\n      pop\n        /* \"#utility.yul\":7257:7328   */\n      tag_266\n        /* \"#utility.yul\":7325:7326   */\n      0x00\n        /* \"#utility.yul\":7314:7323   */\n      dup4\n        /* \"#utility.yul\":7310:7327   */\n      add\n        /* \"#utility.yul\":7301:7307   */\n      dup8\n        /* \"#utility.yul\":7257:7328   */\n      tag_233\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7338:7410   */\n      tag_267\n        /* \"#utility.yul\":7406:7408   */\n      0x20\n        /* \"#utility.yul\":7395:7404   */\n      dup4\n        /* \"#utility.yul\":7391:7409   */\n      add\n        /* \"#utility.yul\":7382:7388   */\n      dup7\n        /* \"#utility.yul\":7338:7410   */\n      tag_233\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7420:7492   */\n      tag_268\n        /* \"#utility.yul\":7488:7490   */\n      0x40\n        /* \"#utility.yul\":7477:7486   */\n      dup4\n        /* \"#utility.yul\":7473:7491   */\n      add\n        /* \"#utility.yul\":7464:7470   */\n      dup6\n        /* \"#utility.yul\":7420:7492   */\n      tag_259\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7539:7548   */\n      dup2\n        /* \"#utility.yul\":7533:7537   */\n      dup2\n        /* \"#utility.yul\":7529:7549   */\n      sub\n        /* \"#utility.yul\":7524:7526   */\n      0x60\n        /* \"#utility.yul\":7513:7522   */\n      dup4\n        /* \"#utility.yul\":7509:7527   */\n      add\n        /* \"#utility.yul\":7502:7550   */\n      mstore\n        /* \"#utility.yul\":7567:7643   */\n      tag_269\n        /* \"#utility.yul\":7638:7642   */\n      dup2\n        /* \"#utility.yul\":7629:7635   */\n      dup5\n        /* \"#utility.yul\":7567:7643   */\n      tag_241\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7559:7643   */\n      swap1\n      pop\n        /* \"#utility.yul\":7010:7650   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7866   */\n    tag_19:\n        /* \"#utility.yul\":7743:7747   */\n      0x00\n        /* \"#utility.yul\":7781:7783   */\n      0x20\n        /* \"#utility.yul\":7770:7779   */\n      dup3\n        /* \"#utility.yul\":7766:7784   */\n      add\n        /* \"#utility.yul\":7758:7784   */\n      swap1\n      pop\n        /* \"#utility.yul\":7794:7859   */\n      tag_271\n        /* \"#utility.yul\":7856:7857   */\n      0x00\n        /* \"#utility.yul\":7845:7854   */\n      dup4\n        /* \"#utility.yul\":7841:7858   */\n      add\n        /* \"#utility.yul\":7832:7838   */\n      dup5\n        /* \"#utility.yul\":7794:7859   */\n      tag_237\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":7656:7866   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7872:8185   */\n    tag_64:\n        /* \"#utility.yul\":7985:7989   */\n      0x00\n        /* \"#utility.yul\":8023:8025   */\n      0x20\n        /* \"#utility.yul\":8012:8021   */\n      dup3\n        /* \"#utility.yul\":8008:8026   */\n      add\n        /* \"#utility.yul\":8000:8026   */\n      swap1\n      pop\n        /* \"#utility.yul\":8072:8081   */\n      dup2\n        /* \"#utility.yul\":8066:8070   */\n      dup2\n        /* \"#utility.yul\":8062:8082   */\n      sub\n        /* \"#utility.yul\":8058:8059   */\n      0x00\n        /* \"#utility.yul\":8047:8056   */\n      dup4\n        /* \"#utility.yul\":8043:8060   */\n      add\n        /* \"#utility.yul\":8036:8083   */\n      mstore\n        /* \"#utility.yul\":8100:8178   */\n      tag_273\n        /* \"#utility.yul\":8173:8177   */\n      dup2\n        /* \"#utility.yul\":8164:8170   */\n      dup5\n        /* \"#utility.yul\":8100:8178   */\n      tag_251\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8092:8178   */\n      swap1\n      pop\n        /* \"#utility.yul\":7872:8185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8191:8413   */\n    tag_46:\n        /* \"#utility.yul\":8284:8288   */\n      0x00\n        /* \"#utility.yul\":8322:8324   */\n      0x20\n        /* \"#utility.yul\":8311:8320   */\n      dup3\n        /* \"#utility.yul\":8307:8325   */\n      add\n        /* \"#utility.yul\":8299:8325   */\n      swap1\n      pop\n        /* \"#utility.yul\":8335:8406   */\n      tag_275\n        /* \"#utility.yul\":8403:8404   */\n      0x00\n        /* \"#utility.yul\":8392:8401   */\n      dup4\n        /* \"#utility.yul\":8388:8405   */\n      add\n        /* \"#utility.yul\":8379:8385   */\n      dup5\n        /* \"#utility.yul\":8335:8406   */\n      tag_259\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":8191:8413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8500:8598   */\n    tag_244:\n        /* \"#utility.yul\":8551:8557   */\n      0x00\n        /* \"#utility.yul\":8585:8590   */\n      dup2\n        /* \"#utility.yul\":8579:8591   */\n      mload\n        /* \"#utility.yul\":8569:8591   */\n      swap1\n      pop\n        /* \"#utility.yul\":8500:8598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8604:8703   */\n    tag_254:\n        /* \"#utility.yul\":8656:8662   */\n      0x00\n        /* \"#utility.yul\":8690:8695   */\n      dup2\n        /* \"#utility.yul\":8684:8696   */\n      mload\n        /* \"#utility.yul\":8674:8696   */\n      swap1\n      pop\n        /* \"#utility.yul\":8604:8703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8709:8877   */\n    tag_246:\n        /* \"#utility.yul\":8792:8803   */\n      0x00\n        /* \"#utility.yul\":8826:8832   */\n      dup3\n        /* \"#utility.yul\":8821:8824   */\n      dup3\n        /* \"#utility.yul\":8814:8833   */\n      mstore\n        /* \"#utility.yul\":8866:8870   */\n      0x20\n        /* \"#utility.yul\":8861:8864   */\n      dup3\n        /* \"#utility.yul\":8857:8871   */\n      add\n        /* \"#utility.yul\":8842:8871   */\n      swap1\n      pop\n        /* \"#utility.yul\":8709:8877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8883:9052   */\n    tag_256:\n        /* \"#utility.yul\":8967:8978   */\n      0x00\n        /* \"#utility.yul\":9001:9007   */\n      dup3\n        /* \"#utility.yul\":8996:8999   */\n      dup3\n        /* \"#utility.yul\":8989:9008   */\n      mstore\n        /* \"#utility.yul\":9041:9045   */\n      0x20\n        /* \"#utility.yul\":9036:9039   */\n      dup3\n        /* \"#utility.yul\":9032:9046   */\n      add\n        /* \"#utility.yul\":9017:9046   */\n      swap1\n      pop\n        /* \"#utility.yul\":8883:9052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9058:9363   */\n    tag_151:\n        /* \"#utility.yul\":9098:9101   */\n      0x00\n        /* \"#utility.yul\":9117:9137   */\n      tag_283\n        /* \"#utility.yul\":9135:9136   */\n      dup3\n        /* \"#utility.yul\":9117:9137   */\n      tag_262\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":9112:9137   */\n      swap2\n      pop\n        /* \"#utility.yul\":9151:9171   */\n      tag_284\n        /* \"#utility.yul\":9169:9170   */\n      dup4\n        /* \"#utility.yul\":9151:9171   */\n      tag_262\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":9146:9171   */\n      swap3\n      pop\n        /* \"#utility.yul\":9305:9306   */\n      dup3\n        /* \"#utility.yul\":9237:9303   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9233:9307   */\n      sub\n        /* \"#utility.yul\":9230:9231   */\n      dup3\n        /* \"#utility.yul\":9227:9308   */\n      gt\n        /* \"#utility.yul\":9224:9331   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":9311:9329   */\n      tag_286\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9224:9331   */\n    tag_285:\n        /* \"#utility.yul\":9355:9356   */\n      dup3\n        /* \"#utility.yul\":9352:9353   */\n      dup3\n        /* \"#utility.yul\":9348:9357   */\n      add\n        /* \"#utility.yul\":9341:9357   */\n      swap1\n      pop\n        /* \"#utility.yul\":9058:9363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9369:9560   */\n    tag_146:\n        /* \"#utility.yul\":9409:9413   */\n      0x00\n        /* \"#utility.yul\":9429:9449   */\n      tag_289\n        /* \"#utility.yul\":9447:9448   */\n      dup3\n        /* \"#utility.yul\":9429:9449   */\n      tag_262\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":9424:9449   */\n      swap2\n      pop\n        /* \"#utility.yul\":9463:9483   */\n      tag_290\n        /* \"#utility.yul\":9481:9482   */\n      dup4\n        /* \"#utility.yul\":9463:9483   */\n      tag_262\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":9458:9483   */\n      swap3\n      pop\n        /* \"#utility.yul\":9502:9503   */\n      dup3\n        /* \"#utility.yul\":9499:9500   */\n      dup3\n        /* \"#utility.yul\":9496:9504   */\n      lt\n        /* \"#utility.yul\":9493:9527   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":9507:9525   */\n      tag_292\n      tag_287\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":9493:9527   */\n    tag_291:\n        /* \"#utility.yul\":9552:9553   */\n      dup3\n        /* \"#utility.yul\":9549:9550   */\n      dup3\n        /* \"#utility.yul\":9545:9554   */\n      sub\n        /* \"#utility.yul\":9537:9554   */\n      swap1\n      pop\n        /* \"#utility.yul\":9369:9560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9566:9662   */\n    tag_236:\n        /* \"#utility.yul\":9603:9610   */\n      0x00\n        /* \"#utility.yul\":9632:9656   */\n      tag_294\n        /* \"#utility.yul\":9650:9655   */\n      dup3\n        /* \"#utility.yul\":9632:9656   */\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":9621:9656   */\n      swap1\n      pop\n        /* \"#utility.yul\":9566:9662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9668:9758   */\n    tag_240:\n        /* \"#utility.yul\":9702:9709   */\n      0x00\n        /* \"#utility.yul\":9745:9750   */\n      dup2\n        /* \"#utility.yul\":9738:9751   */\n      iszero\n        /* \"#utility.yul\":9731:9752   */\n      iszero\n        /* \"#utility.yul\":9720:9752   */\n      swap1\n      pop\n        /* \"#utility.yul\":9668:9758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9764:9913   */\n    tag_297:\n        /* \"#utility.yul\":9800:9807   */\n      0x00\n        /* \"#utility.yul\":9840:9906   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9833:9838   */\n      dup3\n        /* \"#utility.yul\":9829:9907   */\n      and\n        /* \"#utility.yul\":9818:9907   */\n      swap1\n      pop\n        /* \"#utility.yul\":9764:9913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9919:10045   */\n    tag_295:\n        /* \"#utility.yul\":9956:9963   */\n      0x00\n        /* \"#utility.yul\":9996:10038   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9989:9994   */\n      dup3\n        /* \"#utility.yul\":9985:10039   */\n      and\n        /* \"#utility.yul\":9974:10039   */\n      swap1\n      pop\n        /* \"#utility.yul\":9919:10045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10051:10128   */\n    tag_262:\n        /* \"#utility.yul\":10088:10095   */\n      0x00\n        /* \"#utility.yul\":10117:10122   */\n      dup2\n        /* \"#utility.yul\":10106:10122   */\n      swap1\n      pop\n        /* \"#utility.yul\":10051:10128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10134:10441   */\n    tag_248:\n        /* \"#utility.yul\":10202:10203   */\n      0x00\n        /* \"#utility.yul\":10212:10325   */\n    tag_302:\n        /* \"#utility.yul\":10226:10232   */\n      dup4\n        /* \"#utility.yul\":10223:10224   */\n      dup2\n        /* \"#utility.yul\":10220:10233   */\n      lt\n        /* \"#utility.yul\":10212:10325   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":10311:10312   */\n      dup1\n        /* \"#utility.yul\":10306:10309   */\n      dup3\n        /* \"#utility.yul\":10302:10313   */\n      add\n        /* \"#utility.yul\":10296:10314   */\n      mload\n        /* \"#utility.yul\":10292:10293   */\n      dup2\n        /* \"#utility.yul\":10287:10290   */\n      dup5\n        /* \"#utility.yul\":10283:10294   */\n      add\n        /* \"#utility.yul\":10276:10315   */\n      mstore\n        /* \"#utility.yul\":10248:10250   */\n      0x20\n        /* \"#utility.yul\":10245:10246   */\n      dup2\n        /* \"#utility.yul\":10241:10251   */\n      add\n        /* \"#utility.yul\":10236:10251   */\n      swap1\n      pop\n        /* \"#utility.yul\":10212:10325   */\n      jump(tag_302)\n    tag_304:\n        /* \"#utility.yul\":10343:10349   */\n      dup4\n        /* \"#utility.yul\":10340:10341   */\n      dup2\n        /* \"#utility.yul\":10337:10350   */\n      gt\n        /* \"#utility.yul\":10334:10435   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":10423:10424   */\n      0x00\n        /* \"#utility.yul\":10414:10420   */\n      dup5\n        /* \"#utility.yul\":10409:10412   */\n      dup5\n        /* \"#utility.yul\":10405:10421   */\n      add\n        /* \"#utility.yul\":10398:10425   */\n      mstore\n        /* \"#utility.yul\":10334:10435   */\n    tag_305:\n        /* \"#utility.yul\":10183:10441   */\n      pop\n        /* \"#utility.yul\":10134:10441   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10447:10627   */\n    tag_287:\n        /* \"#utility.yul\":10495:10572   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10492:10493   */\n      0x00\n        /* \"#utility.yul\":10485:10573   */\n      mstore\n        /* \"#utility.yul\":10592:10596   */\n      0x11\n        /* \"#utility.yul\":10589:10590   */\n      0x04\n        /* \"#utility.yul\":10582:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x24\n        /* \"#utility.yul\":10613:10614   */\n      0x00\n        /* \"#utility.yul\":10606:10621   */\n      revert\n        /* \"#utility.yul\":10633:10750   */\n    tag_177:\n        /* \"#utility.yul\":10742:10743   */\n      0x00\n        /* \"#utility.yul\":10739:10740   */\n      dup1\n        /* \"#utility.yul\":10732:10744   */\n      revert\n        /* \"#utility.yul\":10756:10873   */\n    tag_174:\n        /* \"#utility.yul\":10865:10866   */\n      0x00\n        /* \"#utility.yul\":10862:10863   */\n      dup1\n        /* \"#utility.yul\":10855:10867   */\n      revert\n        /* \"#utility.yul\":10879:10996   */\n    tag_180:\n        /* \"#utility.yul\":10988:10989   */\n      0x00\n        /* \"#utility.yul\":10985:10986   */\n      dup1\n        /* \"#utility.yul\":10978:10990   */\n      revert\n        /* \"#utility.yul\":11002:11119   */\n    tag_209:\n        /* \"#utility.yul\":11111:11112   */\n      0x00\n        /* \"#utility.yul\":11108:11109   */\n      dup1\n        /* \"#utility.yul\":11101:11113   */\n      revert\n        /* \"#utility.yul\":11125:11242   */\n    tag_188:\n        /* \"#utility.yul\":11234:11235   */\n      0x00\n        /* \"#utility.yul\":11231:11232   */\n      dup1\n        /* \"#utility.yul\":11224:11236   */\n      revert\n        /* \"#utility.yul\":11248:11350   */\n    tag_250:\n        /* \"#utility.yul\":11289:11295   */\n      0x00\n        /* \"#utility.yul\":11340:11342   */\n      0x1f\n        /* \"#utility.yul\":11336:11343   */\n      not\n        /* \"#utility.yul\":11331:11333   */\n      0x1f\n        /* \"#utility.yul\":11324:11329   */\n      dup4\n        /* \"#utility.yul\":11320:11334   */\n      add\n        /* \"#utility.yul\":11316:11344   */\n      and\n        /* \"#utility.yul\":11306:11344   */\n      swap1\n      pop\n        /* \"#utility.yul\":11248:11350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11356:11478   */\n    tag_158:\n        /* \"#utility.yul\":11429:11453   */\n      tag_314\n        /* \"#utility.yul\":11447:11452   */\n      dup2\n        /* \"#utility.yul\":11429:11453   */\n      tag_236\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11422:11427   */\n      dup2\n        /* \"#utility.yul\":11419:11454   */\n      eq\n        /* \"#utility.yul\":11409:11472   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":11468:11469   */\n      0x00\n        /* \"#utility.yul\":11465:11466   */\n      dup1\n        /* \"#utility.yul\":11458:11470   */\n      revert\n        /* \"#utility.yul\":11409:11472   */\n    tag_315:\n        /* \"#utility.yul\":11356:11478   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11484:11600   */\n    tag_162:\n        /* \"#utility.yul\":11554:11575   */\n      tag_317\n        /* \"#utility.yul\":11569:11574   */\n      dup2\n        /* \"#utility.yul\":11554:11575   */\n      tag_240\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":11547:11552   */\n      dup2\n        /* \"#utility.yul\":11544:11576   */\n      eq\n        /* \"#utility.yul\":11534:11594   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":11590:11591   */\n      0x00\n        /* \"#utility.yul\":11587:11588   */\n      dup1\n        /* \"#utility.yul\":11580:11592   */\n      revert\n        /* \"#utility.yul\":11534:11594   */\n    tag_318:\n        /* \"#utility.yul\":11484:11600   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11606:11726   */\n    tag_166:\n        /* \"#utility.yul\":11678:11701   */\n      tag_320\n        /* \"#utility.yul\":11695:11700   */\n      dup2\n        /* \"#utility.yul\":11678:11701   */\n      tag_297\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":11671:11676   */\n      dup2\n        /* \"#utility.yul\":11668:11702   */\n      eq\n        /* \"#utility.yul\":11658:11720   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":11716:11717   */\n      0x00\n        /* \"#utility.yul\":11713:11714   */\n      dup1\n        /* \"#utility.yul\":11706:11718   */\n      revert\n        /* \"#utility.yul\":11658:11720   */\n    tag_321:\n        /* \"#utility.yul\":11606:11726   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11732:11854   */\n    tag_184:\n        /* \"#utility.yul\":11805:11829   */\n      tag_323\n        /* \"#utility.yul\":11823:11828   */\n      dup2\n        /* \"#utility.yul\":11805:11829   */\n      tag_262\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":11798:11803   */\n      dup2\n        /* \"#utility.yul\":11795:11830   */\n      eq\n        /* \"#utility.yul\":11785:11848   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":11844:11845   */\n      0x00\n        /* \"#utility.yul\":11841:11842   */\n      dup1\n        /* \"#utility.yul\":11834:11846   */\n      revert\n        /* \"#utility.yul\":11785:11848   */\n    tag_324:\n        /* \"#utility.yul\":11732:11854   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b3a1bc0028e2d6c72284551200296829f90cd6ad54b2d9b9f85d1f8fb3192e8964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_288": {
									"entryPoint": null,
									"id": 288,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_866": {
									"entryPoint": null,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000806380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550612081806100c26000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80636352211e116100665780636352211e1461015757806370a0823114610187578063a22cb465146101b7578063b88d4fde146101d3578063e985e9c5146101ef5761009e565b806301ffc9a7146100a3578063081812fc146100d3578063095ea7b31461010357806323b872dd1461011f57806342842e0e1461013b575b600080fd5b6100bd60048036038101906100b89190611c48565b61021f565b6040516100ca9190611dd5565b60405180910390f35b6100ed60048036038101906100e89190611ca2565b610286565b6040516100fa9190611d6e565b60405180910390f35b61011d60048036038101906101189190611c08565b6103a1565b005b61013960048036038101906101349190611aed565b610784565b005b61015560048036038101906101509190611aed565b610bd6565b005b610171600480360381019061016c9190611ca2565b610bf6565b60405161017e9190611d6e565b60405180910390f35b6101a1600480360381019061019c9190611a80565b610cdc565b6040516101ae9190611e12565b60405180910390f35b6101d160048036038101906101cc9190611bc8565b610d96565b005b6101ed60048036038101906101e89190611b40565b610e93565b005b61020960048036038101906102049190611aad565b610eea565b6040516102169190611dd5565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035b9190611df0565b60405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061049a5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303033000000000000000000000000000000000000000000000000000081525090610511576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105089190611df0565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e59190611df0565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030380000000000000000000000000000000000000000000000000000815250906106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c59190611df0565b60405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061085557503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806108e65750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f30303330303400000000000000000000000000000000000000000000000000008152509061095d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109549190611df0565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a319190611df0565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090610b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b109190611df0565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb99190611df0565b60405180910390fd5b50610bcd8686610f7e565b50505050505050565b610bf183838360405180602001604052806000815250611033565b505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd9190611df0565b60405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610d85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7c9190611df0565b60405180910390fd5b50610d8f82611601565b9050919050565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e879190611dd5565b60405180910390a35050565b610ee385858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611033565b5050505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610fbf8261164a565b610fc98183611683565b610fd383836117ee565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061110457503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806111955750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f30303330303400000000000000000000000000000000000000000000000000008152509061120c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112039190611df0565b60405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906112e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e09190611df0565b60405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3030333030370000000000000000000000000000000000000000000000000000815250906113c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113bf9190611df0565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090611471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114689190611df0565b60405180910390fd5b5061147c8787610f7e565b61149b8773ffffffffffffffffffffffffffffffffffffffff16611976565b156115f75760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b81526004016114e19493929190611d89565b602060405180830381600087803b1580156114fb57600080fd5b505af115801561150f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115339190611c75565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f3030333030350000000000000000000000000000000000000000000000000000815250906115f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115eb9190611df0565b60405180910390fd5b50505b5050505050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f30303330303700000000000000000000000000000000000000000000000000008152509061175c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117539190611df0565b60405180910390fd5b506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117ad9190611ebb565b925050819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3030333030360000000000000000000000000000000000000000000000000000815250906118c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118bf9190611df0565b60405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461196b9190611e65565b925050819055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156119b85750808214155b92505050919050565b6000813590506119d081611fef565b92915050565b6000813590506119e581612006565b92915050565b6000813590506119fa8161201d565b92915050565b600081519050611a0f8161201d565b92915050565b60008083601f840112611a2b57611a2a611fca565b5b8235905067ffffffffffffffff811115611a4857611a47611fc5565b5b602083019150836001820283011115611a6457611a63611fcf565b5b9250929050565b600081359050611a7a81612034565b92915050565b600060208284031215611a9657611a95611fd9565b5b6000611aa4848285016119c1565b91505092915050565b60008060408385031215611ac457611ac3611fd9565b5b6000611ad2858286016119c1565b9250506020611ae3858286016119c1565b9150509250929050565b600080600060608486031215611b0657611b05611fd9565b5b6000611b14868287016119c1565b9350506020611b25868287016119c1565b9250506040611b3686828701611a6b565b9150509250925092565b600080600080600060808688031215611b5c57611b5b611fd9565b5b6000611b6a888289016119c1565b9550506020611b7b888289016119c1565b9450506040611b8c88828901611a6b565b935050606086013567ffffffffffffffff811115611bad57611bac611fd4565b5b611bb988828901611a15565b92509250509295509295909350565b60008060408385031215611bdf57611bde611fd9565b5b6000611bed858286016119c1565b9250506020611bfe858286016119d6565b9150509250929050565b60008060408385031215611c1f57611c1e611fd9565b5b6000611c2d858286016119c1565b9250506020611c3e85828601611a6b565b9150509250929050565b600060208284031215611c5e57611c5d611fd9565b5b6000611c6c848285016119eb565b91505092915050565b600060208284031215611c8b57611c8a611fd9565b5b6000611c9984828501611a00565b91505092915050565b600060208284031215611cb857611cb7611fd9565b5b6000611cc684828501611a6b565b91505092915050565b611cd881611eef565b82525050565b611ce781611f01565b82525050565b6000611cf882611e2d565b611d028185611e43565b9350611d12818560208601611f63565b611d1b81611fde565b840191505092915050565b6000611d3182611e38565b611d3b8185611e54565b9350611d4b818560208601611f63565b611d5481611fde565b840191505092915050565b611d6881611f59565b82525050565b6000602082019050611d836000830184611ccf565b92915050565b6000608082019050611d9e6000830187611ccf565b611dab6020830186611ccf565b611db86040830185611d5f565b8181036060830152611dca8184611ced565b905095945050505050565b6000602082019050611dea6000830184611cde565b92915050565b60006020820190508181036000830152611e0a8184611d26565b905092915050565b6000602082019050611e276000830184611d5f565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611e7082611f59565b9150611e7b83611f59565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611eb057611eaf611f96565b5b828201905092915050565b6000611ec682611f59565b9150611ed183611f59565b925082821015611ee457611ee3611f96565b5b828203905092915050565b6000611efa82611f39565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611f81578082015181840152602081019050611f66565b83811115611f90576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611ff881611eef565b811461200357600080fd5b50565b61200f81611f01565b811461201a57600080fd5b50565b61202681611f0d565b811461203157600080fd5b50565b61203d81611f59565b811461204857600080fd5b5056fea2646970667358221220b3a1bc0028e2d6c72284551200296829f90cd6ad54b2d9b9f85d1f8fb3192e8964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2081 DUP1 PUSH2 0xC2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EF JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0xBD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1BC8 JUMP JUMPDEST PUSH2 0xD96 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0xE93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x49A JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030330000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030380000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP6 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x855 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x8E6 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030340000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030370000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xB19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB10 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030310000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xBCD DUP7 DUP7 PUSH2 0xF7E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBF1 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1033 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030310000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xD8F DUP3 PUSH2 0x1601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEE3 DUP6 DUP6 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x1033 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0xFBF DUP3 PUSH2 0x164A JUMP JUMPDEST PUSH2 0xFC9 DUP2 DUP4 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0xFD3 DUP4 DUP4 PUSH2 0x17EE JUMP JUMPDEST DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1104 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1195 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030340000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x120C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1203 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x12E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E0 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030370000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x13C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BF SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030310000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x1471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x147C DUP8 DUP8 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x149B DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1976 JUMP JUMPDEST ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 CALLER DUP12 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x150F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1533 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST SWAP1 POP PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030350000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x15F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15EB SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030370000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x175C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17AD SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030360000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x18C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BF SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x196B SWAP2 SWAP1 PUSH2 0x1E65 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x19B8 JUMPI POP DUP1 DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D0 DUP2 PUSH2 0x1FEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E5 DUP2 PUSH2 0x2006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19FA DUP2 PUSH2 0x201D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A0F DUP2 PUSH2 0x201D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1A2B JUMPI PUSH2 0x1A2A PUSH2 0x1FCA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A47 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1A64 JUMPI PUSH2 0x1A63 PUSH2 0x1FCF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7A DUP2 PUSH2 0x2034 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A95 PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AA4 DUP5 DUP3 DUP6 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AC4 JUMPI PUSH2 0x1AC3 PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AD2 DUP6 DUP3 DUP7 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AE3 DUP6 DUP3 DUP7 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH2 0x1B05 PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B14 DUP7 DUP3 DUP8 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B25 DUP7 DUP3 DUP8 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B36 DUP7 DUP3 DUP8 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B5C JUMPI PUSH2 0x1B5B PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6A DUP9 DUP3 DUP10 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B7B DUP9 DUP3 DUP10 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B8C DUP9 DUP3 DUP10 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1BAC PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST PUSH2 0x1BB9 DUP9 DUP3 DUP10 ADD PUSH2 0x1A15 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BDF JUMPI PUSH2 0x1BDE PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BED DUP6 DUP3 DUP7 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BFE DUP6 DUP3 DUP7 ADD PUSH2 0x19D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C1F JUMPI PUSH2 0x1C1E PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C2D DUP6 DUP3 DUP7 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C3E DUP6 DUP3 DUP7 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5E JUMPI PUSH2 0x1C5D PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C6C DUP5 DUP3 DUP6 ADD PUSH2 0x19EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8B JUMPI PUSH2 0x1C8A PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C99 DUP5 DUP3 DUP6 ADD PUSH2 0x1A00 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x1CB7 PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC6 DUP5 DUP3 DUP6 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD8 DUP2 PUSH2 0x1EEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CE7 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF8 DUP3 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0x1D02 DUP2 DUP6 PUSH2 0x1E43 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D12 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F63 JUMP JUMPDEST PUSH2 0x1D1B DUP2 PUSH2 0x1FDE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D31 DUP3 PUSH2 0x1E38 JUMP JUMPDEST PUSH2 0x1D3B DUP2 DUP6 PUSH2 0x1E54 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D4B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F63 JUMP JUMPDEST PUSH2 0x1D54 DUP2 PUSH2 0x1FDE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D68 DUP2 PUSH2 0x1F59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D9E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x1DAB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x1DB8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D5F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1DCA DUP2 DUP5 PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E0A DUP2 DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E70 DUP3 PUSH2 0x1F59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7B DUP4 PUSH2 0x1F59 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EB0 JUMPI PUSH2 0x1EAF PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC6 DUP3 PUSH2 0x1F59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED1 DUP4 PUSH2 0x1F59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFA DUP3 PUSH2 0x1F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F81 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F66 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F90 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF8 DUP2 PUSH2 0x1EEF JUMP JUMPDEST DUP2 EQ PUSH2 0x2003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x200F DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP2 EQ PUSH2 0x201A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2026 DUP2 PUSH2 0x1F0D JUMP JUMPDEST DUP2 EQ PUSH2 0x2031 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x203D DUP2 PUSH2 0x1F59 JUMP JUMPDEST DUP2 EQ PUSH2 0x2048 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 LOG1 0xBC STOP 0x28 0xE2 0xD6 0xC7 0x22 DUP5 SSTORE SLT STOP 0x29 PUSH9 0x29F90CD6AD54B2D9B9 0xF8 0x5D 0x1F DUP16 0xB3 NOT 0x2E DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "269:12537:2:-:0;;;2754:75;;;;;;;;;;463:4:5;429:19;:31;449:10;429:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2810:4:2;2776:19;:31;2796:10;2776:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;269:12537;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addNFToken_702": {
									"entryPoint": 6126,
									"id": 702,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_clearApproval_799": {
									"entryPoint": 5706,
									"id": 799,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getOwnerNFTCount_715": {
									"entryPoint": 5633,
									"id": 715,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_removeNFToken_669": {
									"entryPoint": 5763,
									"id": 669,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeTransferFrom_787": {
									"entryPoint": 4147,
									"id": 787,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transfer_561": {
									"entryPoint": 3966,
									"id": 561,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@approve_415": {
									"entryPoint": 929,
									"id": 415,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_465": {
									"entryPoint": 3292,
									"id": 465,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_508": {
									"entryPoint": 646,
									"id": 508,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_526": {
									"entryPoint": 3818,
									"id": 526,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_831": {
									"entryPoint": 6518,
									"id": 831,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownerOf_491": {
									"entryPoint": 3062,
									"id": 491,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_309": {
									"entryPoint": 3731,
									"id": 309,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_328": {
									"entryPoint": 3030,
									"id": 328,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_441": {
									"entryPoint": 3478,
									"id": 441,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_880": {
									"entryPoint": 543,
									"id": 880,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_374": {
									"entryPoint": 1924,
									"id": 374,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7561,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 8035,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8133,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8138,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8148,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 8175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11857:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:84:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "233:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "220:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "273:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "249:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "179:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "187:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "195:5:6",
														"type": ""
													}
												],
												"src": "152:133:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "342:86:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "352:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "374:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "361:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "361:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "352:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "416:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "390:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "390:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "390:32:6"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "320:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "328:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "336:5:6",
														"type": ""
													}
												],
												"src": "291:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "496:79:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "506:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "521:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "515:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "515:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "506:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "563:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "537:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "537:32:6"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "474:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "482:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "490:5:6",
														"type": ""
													}
												],
												"src": "434:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "668:478:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "717:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "719:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "719:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "719:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "696:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "704:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "692:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "692:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "711:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "681:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "681:35:6"
															},
															"nodeType": "YulIf",
															"src": "678:122:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "809:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "832:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "819:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "819:20:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "882:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "884:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "884:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "884:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "854:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "862:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "851:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:30:6"
															},
															"nodeType": "YulIf",
															"src": "848:117:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "974:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "990:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "998:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "986:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:17:6"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "974:8:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1057:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1059:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1059:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1059:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:8:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1036:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1044:4:6",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1032:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1032:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:32:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1052:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1015:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1015:41:6"
															},
															"nodeType": "YulIf",
															"src": "1012:128:6"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "635:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "643:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "651:8:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "661:6:6",
														"type": ""
													}
												],
												"src": "594:552:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1204:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1214:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1236:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1223:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1214:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1279:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1252:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1252:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1182:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1190:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1198:5:6",
														"type": ""
													}
												],
												"src": "1152:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1409:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1411:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1411:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1411:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1384:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1380:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1380:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1405:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1376:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:32:6"
															},
															"nodeType": "YulIf",
															"src": "1373:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1502:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1517:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1531:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1521:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1546:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1581:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1592:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1577:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1577:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1601:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1556:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1556:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1546:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1333:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1344:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1356:6:6",
														"type": ""
													}
												],
												"src": "1297:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1715:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1761:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1763:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1763:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1763:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1736:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1745:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1732:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1732:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1757:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1728:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1728:32:6"
															},
															"nodeType": "YulIf",
															"src": "1725:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1854:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1869:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1873:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1898:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1933:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1944:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1929:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1929:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1908:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1898:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1981:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1996:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2010:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2000:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2026:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2061:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2072:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2057:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2057:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2081:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2036:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2026:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1677:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1688:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1700:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1708:6:6",
														"type": ""
													}
												],
												"src": "1632:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2212:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2258:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2260:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2260:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2260:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2233:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2229:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2229:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2254:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2225:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:32:6"
															},
															"nodeType": "YulIf",
															"src": "2222:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2351:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2366:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2380:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2370:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2395:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2430:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2441:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2426:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2426:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2450:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2405:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2405:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2395:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2478:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2493:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2507:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2497:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2523:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2558:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2569:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2554:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2554:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2578:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2533:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2533:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2523:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2606:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2621:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2635:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2625:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2651:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2686:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2697:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2682:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2682:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2706:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2661:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2661:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2651:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2166:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2177:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2189:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2197:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2205:6:6",
														"type": ""
													}
												],
												"src": "2112:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2873:827:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2920:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2922:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2922:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2922:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2894:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2903:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2890:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2890:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2915:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2886:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2886:33:6"
															},
															"nodeType": "YulIf",
															"src": "2883:120:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3013:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3028:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3042:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3032:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3057:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3092:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3103:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3088:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3088:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3112:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3067:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3067:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3057:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3140:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3155:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3159:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3185:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3220:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3231:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3216:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3216:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3240:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3195:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3195:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3185:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3268:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3283:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3297:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3287:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3313:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3348:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3359:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3344:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3344:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3368:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3323:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3323:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3313:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3396:297:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3411:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3442:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3453:2:6",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3438:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3438:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3425:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3425:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3415:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3504:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3506:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3506:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3506:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3476:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3473:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "3470:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3601:82:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3655:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3666:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3651:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3651:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3675:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3619:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3619:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3601:6:6"
																		},
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3609:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2811:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2822:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2834:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2842:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2850:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2858:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2866:6:6",
														"type": ""
													}
												],
												"src": "2737:963:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3786:388:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3832:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3834:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3834:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3834:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3807:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3816:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3803:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3803:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3828:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3799:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3799:32:6"
															},
															"nodeType": "YulIf",
															"src": "3796:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3925:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3940:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3954:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3944:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3969:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4004:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4015:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4000:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4000:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4024:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3979:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3979:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3969:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4052:115:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4067:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4081:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4071:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4097:60:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4129:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4140:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4125:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4125:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4149:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4107:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4107:50:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4097:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3748:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3759:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3771:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3779:6:6",
														"type": ""
													}
												],
												"src": "3706:468:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4263:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4309:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4311:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4311:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4311:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4284:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4293:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4280:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4280:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4305:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4276:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4276:32:6"
															},
															"nodeType": "YulIf",
															"src": "4273:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4402:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4417:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4431:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4421:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4446:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4481:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4492:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4477:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4477:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4501:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4456:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4456:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4446:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4529:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4544:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4558:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4548:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4574:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4609:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4620:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4605:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4605:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4629:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4584:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4584:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4574:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4225:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4236:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4248:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4256:6:6",
														"type": ""
													}
												],
												"src": "4180:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4725:262:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4771:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4773:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4773:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4773:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4746:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4755:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4742:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4767:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4738:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4738:32:6"
															},
															"nodeType": "YulIf",
															"src": "4735:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4864:116:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4879:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4893:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4883:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4908:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4942:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4953:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4938:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4938:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4962:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4918:19:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4918:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4908:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4695:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4706:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4718:6:6",
														"type": ""
													}
												],
												"src": "4660:327:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5069:273:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5115:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5117:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5117:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5117:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5090:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5099:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5086:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5111:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5082:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:32:6"
															},
															"nodeType": "YulIf",
															"src": "5079:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5208:127:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5223:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5237:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5227:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5252:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5297:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5308:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5293:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5293:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5317:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5262:30:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5262:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5252:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5039:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5050:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5062:6:6",
														"type": ""
													}
												],
												"src": "4993:349:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5414:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5460:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5462:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5462:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5462:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5435:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5444:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5431:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5431:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5456:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5427:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5427:32:6"
															},
															"nodeType": "YulIf",
															"src": "5424:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5553:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5568:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5582:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5572:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5597:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5632:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5643:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5628:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5628:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5652:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5607:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5607:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5597:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5384:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5395:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5407:6:6",
														"type": ""
													}
												],
												"src": "5348:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5748:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5765:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5788:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5770:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5770:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5758:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5758:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5758:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5736:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5743:3:6",
														"type": ""
													}
												],
												"src": "5683:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5866:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5883:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5903:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5888:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5888:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5876:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5876:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5854:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5861:3:6",
														"type": ""
													}
												],
												"src": "5807:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6012:270:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6022:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6068:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6036:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6036:38:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6026:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6083:77:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6148:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6153:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6090:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:70:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6083:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6195:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6202:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6191:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6191:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6209:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6214:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6169:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6169:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6169:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6230:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6241:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6268:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6246:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6246:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6237:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6230:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5993:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6000:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6008:3:6",
														"type": ""
													}
												],
												"src": "5922:360:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6380:272:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6390:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6437:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6404:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6404:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6394:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6452:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6518:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6523:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6459:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6452:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6565:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6572:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6561:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6561:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6579:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6584:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6539:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6539:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6539:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6600:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6611:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6638:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6616:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6616:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6607:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6600:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6361:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6368:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6376:3:6",
														"type": ""
													}
												],
												"src": "6288:364:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6723:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6740:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6763:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6745:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6745:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6733:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6733:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6711:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6718:3:6",
														"type": ""
													}
												],
												"src": "6658:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6880:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6890:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6902:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6913:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6898:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6898:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6890:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6970:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6983:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6994:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6979:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6979:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6926:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6926:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6926:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6852:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6864:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6875:4:6",
														"type": ""
													}
												],
												"src": "6782:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7210:440:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7220:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7232:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7243:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7228:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7228:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7220:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7301:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7314:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7325:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7310:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7257:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7257:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7257:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7382:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7395:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7406:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7391:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7391:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7338:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7338:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7464:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7477:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7488:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7473:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7473:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7420:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7420:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7420:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7513:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7524:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7509:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7509:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7533:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7539:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7529:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7529:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7502:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7502:48:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7502:48:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7559:84:6",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7629:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7638:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7567:61:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7567:76:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7559:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7158:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7170:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7178:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7186:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7194:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7205:4:6",
														"type": ""
													}
												],
												"src": "7010:640:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7748:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7758:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7770:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7781:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7766:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7766:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7758:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7832:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7845:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7856:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7841:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7841:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7794:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7720:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7732:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7743:4:6",
														"type": ""
													}
												],
												"src": "7656:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7990:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8000:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8012:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8023:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8008:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8008:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8000:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8047:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8058:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8043:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8043:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8066:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8072:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8062:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8062:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8036:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8036:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8036:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8092:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8164:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8173:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8100:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8100:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8092:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7962:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7974:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7985:4:6",
														"type": ""
													}
												],
												"src": "7872:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8289:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8299:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8311:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8322:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8307:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8307:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8299:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8379:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8392:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8403:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8388:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8388:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8335:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8335:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8335:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8261:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8273:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8284:4:6",
														"type": ""
													}
												],
												"src": "8191:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8459:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8469:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8485:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8479:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8479:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8469:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8452:6:6",
														"type": ""
													}
												],
												"src": "8419:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8558:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8569:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8585:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8579:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8579:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8569:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8541:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8551:6:6",
														"type": ""
													}
												],
												"src": "8500:98:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8663:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8674:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8690:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8684:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8674:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8646:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8656:6:6",
														"type": ""
													}
												],
												"src": "8604:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8804:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8821:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8826:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8814:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8814:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8814:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8842:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8861:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8866:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8857:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8857:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8842:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8776:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8781:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8792:11:6",
														"type": ""
													}
												],
												"src": "8709:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8979:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8996:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9001:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8989:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8989:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8989:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9017:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9036:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9041:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9032:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9032:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9017:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8951:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8956:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8967:11:6",
														"type": ""
													}
												],
												"src": "8883:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9102:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9112:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9135:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9117:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9117:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9112:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9146:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9169:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9151:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9151:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9146:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9309:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9311:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9311:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9311:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9230:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9237:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9305:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9233:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9233:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9227:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9227:81:6"
															},
															"nodeType": "YulIf",
															"src": "9224:107:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9341:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9352:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9355:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9348:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9348:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9341:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9089:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9092:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9098:3:6",
														"type": ""
													}
												],
												"src": "9058:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9414:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9424:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9447:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9429:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9429:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9424:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9458:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9481:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9463:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9463:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9458:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9505:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9507:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9507:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9507:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9499:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9502:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9496:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:8:6"
															},
															"nodeType": "YulIf",
															"src": "9493:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9537:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9549:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9552:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9545:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9545:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9537:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9400:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9403:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9409:4:6",
														"type": ""
													}
												],
												"src": "9369:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9611:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9621:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9650:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9632:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9632:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9621:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9593:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9603:7:6",
														"type": ""
													}
												],
												"src": "9566:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9710:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9720:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9745:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9738:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9738:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9731:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9731:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9720:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9692:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9702:7:6",
														"type": ""
													}
												],
												"src": "9668:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9808:105:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9818:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9833:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9840:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9829:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9829:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9818:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9790:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9800:7:6",
														"type": ""
													}
												],
												"src": "9764:149:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9964:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9974:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9989:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9996:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9985:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9985:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9974:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9946:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9956:7:6",
														"type": ""
													}
												],
												"src": "9919:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10096:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10106:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10117:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10106:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10078:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10088:7:6",
														"type": ""
													}
												],
												"src": "10051:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10183:258:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10193:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10202:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10197:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10262:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10287:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10292:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10283:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10283:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10306:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10311:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10302:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10302:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10296:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10296:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10276:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10276:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10276:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10223:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10226:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10220:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10220:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10234:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10236:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10245:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10248:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10241:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10241:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10236:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10216:3:6",
																"statements": []
															},
															"src": "10212:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10359:76:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10409:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10414:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10405:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10405:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10423:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10398:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10398:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10398:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10340:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10343:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10337:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10337:13:6"
															},
															"nodeType": "YulIf",
															"src": "10334:101:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10165:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10170:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10175:6:6",
														"type": ""
													}
												],
												"src": "10134:307:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10475:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10492:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10485:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10485:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10485:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10589:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10592:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10582:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10582:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10582:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10447:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10722:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10739:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10742:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10732:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10732:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10732:12:6"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "10633:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10845:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10862:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10865:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10855:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10855:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10855:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "10756:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10968:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10985:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10988:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10978:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10978:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10978:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "10879:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11091:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11108:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11111:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11101:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11101:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11101:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11002:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11214:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11231:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11234:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11224:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11224:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11224:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11125:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11296:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11306:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11324:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11331:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11320:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11320:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11340:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11336:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11336:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11316:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11316:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11306:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11279:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11289:6:6",
														"type": ""
													}
												],
												"src": "11248:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11399:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11456:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11465:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11468:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11458:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11458:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11458:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11422:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11447:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "11429:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11429:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11419:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11419:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11412:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11412:43:6"
															},
															"nodeType": "YulIf",
															"src": "11409:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11392:5:6",
														"type": ""
													}
												],
												"src": "11356:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11524:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11578:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11587:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11590:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11580:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11580:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11580:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11547:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11569:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "11554:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11554:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11544:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11544:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11537:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11537:40:6"
															},
															"nodeType": "YulIf",
															"src": "11534:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11517:5:6",
														"type": ""
													}
												],
												"src": "11484:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11648:78:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11704:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11713:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11716:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11706:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11706:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11706:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11671:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11695:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "11678:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11678:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11668:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11668:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11661:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11661:42:6"
															},
															"nodeType": "YulIf",
															"src": "11658:62:6"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11641:5:6",
														"type": ""
													}
												],
												"src": "11606:120:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11775:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11832:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11841:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11844:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11834:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11834:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11834:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11798:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11823:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "11805:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11805:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11795:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11795:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11788:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11788:43:6"
															},
															"nodeType": "YulIf",
															"src": "11785:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11768:5:6",
														"type": ""
													}
												],
												"src": "11732:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EF JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0xBD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1BC8 JUMP JUMPDEST PUSH2 0xD96 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0xE93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x49A JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030330000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030380000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP6 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x855 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x8E6 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030340000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030370000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xB19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB10 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030310000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xBCD DUP7 DUP7 PUSH2 0xF7E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBF1 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1033 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030310000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xD8F DUP3 PUSH2 0x1601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEE3 DUP6 DUP6 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x1033 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0xFBF DUP3 PUSH2 0x164A JUMP JUMPDEST PUSH2 0xFC9 DUP2 DUP4 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0xFD3 DUP4 DUP4 PUSH2 0x17EE JUMP JUMPDEST DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1104 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1195 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030340000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x120C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1203 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x12E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E0 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030370000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x13C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BF SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030310000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x1471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x147C DUP8 DUP8 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x149B DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1976 JUMP JUMPDEST ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 CALLER DUP12 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x150F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1533 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST SWAP1 POP PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030350000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x15F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15EB SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030370000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x175C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17AD SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030333030360000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x18C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BF SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x196B SWAP2 SWAP1 PUSH2 0x1E65 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x19B8 JUMPI POP DUP1 DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D0 DUP2 PUSH2 0x1FEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E5 DUP2 PUSH2 0x2006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19FA DUP2 PUSH2 0x201D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A0F DUP2 PUSH2 0x201D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1A2B JUMPI PUSH2 0x1A2A PUSH2 0x1FCA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A47 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1A64 JUMPI PUSH2 0x1A63 PUSH2 0x1FCF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7A DUP2 PUSH2 0x2034 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A95 PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AA4 DUP5 DUP3 DUP6 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AC4 JUMPI PUSH2 0x1AC3 PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AD2 DUP6 DUP3 DUP7 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AE3 DUP6 DUP3 DUP7 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH2 0x1B05 PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B14 DUP7 DUP3 DUP8 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B25 DUP7 DUP3 DUP8 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B36 DUP7 DUP3 DUP8 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B5C JUMPI PUSH2 0x1B5B PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6A DUP9 DUP3 DUP10 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B7B DUP9 DUP3 DUP10 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B8C DUP9 DUP3 DUP10 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1BAC PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST PUSH2 0x1BB9 DUP9 DUP3 DUP10 ADD PUSH2 0x1A15 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BDF JUMPI PUSH2 0x1BDE PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BED DUP6 DUP3 DUP7 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BFE DUP6 DUP3 DUP7 ADD PUSH2 0x19D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C1F JUMPI PUSH2 0x1C1E PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C2D DUP6 DUP3 DUP7 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C3E DUP6 DUP3 DUP7 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5E JUMPI PUSH2 0x1C5D PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C6C DUP5 DUP3 DUP6 ADD PUSH2 0x19EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8B JUMPI PUSH2 0x1C8A PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C99 DUP5 DUP3 DUP6 ADD PUSH2 0x1A00 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x1CB7 PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC6 DUP5 DUP3 DUP6 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD8 DUP2 PUSH2 0x1EEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CE7 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF8 DUP3 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0x1D02 DUP2 DUP6 PUSH2 0x1E43 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D12 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F63 JUMP JUMPDEST PUSH2 0x1D1B DUP2 PUSH2 0x1FDE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D31 DUP3 PUSH2 0x1E38 JUMP JUMPDEST PUSH2 0x1D3B DUP2 DUP6 PUSH2 0x1E54 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D4B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F63 JUMP JUMPDEST PUSH2 0x1D54 DUP2 PUSH2 0x1FDE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D68 DUP2 PUSH2 0x1F59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D9E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x1DAB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x1DB8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D5F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1DCA DUP2 DUP5 PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E0A DUP2 DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E70 DUP3 PUSH2 0x1F59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7B DUP4 PUSH2 0x1F59 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EB0 JUMPI PUSH2 0x1EAF PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC6 DUP3 PUSH2 0x1F59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED1 DUP4 PUSH2 0x1F59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFA DUP3 PUSH2 0x1F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F81 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F66 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F90 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF8 DUP2 PUSH2 0x1EEF JUMP JUMPDEST DUP2 EQ PUSH2 0x2003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x200F DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP2 EQ PUSH2 0x201A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2026 DUP2 PUSH2 0x1F0D JUMP JUMPDEST DUP2 EQ PUSH2 0x2031 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x203D DUP2 PUSH2 0x1F59 JUMP JUMPDEST DUP2 EQ PUSH2 0x2048 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 LOG1 0xBC STOP 0x28 0xE2 0xD6 0xC7 0x22 DUP5 SSTORE SLT STOP 0x29 PUSH9 0x29F90CD6AD54B2D9B9 0xF8 0x5D 0x1F DUP16 0xB3 NOT 0x2E DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "269:12537:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:163:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7909:173:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5770:338;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5020;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4286:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7475:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7019:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6510:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3687:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8343:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;685:163:5;789:4;810:19;:33;830:12;810:33;;;;;;;;;;;;;;;;;;;;;;;;;;;803:40;;685:163;;;:::o;7909:173:2:-;8031:7;8008:8;2676:1;2645:33;;:9;:19;2655:8;2645:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2680:13;;;;;;;;;;;;;;;;;2637:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8055:12:::1;:22;8068:8;8055:22;;;;;;;;;;;;;;;;;;;;;8048:29;;7909:173:::0;;;;:::o;5770:338::-;5877:8;1863:18;1884:9;:19;1894:8;1884:19;;;;;;;;;;;;;;;;;;;;;1863:40;;1938:10;1924:24;;:10;:24;;;:68;;;;1952:16;:28;1969:10;1952:28;;;;;;;;;;;;;;;:40;1981:10;1952:40;;;;;;;;;;;;;;;;;;;;;;;;;1924:68;2000:21;;;;;;;;;;;;;;;;;1909:118;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5904:8:::1;2676:1;2645:33;;:9;:19;2655:8;2645:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2680:13;;;;;;;;;;;;;;;;::::0;2637:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5922:18:::2;5943:9;:19;5953:8;5943:19;;;;;;;;;;;;;;;;;;;;;5922:40;;5989:10;5976:23;;:9;:23;;;;6001:8;;;;;;;;;;;;;;;;::::0;5968:42:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6042:9;6017:12;:22;6030:8;6017:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;6094:8;6083:9;6062:41;;6071:10;6062:41;;;;;;;;;;;;5916:192;2033:1:::1;1857:182:::0;5770:338;;;:::o;5020:::-;5146:8;2227:18;2248:9;:19;2258:8;2248:19;;;;;;;;;;;;;;;;;;;;;2227:40;;2302:10;2288:24;;:10;:24;;;:70;;;;2348:10;2322:36;;:12;:22;2335:8;2322:22;;;;;;;;;;;;;;;;;;;;;:36;;;2288:70;:120;;;;2368:16;:28;2385:10;2368:28;;;;;;;;;;;;;;;:40;2397:10;2368:40;;;;;;;;;;;;;;;;;;;;;;;;;2288:120;2416:30;;;;;;;;;;;;;;;;;2273:179;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5173:8:::1;2676:1;2645:33;;:9;:19;2655:8;2645:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2680:13;;;;;;;;;;;;;;;;::::0;2637:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5191:18:::2;5212:9;:19;5222:8;5212:19;;;;;;;;;;;;;;;;;;;;;5191:40;;5259:5;5245:19;;:10;:19;;;5266:9;;;;;;;;;;;;;;;;::::0;5237:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5305:1;5290:17;;:3;:17;;;;5309:12;;;;;;;;;;;;;;;;::::0;5282:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5329:24;5339:3;5344:8;5329:9;:24::i;:::-;5185:173;2458:1:::1;2221:243:::0;5020:338;;;;:::o;4286:170::-;4408:43;4426:5;4433:3;4438:8;4408:43;;;;;;;;;;;;:17;:43::i;:::-;4286:170;;;:::o;7475:198::-;7566:14;7599:9;:19;7609:8;7599:19;;;;;;;;;;;;;;;;;;;;;7590:28;;7650:1;7632:20;;:6;:20;;;;7654:13;;;;;;;;;;;;;;;;;7624:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7475:198;;;:::o;7019:194::-;7110:7;7153:1;7135:20;;:6;:20;;;;7157:12;;;;;;;;;;;;;;;;;7127:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7183:25;7201:6;7183:17;:25::i;:::-;7176:32;;7019:194;;;:::o;6510:223::-;6660:9;6618:16;:28;6635:10;6618:28;;;;;;;;;;;;;;;:39;6647:9;6618:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;6707:9;6680:48;;6695:10;6680:48;;;6718:9;6680:48;;;;;;:::i;:::-;;;;;;;;6510:223;;:::o;3687:199::-;3835:46;3853:5;3860:3;3865:8;3875:5;;3835:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;3687:199;;;;;:::o;8343:182::-;8464:4;8485:16;:24;8502:6;8485:24;;;;;;;;;;;;;;;:35;8510:9;8485:35;;;;;;;;;;;;;;;;;;;;;;;;;8478:42;;8343:182;;;;:::o;8708:274::-;8803:12;8818:9;:19;8828:8;8818:19;;;;;;;;;;;;;;;;;;;;;8803:34;;8843:24;8858:8;8843:14;:24::i;:::-;8874:30;8889:4;8895:8;8874:14;:30::i;:::-;8910:26;8922:3;8927:8;8910:11;:26::i;:::-;8968:8;8963:3;8948:29;;8957:4;8948:29;;;;;;;;;;;;8797:185;8708:274;;:::o;12003:569::-;12144:8;2227:18;2248:9;:19;2258:8;2248:19;;;;;;;;;;;;;;;;;;;;;2227:40;;2302:10;2288:24;;:10;:24;;;:70;;;;2348:10;2322:36;;:12;:22;2335:8;2322:22;;;;;;;;;;;;;;;;;;;;;:36;;;2288:70;:120;;;;2368:16;:28;2385:10;2368:28;;;;;;;;;;;;;;;:40;2397:10;2368:40;;;;;;;;;;;;;;;;;;;;;;;;;2288:120;2416:30;;;;;;;;;;;;;;;;;2273:179;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12171:8:::1;2676:1;2645:33;;:9;:19;2655:8;2645:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2680:13;;;;;;;;;;;;;;;;::::0;2637:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12189:18:::2;12210:9;:19;12220:8;12210:19;;;;;;;;;;;;;;;;;;;;;12189:40;;12257:5;12243:19;;:10;:19;;;12264:9;;;;;;;;;;;;;;;;::::0;12235:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12303:1;12288:17;;:3;:17;;;;12307:12;;;;;;;;;;;;;;;;::::0;12280:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12327:24;12337:3;12342:8;12327:9;:24::i;:::-;12362:16;:3;:14;;;:16::i;:::-;12358:210;;;12392:13;12428:3;12408:41;;;12450:10;12462:5;12469:8;12479:5;12408:77;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12392:93;;1111:10;12511:24;;12501:34;;;:6;:34;;;;12537:23;;;;;;;;;;;;;;;;::::0;12493:68:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12384:184;12358:210;12183:389;2458:1:::1;2221:243:::0;12003:569;;;;;:::o;11580:154::-;11678:7;11702:19;:27;11722:6;11702:27;;;;;;;;;;;;;;;;11695:34;;11580:154;;;:::o;12699:104::-;12776:12;:22;12789:8;12776:22;;;;;;;;;;;;12769:29;;;;;;;;;;;12699:104;:::o;10578:224::-;10711:5;10688:28;;:9;:19;10698:8;10688:19;;;;;;;;;;;;;;;;;;;;;:28;;;10718:9;;;;;;;;;;;;;;;;;10680:48;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10764:1;10734:19;:26;10754:5;10734:26;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;10778:9;:19;10788:8;10778:19;;;;;;;;;;;;10771:26;;;;;;;;;;;10578:224;;:::o;11061:231::-;11197:1;11166:33;;:9;:19;11176:8;11166:19;;;;;;;;;;;;;;;;;;;;;:33;;;11201:18;;;;;;;;;;;;;;;;;11158:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11249:3;11227:9;:19;11237:8;11227:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11286:1;11258:19;:24;11278:3;11258:24;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;11061:231;;:::o;467:762:3:-;545:17;977:16;999:19;1021:66;999:88;;;;1128:5;1116:18;1104:30;;1193:3;1181:15;;:8;:15;;:42;;;;;1212:11;1200:8;:23;;1181:42;1165:59;;566:663;;467:762;;;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:137::-;336:5;374:6;361:20;352:29;;390:32;416:5;390:32;:::i;:::-;291:137;;;;:::o;434:141::-;490:5;521:6;515:13;506:22;;537:32;563:5;537:32;:::i;:::-;434:141;;;;:::o;594:552::-;651:8;661:6;711:3;704:4;696:6;692:17;688:27;678:122;;719:79;;:::i;:::-;678:122;832:6;819:20;809:30;;862:18;854:6;851:30;848:117;;;884:79;;:::i;:::-;848:117;998:4;990:6;986:17;974:29;;1052:3;1044:4;1036:6;1032:17;1022:8;1018:32;1015:41;1012:128;;;1059:79;;:::i;:::-;1012:128;594:552;;;;;:::o;1152:139::-;1198:5;1236:6;1223:20;1214:29;;1252:33;1279:5;1252:33;:::i;:::-;1152:139;;;;:::o;1297:329::-;1356:6;1405:2;1393:9;1384:7;1380:23;1376:32;1373:119;;;1411:79;;:::i;:::-;1373:119;1531:1;1556:53;1601:7;1592:6;1581:9;1577:22;1556:53;:::i;:::-;1546:63;;1502:117;1297:329;;;;:::o;1632:474::-;1700:6;1708;1757:2;1745:9;1736:7;1732:23;1728:32;1725:119;;;1763:79;;:::i;:::-;1725:119;1883:1;1908:53;1953:7;1944:6;1933:9;1929:22;1908:53;:::i;:::-;1898:63;;1854:117;2010:2;2036:53;2081:7;2072:6;2061:9;2057:22;2036:53;:::i;:::-;2026:63;;1981:118;1632:474;;;;;:::o;2112:619::-;2189:6;2197;2205;2254:2;2242:9;2233:7;2229:23;2225:32;2222:119;;;2260:79;;:::i;:::-;2222:119;2380:1;2405:53;2450:7;2441:6;2430:9;2426:22;2405:53;:::i;:::-;2395:63;;2351:117;2507:2;2533:53;2578:7;2569:6;2558:9;2554:22;2533:53;:::i;:::-;2523:63;;2478:118;2635:2;2661:53;2706:7;2697:6;2686:9;2682:22;2661:53;:::i;:::-;2651:63;;2606:118;2112:619;;;;;:::o;2737:963::-;2834:6;2842;2850;2858;2866;2915:3;2903:9;2894:7;2890:23;2886:33;2883:120;;;2922:79;;:::i;:::-;2883:120;3042:1;3067:53;3112:7;3103:6;3092:9;3088:22;3067:53;:::i;:::-;3057:63;;3013:117;3169:2;3195:53;3240:7;3231:6;3220:9;3216:22;3195:53;:::i;:::-;3185:63;;3140:118;3297:2;3323:53;3368:7;3359:6;3348:9;3344:22;3323:53;:::i;:::-;3313:63;;3268:118;3453:2;3442:9;3438:18;3425:32;3484:18;3476:6;3473:30;3470:117;;;3506:79;;:::i;:::-;3470:117;3619:64;3675:7;3666:6;3655:9;3651:22;3619:64;:::i;:::-;3601:82;;;;3396:297;2737:963;;;;;;;;:::o;3706:468::-;3771:6;3779;3828:2;3816:9;3807:7;3803:23;3799:32;3796:119;;;3834:79;;:::i;:::-;3796:119;3954:1;3979:53;4024:7;4015:6;4004:9;4000:22;3979:53;:::i;:::-;3969:63;;3925:117;4081:2;4107:50;4149:7;4140:6;4129:9;4125:22;4107:50;:::i;:::-;4097:60;;4052:115;3706:468;;;;;:::o;4180:474::-;4248:6;4256;4305:2;4293:9;4284:7;4280:23;4276:32;4273:119;;;4311:79;;:::i;:::-;4273:119;4431:1;4456:53;4501:7;4492:6;4481:9;4477:22;4456:53;:::i;:::-;4446:63;;4402:117;4558:2;4584:53;4629:7;4620:6;4609:9;4605:22;4584:53;:::i;:::-;4574:63;;4529:118;4180:474;;;;;:::o;4660:327::-;4718:6;4767:2;4755:9;4746:7;4742:23;4738:32;4735:119;;;4773:79;;:::i;:::-;4735:119;4893:1;4918:52;4962:7;4953:6;4942:9;4938:22;4918:52;:::i;:::-;4908:62;;4864:116;4660:327;;;;:::o;4993:349::-;5062:6;5111:2;5099:9;5090:7;5086:23;5082:32;5079:119;;;5117:79;;:::i;:::-;5079:119;5237:1;5262:63;5317:7;5308:6;5297:9;5293:22;5262:63;:::i;:::-;5252:73;;5208:127;4993:349;;;;:::o;5348:329::-;5407:6;5456:2;5444:9;5435:7;5431:23;5427:32;5424:119;;;5462:79;;:::i;:::-;5424:119;5582:1;5607:53;5652:7;5643:6;5632:9;5628:22;5607:53;:::i;:::-;5597:63;;5553:117;5348:329;;;;:::o;5683:118::-;5770:24;5788:5;5770:24;:::i;:::-;5765:3;5758:37;5683:118;;:::o;5807:109::-;5888:21;5903:5;5888:21;:::i;:::-;5883:3;5876:34;5807:109;;:::o;5922:360::-;6008:3;6036:38;6068:5;6036:38;:::i;:::-;6090:70;6153:6;6148:3;6090:70;:::i;:::-;6083:77;;6169:52;6214:6;6209:3;6202:4;6195:5;6191:16;6169:52;:::i;:::-;6246:29;6268:6;6246:29;:::i;:::-;6241:3;6237:39;6230:46;;6012:270;5922:360;;;;:::o;6288:364::-;6376:3;6404:39;6437:5;6404:39;:::i;:::-;6459:71;6523:6;6518:3;6459:71;:::i;:::-;6452:78;;6539:52;6584:6;6579:3;6572:4;6565:5;6561:16;6539:52;:::i;:::-;6616:29;6638:6;6616:29;:::i;:::-;6611:3;6607:39;6600:46;;6380:272;6288:364;;;;:::o;6658:118::-;6745:24;6763:5;6745:24;:::i;:::-;6740:3;6733:37;6658:118;;:::o;6782:222::-;6875:4;6913:2;6902:9;6898:18;6890:26;;6926:71;6994:1;6983:9;6979:17;6970:6;6926:71;:::i;:::-;6782:222;;;;:::o;7010:640::-;7205:4;7243:3;7232:9;7228:19;7220:27;;7257:71;7325:1;7314:9;7310:17;7301:6;7257:71;:::i;:::-;7338:72;7406:2;7395:9;7391:18;7382:6;7338:72;:::i;:::-;7420;7488:2;7477:9;7473:18;7464:6;7420:72;:::i;:::-;7539:9;7533:4;7529:20;7524:2;7513:9;7509:18;7502:48;7567:76;7638:4;7629:6;7567:76;:::i;:::-;7559:84;;7010:640;;;;;;;:::o;7656:210::-;7743:4;7781:2;7770:9;7766:18;7758:26;;7794:65;7856:1;7845:9;7841:17;7832:6;7794:65;:::i;:::-;7656:210;;;;:::o;7872:313::-;7985:4;8023:2;8012:9;8008:18;8000:26;;8072:9;8066:4;8062:20;8058:1;8047:9;8043:17;8036:47;8100:78;8173:4;8164:6;8100:78;:::i;:::-;8092:86;;7872:313;;;;:::o;8191:222::-;8284:4;8322:2;8311:9;8307:18;8299:26;;8335:71;8403:1;8392:9;8388:17;8379:6;8335:71;:::i;:::-;8191:222;;;;:::o;8500:98::-;8551:6;8585:5;8579:12;8569:22;;8500:98;;;:::o;8604:99::-;8656:6;8690:5;8684:12;8674:22;;8604:99;;;:::o;8709:168::-;8792:11;8826:6;8821:3;8814:19;8866:4;8861:3;8857:14;8842:29;;8709:168;;;;:::o;8883:169::-;8967:11;9001:6;8996:3;8989:19;9041:4;9036:3;9032:14;9017:29;;8883:169;;;;:::o;9058:305::-;9098:3;9117:20;9135:1;9117:20;:::i;:::-;9112:25;;9151:20;9169:1;9151:20;:::i;:::-;9146:25;;9305:1;9237:66;9233:74;9230:1;9227:81;9224:107;;;9311:18;;:::i;:::-;9224:107;9355:1;9352;9348:9;9341:16;;9058:305;;;;:::o;9369:191::-;9409:4;9429:20;9447:1;9429:20;:::i;:::-;9424:25;;9463:20;9481:1;9463:20;:::i;:::-;9458:25;;9502:1;9499;9496:8;9493:34;;;9507:18;;:::i;:::-;9493:34;9552:1;9549;9545:9;9537:17;;9369:191;;;;:::o;9566:96::-;9603:7;9632:24;9650:5;9632:24;:::i;:::-;9621:35;;9566:96;;;:::o;9668:90::-;9702:7;9745:5;9738:13;9731:21;9720:32;;9668:90;;;:::o;9764:149::-;9800:7;9840:66;9833:5;9829:78;9818:89;;9764:149;;;:::o;9919:126::-;9956:7;9996:42;9989:5;9985:54;9974:65;;9919:126;;;:::o;10051:77::-;10088:7;10117:5;10106:16;;10051:77;;;:::o;10134:307::-;10202:1;10212:113;10226:6;10223:1;10220:13;10212:113;;;10311:1;10306:3;10302:11;10296:18;10292:1;10287:3;10283:11;10276:39;10248:2;10245:1;10241:10;10236:15;;10212:113;;;10343:6;10340:1;10337:13;10334:101;;;10423:1;10414:6;10409:3;10405:16;10398:27;10334:101;10183:258;10134:307;;;:::o;10447:180::-;10495:77;10492:1;10485:88;10592:4;10589:1;10582:15;10616:4;10613:1;10606:15;10633:117;10742:1;10739;10732:12;10756:117;10865:1;10862;10855:12;10879:117;10988:1;10985;10978:12;11002:117;11111:1;11108;11101:12;11125:117;11234:1;11231;11224:12;11248:102;11289:6;11340:2;11336:7;11331:2;11324:5;11320:14;11316:28;11306:38;;11248:102;;;:::o;11356:122::-;11429:24;11447:5;11429:24;:::i;:::-;11422:5;11419:35;11409:63;;11468:1;11465;11458:12;11409:63;11356:122;:::o;11484:116::-;11554:21;11569:5;11554:21;:::i;:::-;11547:5;11544:32;11534:60;;11590:1;11587;11580:12;11534:60;11484:116;:::o;11606:120::-;11678:23;11695:5;11678:23;:::i;:::-;11671:5;11668:34;11658:62;;11716:1;11713;11706:12;11658:62;11606:120;:::o;11732:122::-;11805:24;11823:5;11805:24;:::i;:::-;11798:5;11795:35;11785:63;;11844:1;11841;11834:12;11785:63;11732:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1664200",
								"executionCost": "50470",
								"totalCost": "1714670"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "2847",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_addNFToken(address,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_clearApproval(uint256)": "24337",
								"_getOwnerNFTCount(address)": "2224",
								"_mint(address,uint256)": "infinite",
								"_removeNFToken(address,uint256)": "infinite",
								"_safeTransferFrom(address,address,uint256,bytes memory)": "infinite",
								"_transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 269,
									"end": 12806,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 269,
									"end": 12806,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 269,
									"end": 12806,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2829,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2829,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2829,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2829,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2754,
									"end": 2829,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2829,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2754,
									"end": 2829,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2829,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2829,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2754,
									"end": 2829,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2829,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 463,
									"end": 467,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 429,
									"end": 448,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 449,
									"end": 459,
									"name": "PUSH",
									"source": 5,
									"value": "1FFC9A7"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 467,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 429,
									"end": 467,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 429,
									"end": 467,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2810,
									"end": 2814,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2776,
									"end": 2795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2796,
									"end": 2806,
									"name": "PUSH",
									"source": 2,
									"value": "80AC58CD"
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2807,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 269,
									"end": 12806,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 269,
									"end": 12806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 269,
									"end": 12806,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 269,
									"end": 12806,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 12806,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 269,
									"end": 12806,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 12806,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3a1bc0028e2d6c72284551200296829f90cd6ad54b2d9b9f85d1f8fb3192e8964736f6c63430008070033",
									".code": [
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "B88D4FDE"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "81812FC"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "42842E0E"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 12806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 685,
											"end": 848,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 685,
											"end": 848,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 789,
											"end": 793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 803,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 803,
											"end": 843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2654,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2663,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8067,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8068,
											"end": 8076,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8048,
											"end": 8077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8048,
											"end": 8077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8082,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5877,
											"end": 5885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1902,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1884,
											"end": 1903,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1938,
											"end": 1948,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1948,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1924,
											"end": 1992,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1980,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1991,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1952,
											"end": 1992,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1992,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1924,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030330000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5904,
											"end": 5912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2654,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2663,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5953,
											"end": 5961,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5943,
											"end": 5962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5922,
											"end": 5962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5922,
											"end": 5962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 5999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5976,
											"end": 5999,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5976,
											"end": 5999,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5976,
											"end": 5985,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5976,
											"end": 5999,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5976,
											"end": 5999,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5976,
											"end": 5999,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5976,
											"end": 5999,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030380000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6042,
											"end": 6051,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6029,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6038,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6102,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6083,
											"end": 6092,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6071,
											"end": 6081,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 6108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 2039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 6108,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5146,
											"end": 5154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2266,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2358,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2358,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2343,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2358,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2358,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2395,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2407,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030340000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5181,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2654,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2663,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5221,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5222,
											"end": 5230,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5259,
											"end": 5264,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5245,
											"end": 5264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5245,
											"end": 5264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030370000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5305,
											"end": 5306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5290,
											"end": 5307,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5290,
											"end": 5307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5290,
											"end": 5293,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5290,
											"end": 5307,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5290,
											"end": 5307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5290,
											"end": 5307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5290,
											"end": 5307,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030310000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5339,
											"end": 5342,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5344,
											"end": 5352,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5329,
											"end": 5353,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5329,
											"end": 5353,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5329,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5185,
											"end": 5358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5358,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4426,
											"end": 4431,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4436,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4438,
											"end": 4446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4408,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4456,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7566,
											"end": 7580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7608,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7609,
											"end": 7617,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7590,
											"end": 7618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7590,
											"end": 7618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7650,
											"end": 7651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7632,
											"end": 7638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7475,
											"end": 7673,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7110,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7153,
											"end": 7154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7155,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7135,
											"end": 7155,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7141,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7155,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7135,
											"end": 7155,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7155,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7155,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030310000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7201,
											"end": 7207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7176,
											"end": 7208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7176,
											"end": 7208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7213,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6660,
											"end": 6669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6634,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6645,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6646,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6656,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6705,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 6718,
											"end": 6727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6733,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3853,
											"end": 3858,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3860,
											"end": 3863,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3865,
											"end": 3873,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3875,
											"end": 3880,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3875,
											"end": 3880,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3835,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3886,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8485,
											"end": 8501,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8485,
											"end": 8509,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8510,
											"end": 8519,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8485,
											"end": 8520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8478,
											"end": 8520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8478,
											"end": 8520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8525,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8708,
											"end": 8982,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 8708,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8803,
											"end": 8815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8818,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8836,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8818,
											"end": 8837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8803,
											"end": 8837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8803,
											"end": 8837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8843,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 8858,
											"end": 8866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8843,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 8843,
											"end": 8867,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8843,
											"end": 8867,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 8843,
											"end": 8867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8874,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 8889,
											"end": 8893,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8895,
											"end": 8903,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8874,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 8874,
											"end": 8904,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8874,
											"end": 8904,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 8874,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8910,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 8922,
											"end": 8925,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8927,
											"end": 8935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8910,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 8910,
											"end": 8936,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8910,
											"end": 8936,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 8910,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8968,
											"end": 8976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8963,
											"end": 8966,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8957,
											"end": 8961,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8977,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 8797,
											"end": 8982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8708,
											"end": 8982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8708,
											"end": 8982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8708,
											"end": 8982,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12003,
											"end": 12572,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 12003,
											"end": 12572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12144,
											"end": 12152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2266,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2248,
											"end": 2267,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2358,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2358,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2343,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2358,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2358,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2288,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2395,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2396,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2407,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2368,
											"end": 2408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2288,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030340000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12171,
											"end": 12179,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2654,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2663,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2678,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12210,
											"end": 12219,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12220,
											"end": 12228,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12210,
											"end": 12229,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12257,
											"end": 12262,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12243,
											"end": 12262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12243,
											"end": 12262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12243,
											"end": 12253,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12243,
											"end": 12262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12243,
											"end": 12262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12243,
											"end": 12262,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030370000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12305,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12288,
											"end": 12305,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12291,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12305,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12288,
											"end": 12305,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12305,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12305,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030310000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12307,
											"end": 12319,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12280,
											"end": 12320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12327,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 12337,
											"end": 12340,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12342,
											"end": 12350,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12327,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 12327,
											"end": 12351,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12327,
											"end": 12351,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 12327,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12362,
											"end": 12378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 12362,
											"end": 12365,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12362,
											"end": 12376,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12376,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12362,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 12362,
											"end": 12378,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12362,
											"end": 12378,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 12362,
											"end": 12378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12358,
											"end": 12568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12358,
											"end": 12568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 12358,
											"end": 12568,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12405,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12431,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12449,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12408,
											"end": 12449,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12449,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 12450,
											"end": 12460,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 12462,
											"end": 12467,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 12469,
											"end": 12477,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 12479,
											"end": 12484,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 12408,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 12511,
											"end": 12535,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 12511,
											"end": 12535,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 12501,
											"end": 12535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12501,
											"end": 12535,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12501,
											"end": 12535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12501,
											"end": 12507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12501,
											"end": 12535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12501,
											"end": 12535,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12501,
											"end": 12535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12501,
											"end": 12535,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030350000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12493,
											"end": 12561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12358,
											"end": 12568,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 12358,
											"end": 12568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12183,
											"end": 12572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12003,
											"end": 12572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12003,
											"end": 12572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12003,
											"end": 12572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12003,
											"end": 12572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12003,
											"end": 12572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12003,
											"end": 12572,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11580,
											"end": 11734,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 11580,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11702,
											"end": 11721,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11722,
											"end": 11728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11702,
											"end": 11729,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11695,
											"end": 11729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11695,
											"end": 11729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11580,
											"end": 11734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11580,
											"end": 11734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11580,
											"end": 11734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11580,
											"end": 11734,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12699,
											"end": 12803,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 12699,
											"end": 12803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12788,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12789,
											"end": 12797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12798,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12803,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12803,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10578,
											"end": 10802,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 10578,
											"end": 10802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10711,
											"end": 10716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10716,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10688,
											"end": 10716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10697,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10698,
											"end": 10706,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10716,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10688,
											"end": 10716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030370000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10764,
											"end": 10765,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10754,
											"end": 10759,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10734,
											"end": 10765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10787,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10788,
											"end": 10796,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10771,
											"end": 10797,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10771,
											"end": 10797,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10797,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10771,
											"end": 10797,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10797,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10797,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10578,
											"end": 10802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10578,
											"end": 10802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10578,
											"end": 10802,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11061,
											"end": 11292,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 11061,
											"end": 11292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11197,
											"end": 11198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11166,
											"end": 11199,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11166,
											"end": 11199,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11175,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11176,
											"end": 11184,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11199,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11166,
											"end": 11199,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11199,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "PUSH",
											"source": 2,
											"value": "3030333030360000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11249,
											"end": 11252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11236,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11237,
											"end": 11245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11227,
											"end": 11252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11286,
											"end": 11287,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11258,
											"end": 11277,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11278,
											"end": 11281,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11061,
											"end": 11292,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11061,
											"end": 11292,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11061,
											"end": 11292,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 467,
											"end": 1229,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 467,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 999,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1087,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "EXTCODEHASH",
											"source": 3
										},
										{
											"begin": 1104,
											"end": 1134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1104,
											"end": 1134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1196,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1196,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1196,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1189,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1196,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1196,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1223,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1223,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1181,
											"end": 1223,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1223,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1223,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1208,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1223,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1181,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1165,
											"end": 1224,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1165,
											"end": 1224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 566,
											"end": 1229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 566,
											"end": 1229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1229,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1229,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 285,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 152,
											"end": 285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 195,
											"end": 200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 220,
											"end": 240,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 211,
											"end": 240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 249,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 273,
											"end": 278,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 249,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 152,
											"end": 285,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 152,
											"end": 285,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 152,
											"end": 285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 152,
											"end": 285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 152,
											"end": 285,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 291,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 291,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 361,
											"end": 381,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 352,
											"end": 381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 352,
											"end": 381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 390,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 416,
											"end": 421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 390,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 390,
											"end": 422,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 390,
											"end": 422,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 390,
											"end": 422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 291,
											"end": 428,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 291,
											"end": 428,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 291,
											"end": 428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 291,
											"end": 428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 291,
											"end": 428,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 575,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 434,
											"end": 575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 515,
											"end": 528,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 506,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 506,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 537,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 563,
											"end": 568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 537,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 434,
											"end": 575,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 434,
											"end": 575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 434,
											"end": 575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 434,
											"end": 575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 434,
											"end": 575,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 594,
											"end": 1146,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 594,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 651,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 711,
											"end": 714,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 708,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 692,
											"end": 709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 688,
											"end": 715,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 678,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 678,
											"end": 800,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 719,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 719,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 719,
											"end": 798,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 719,
											"end": 798,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 719,
											"end": 798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 678,
											"end": 800,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 678,
											"end": 800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 819,
											"end": 839,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 809,
											"end": 839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 809,
											"end": 839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 862,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 854,
											"end": 860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 881,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 848,
											"end": 965,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 848,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 848,
											"end": 965,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 884,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 884,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 884,
											"end": 963,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 884,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 884,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 848,
											"end": 965,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 848,
											"end": 965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 998,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 990,
											"end": 996,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1048,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1030,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1056,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1140,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1012,
											"end": 1140,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1059,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1059,
											"end": 1138,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1138,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1059,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1140,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1012,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 594,
											"end": 1146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 594,
											"end": 1146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 594,
											"end": 1146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 594,
											"end": 1146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 594,
											"end": 1146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 594,
											"end": 1146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1198,
											"end": 1203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1279,
											"end": 1284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1252,
											"end": 1285,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1285,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1252,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1291,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1297,
											"end": 1626,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1297,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1356,
											"end": 1362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1407,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1403,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1408,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1492,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1373,
											"end": 1492,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1411,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1411,
											"end": 1490,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1411,
											"end": 1490,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1411,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1492,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1373,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1601,
											"end": 1608,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1590,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1599,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1556,
											"end": 1609,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1556,
											"end": 1609,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1556,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1609,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1626,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1626,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1632,
											"end": 2106,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1632,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1700,
											"end": 1706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1757,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1844,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1725,
											"end": 1844,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1763,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1763,
											"end": 1842,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1763,
											"end": 1842,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1763,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1844,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1725,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1908,
											"end": 1961,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1908,
											"end": 1961,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1908,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1961,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2012,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2081,
											"end": 2088,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2078,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2070,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2036,
											"end": 2089,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2036,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2036,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 2106,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 2106,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 2106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 2106,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2112,
											"end": 2731,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2112,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2251,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2252,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2257,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2341,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2222,
											"end": 2341,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2260,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2260,
											"end": 2339,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2339,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2260,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2222,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2450,
											"end": 2457,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2441,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2439,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2458,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2509,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2578,
											"end": 2585,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2558,
											"end": 2567,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2533,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2533,
											"end": 2586,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2586,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2533,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2586,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2661,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2706,
											"end": 2713,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2661,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2661,
											"end": 2714,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2661,
											"end": 2714,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2661,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2714,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2731,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2737,
											"end": 3700,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2737,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2848,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2903,
											"end": 2912,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2901,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2913,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2919,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 3003,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2883,
											"end": 3003,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2922,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2922,
											"end": 3001,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2922,
											"end": 3001,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2922,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 3003,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2883,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3112,
											"end": 3119,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3101,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3067,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3067,
											"end": 3120,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3067,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3067,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3120,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3171,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3240,
											"end": 3247,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 3229,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3195,
											"end": 3248,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3195,
											"end": 3248,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3195,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3248,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3299,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3368,
											"end": 3375,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3357,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3323,
											"end": 3376,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3323,
											"end": 3376,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3323,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3376,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3455,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3476,
											"end": 3482,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3587,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3470,
											"end": 3587,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3587,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3470,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3675,
											"end": 3682,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3655,
											"end": 3664,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3673,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3619,
											"end": 3683,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3683,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3619,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3601,
											"end": 3683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3601,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3601,
											"end": 3683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3601,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 3700,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 3700,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 3700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 3700,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 3700,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 3700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 3700,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 3700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 3700,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3706,
											"end": 4174,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3706,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3828,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3825,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3826,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3831,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3915,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3796,
											"end": 3915,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3834,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3834,
											"end": 3913,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3834,
											"end": 3913,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3834,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3915,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3796,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4024,
											"end": 4031,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4021,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4013,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3979,
											"end": 4032,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3979,
											"end": 4032,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3979,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 4032,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 4032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4107,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4149,
											"end": 4156,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4146,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4138,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4107,
											"end": 4157,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4107,
											"end": 4157,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4107,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4097,
											"end": 4157,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4097,
											"end": 4157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4052,
											"end": 4167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 4174,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 4174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 4174,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 4174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 4174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 4174,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4180,
											"end": 4654,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4180,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4302,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4284,
											"end": 4291,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4303,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4308,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4273,
											"end": 4392,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4273,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4273,
											"end": 4392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4311,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4311,
											"end": 4390,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4311,
											"end": 4390,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4311,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4273,
											"end": 4392,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4273,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4432,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4501,
											"end": 4508,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4490,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4456,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4456,
											"end": 4509,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4456,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4456,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4509,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4629,
											"end": 4636,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4609,
											"end": 4618,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 4584,
											"end": 4637,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4584,
											"end": 4637,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4584,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4654,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4654,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4654,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4660,
											"end": 4987,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4660,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4755,
											"end": 4764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4753,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4765,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4738,
											"end": 4770,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 4735,
											"end": 4854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4854,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 4735,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4962,
											"end": 4969,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4951,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4938,
											"end": 4960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4970,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4864,
											"end": 4980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4987,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4987,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4987,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4993,
											"end": 5342,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4993,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5062,
											"end": 5068,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5113,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5099,
											"end": 5108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5086,
											"end": 5109,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5082,
											"end": 5114,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5198,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5079,
											"end": 5198,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5117,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 5117,
											"end": 5196,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5117,
											"end": 5196,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5117,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5198,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5079,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5317,
											"end": 5324,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5306,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5262,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5262,
											"end": 5325,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5262,
											"end": 5325,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5262,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5208,
											"end": 5335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5342,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5342,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5342,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5348,
											"end": 5677,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5348,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5442,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5459,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5543,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 5424,
											"end": 5543,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5462,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5462,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 5462,
											"end": 5541,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5462,
											"end": 5541,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5462,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5543,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 5424,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5652,
											"end": 5659,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5650,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5660,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5677,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5677,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5683,
											"end": 5801,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5683,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5770,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5788,
											"end": 5793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5770,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5770,
											"end": 5794,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5770,
											"end": 5794,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5770,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5758,
											"end": 5795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5801,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5886,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5876,
											"end": 5910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5922,
											"end": 6282,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5922,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6068,
											"end": 6073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6036,
											"end": 6074,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6036,
											"end": 6074,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6036,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6153,
											"end": 6159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6148,
											"end": 6151,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6090,
											"end": 6160,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6090,
											"end": 6160,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6090,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6160,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6214,
											"end": 6220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6209,
											"end": 6212,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6195,
											"end": 6200,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6246,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6268,
											"end": 6274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6246,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6246,
											"end": 6275,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6246,
											"end": 6275,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6246,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6244,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6276,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6230,
											"end": 6276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6230,
											"end": 6276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6282,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6282,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6288,
											"end": 6652,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6288,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6437,
											"end": 6442,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6404,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6404,
											"end": 6443,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6404,
											"end": 6443,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6404,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 6523,
											"end": 6529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6521,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 6459,
											"end": 6530,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6459,
											"end": 6530,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 6459,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6452,
											"end": 6530,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6452,
											"end": 6530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6539,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6582,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6576,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6565,
											"end": 6570,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6561,
											"end": 6577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6539,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6539,
											"end": 6591,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6539,
											"end": 6591,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6539,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 6638,
											"end": 6644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6616,
											"end": 6645,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6616,
											"end": 6645,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 6616,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6611,
											"end": 6614,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6600,
											"end": 6646,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6600,
											"end": 6646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6652,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6652,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6658,
											"end": 6776,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 6658,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6745,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 6763,
											"end": 6768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6745,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 6745,
											"end": 6769,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6745,
											"end": 6769,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 6745,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6740,
											"end": 6743,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6733,
											"end": 6770,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6776,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6782,
											"end": 7004,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6782,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6879,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6913,
											"end": 6915,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6902,
											"end": 6911,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6898,
											"end": 6916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6890,
											"end": 6916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6890,
											"end": 6916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6926,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6994,
											"end": 6995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 6992,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 6996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6970,
											"end": 6976,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6926,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6926,
											"end": 6997,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6926,
											"end": 6997,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6926,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 7004,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 7004,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 7004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 7004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 7004,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7010,
											"end": 7650,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7010,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7246,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7232,
											"end": 7241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7247,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7323,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7310,
											"end": 7327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7301,
											"end": 7307,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 7257,
											"end": 7328,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7257,
											"end": 7328,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7257,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7391,
											"end": 7409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 7338,
											"end": 7410,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7338,
											"end": 7410,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7338,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7420,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 7488,
											"end": 7490,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7477,
											"end": 7486,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7464,
											"end": 7470,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7420,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7420,
											"end": 7492,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7420,
											"end": 7492,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 7420,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7539,
											"end": 7548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7533,
											"end": 7537,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7513,
											"end": 7522,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 7638,
											"end": 7642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7629,
											"end": 7635,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7567,
											"end": 7643,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7567,
											"end": 7643,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 7567,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7650,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7650,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7650,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7656,
											"end": 7866,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 7656,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7743,
											"end": 7747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 7783,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7770,
											"end": 7779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 7856,
											"end": 7857,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7854,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7838,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7794,
											"end": 7859,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7794,
											"end": 7859,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 7794,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7656,
											"end": 7866,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7656,
											"end": 7866,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7656,
											"end": 7866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7656,
											"end": 7866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7656,
											"end": 7866,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7872,
											"end": 8185,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7872,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7985,
											"end": 7989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8025,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8012,
											"end": 8021,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8000,
											"end": 8026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8000,
											"end": 8026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8072,
											"end": 8081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8066,
											"end": 8070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8062,
											"end": 8082,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8058,
											"end": 8059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8047,
											"end": 8056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8043,
											"end": 8060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8036,
											"end": 8083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 8173,
											"end": 8177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8164,
											"end": 8170,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8100,
											"end": 8178,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8100,
											"end": 8178,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 8100,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8185,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8185,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8191,
											"end": 8413,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 8191,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8322,
											"end": 8324,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8311,
											"end": 8320,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8307,
											"end": 8325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8335,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 8403,
											"end": 8404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8392,
											"end": 8401,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8405,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8385,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8335,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8335,
											"end": 8406,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8335,
											"end": 8406,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 8335,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8413,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8413,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8500,
											"end": 8598,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 8500,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8551,
											"end": 8557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8579,
											"end": 8591,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8569,
											"end": 8591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8569,
											"end": 8591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8500,
											"end": 8598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8500,
											"end": 8598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8500,
											"end": 8598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8500,
											"end": 8598,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8604,
											"end": 8703,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 8604,
											"end": 8703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8656,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8690,
											"end": 8695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8684,
											"end": 8696,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8604,
											"end": 8703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8604,
											"end": 8703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8604,
											"end": 8703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8604,
											"end": 8703,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8709,
											"end": 8877,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 8709,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8792,
											"end": 8803,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8832,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8814,
											"end": 8833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8870,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8861,
											"end": 8864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8857,
											"end": 8871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8842,
											"end": 8871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8842,
											"end": 8871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8709,
											"end": 8877,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8709,
											"end": 8877,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8709,
											"end": 8877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8709,
											"end": 8877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8709,
											"end": 8877,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8883,
											"end": 9052,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8883,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 8978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9001,
											"end": 9007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8996,
											"end": 8999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9008,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9041,
											"end": 9045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9036,
											"end": 9039,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9032,
											"end": 9046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9017,
											"end": 9046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9017,
											"end": 9046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 9052,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 9052,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 9052,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 9052,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 9052,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9058,
											"end": 9363,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 9058,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9098,
											"end": 9101,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9117,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 9135,
											"end": 9136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 9117,
											"end": 9137,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9117,
											"end": 9137,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 9117,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 9169,
											"end": 9170,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9171,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9305,
											"end": 9306,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9237,
											"end": 9303,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9233,
											"end": 9307,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9230,
											"end": 9231,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9227,
											"end": 9308,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9224,
											"end": 9331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9224,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9224,
											"end": 9331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9224,
											"end": 9331,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9224,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9355,
											"end": 9356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9352,
											"end": 9353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9348,
											"end": 9357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9341,
											"end": 9357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9341,
											"end": 9357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9363,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9363,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9369,
											"end": 9560,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 9369,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9409,
											"end": 9413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9429,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 9447,
											"end": 9448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9429,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 9429,
											"end": 9449,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9429,
											"end": 9449,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 9429,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9424,
											"end": 9449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9424,
											"end": 9449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 9481,
											"end": 9482,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 9463,
											"end": 9483,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9463,
											"end": 9483,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 9463,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9458,
											"end": 9483,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9458,
											"end": 9483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9499,
											"end": 9500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9504,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9493,
											"end": 9527,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9493,
											"end": 9527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 9493,
											"end": 9527,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9507,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 9507,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 9507,
											"end": 9525,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9507,
											"end": 9525,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 9507,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9493,
											"end": 9527,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 9493,
											"end": 9527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9552,
											"end": 9553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9549,
											"end": 9550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9545,
											"end": 9554,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9537,
											"end": 9554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9537,
											"end": 9554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9560,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9560,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9566,
											"end": 9662,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 9566,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9603,
											"end": 9610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9650,
											"end": 9655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9632,
											"end": 9656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 9632,
											"end": 9656,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9632,
											"end": 9656,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9632,
											"end": 9656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9621,
											"end": 9656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9621,
											"end": 9656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9566,
											"end": 9662,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9566,
											"end": 9662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9566,
											"end": 9662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9566,
											"end": 9662,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9668,
											"end": 9758,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9668,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9702,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9738,
											"end": 9751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9731,
											"end": 9752,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9758,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9758,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9764,
											"end": 9913,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9764,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 9807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9840,
											"end": 9906,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9833,
											"end": 9838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9829,
											"end": 9907,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9913,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9913,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9919,
											"end": 10045,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 9919,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9963,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9996,
											"end": 10038,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 9994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9985,
											"end": 10039,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9974,
											"end": 10039,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9974,
											"end": 10039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9919,
											"end": 10045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9919,
											"end": 10045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9919,
											"end": 10045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9919,
											"end": 10045,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10051,
											"end": 10128,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 10051,
											"end": 10128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10088,
											"end": 10095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10117,
											"end": 10122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10106,
											"end": 10122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10106,
											"end": 10122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10128,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10134,
											"end": 10441,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 10134,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10202,
											"end": 10203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10325,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10212,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10226,
											"end": 10232,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10223,
											"end": 10224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10233,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10325,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 10212,
											"end": 10325,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 10309,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10302,
											"end": 10313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10292,
											"end": 10293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10287,
											"end": 10290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10283,
											"end": 10294,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10248,
											"end": 10250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10245,
											"end": 10246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10236,
											"end": 10251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10236,
											"end": 10251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10212,
											"end": 10325,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10325,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 10212,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10343,
											"end": 10349,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10340,
											"end": 10341,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10337,
											"end": 10350,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10334,
											"end": 10435,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10334,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10334,
											"end": 10435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10423,
											"end": 10424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10414,
											"end": 10420,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10409,
											"end": 10412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10398,
											"end": 10425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10334,
											"end": 10435,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10334,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10183,
											"end": 10441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10441,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10447,
											"end": 10627,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 10447,
											"end": 10627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10495,
											"end": 10572,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10492,
											"end": 10493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10485,
											"end": 10573,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10592,
											"end": 10596,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 10589,
											"end": 10590,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10582,
											"end": 10597,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10633,
											"end": 10750,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 10633,
											"end": 10750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10742,
											"end": 10743,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10739,
											"end": 10740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10732,
											"end": 10744,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10756,
											"end": 10873,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 10756,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10865,
											"end": 10866,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10862,
											"end": 10863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10867,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10879,
											"end": 10996,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 10879,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10988,
											"end": 10989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10985,
											"end": 10986,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10978,
											"end": 10990,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11119,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 11002,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11111,
											"end": 11112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11108,
											"end": 11109,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11101,
											"end": 11113,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11125,
											"end": 11242,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 11125,
											"end": 11242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11234,
											"end": 11235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11231,
											"end": 11232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11236,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11248,
											"end": 11350,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 11248,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11342,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 11336,
											"end": 11343,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 11331,
											"end": 11333,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 11324,
											"end": 11329,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11320,
											"end": 11334,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11316,
											"end": 11344,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11306,
											"end": 11344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11306,
											"end": 11344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11248,
											"end": 11350,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11248,
											"end": 11350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11248,
											"end": 11350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11248,
											"end": 11350,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11356,
											"end": 11478,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 11356,
											"end": 11478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11429,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 11447,
											"end": 11452,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11429,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 11429,
											"end": 11453,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11429,
											"end": 11453,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 11429,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11422,
											"end": 11427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11419,
											"end": 11454,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 11409,
											"end": 11472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11468,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11465,
											"end": 11466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11458,
											"end": 11470,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11472,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 11409,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11356,
											"end": 11478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11356,
											"end": 11478,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11484,
											"end": 11600,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 11484,
											"end": 11600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11554,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 11569,
											"end": 11574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11554,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 11554,
											"end": 11575,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11554,
											"end": 11575,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 11554,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11547,
											"end": 11552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11544,
											"end": 11576,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11534,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 11534,
											"end": 11594,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11590,
											"end": 11591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11587,
											"end": 11588,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11580,
											"end": 11592,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11534,
											"end": 11594,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 11534,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11484,
											"end": 11600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11484,
											"end": 11600,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11606,
											"end": 11726,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 11606,
											"end": 11726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11678,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 11695,
											"end": 11700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11678,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 11678,
											"end": 11701,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11678,
											"end": 11701,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 11678,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11671,
											"end": 11676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11668,
											"end": 11702,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11658,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 11658,
											"end": 11720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11716,
											"end": 11717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11713,
											"end": 11714,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11706,
											"end": 11718,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11658,
											"end": 11720,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 11658,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11606,
											"end": 11726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11606,
											"end": 11726,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11732,
											"end": 11854,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 11732,
											"end": 11854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11805,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 11823,
											"end": 11828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11805,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 11805,
											"end": 11829,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11805,
											"end": 11829,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 11805,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11803,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11795,
											"end": 11830,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 11785,
											"end": 11848,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11844,
											"end": 11845,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11841,
											"end": 11842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11834,
											"end": 11846,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 11848,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 11785,
											"end": 11848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11732,
											"end": 11854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11732,
											"end": 11854,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of ERC-721 non-fungible token standard.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"constructor\":{\"details\":\"Contract constructor.\"},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}},\"stateVariables\":{\"MAGIC_ON_ERC721_RECEIVED\":{\"details\":\"Magic value of a smart contract that can receive NFT. Equal to: bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\")).\"},\"ZERO_ADDRESS\":{\"details\":\"List of revert message codes. Implementing dApp should handle showing the correct message. Based on 0xcert framework error codes.\"},\"idToApproval\":{\"details\":\"Mapping from NFT ID to approved address.\"},\"idToOwner\":{\"details\":\"A mapping from NFT ID to the address that owns it.\"},\"ownerToNFTokenCount\":{\"details\":\"Mapping from owner address to count of their tokens.\"},\"ownerToOperators\":{\"details\":\"Mapping from owner address to mapping of operator addresses.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":\"NFToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0x99ce9e2c0a810cc6e281c5da9c8b24cffb26f0da6dc9cf422a918f3604f24a02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1de6f77cfd4eef30c77aadb18f024f9d62497a846bbe90ec6d9b1ba8fe952f1\",\"dweb:/ipfs/QmSqJKA5ZyciDR4NXme3tjCyMxfkXMFTaTTGsjmfhZZEso\"]},\".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721.sol\":{\"keccak256\":\"0xc3ad568e38940de085b4beba2b74242a433de410bc0a5efb957d5afcf42d5453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61b3a889568966553961a54939db431849ec3c4038dbe2ae108bc8cc92a0d55\",\"dweb:/ipfs/QmUiXGskuzSbdSydkDoLRGuxqN5MERxnXpfBy2WtkDCpNy\"]},\".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0x12beffd91a48478e4de7d7db431682b56bd09ee7371de47f3b163c1db7e1a7b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d62b078005746c56ef747f6348d961fa7f96bb49d29a5b9f038c85b88ff4daf\",\"dweb:/ipfs/QmajbugaBtyYGiB6igx61RbnaRnkYhxS8pv1V7xQmG5vRP\"]},\".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":{\"keccak256\":\"0x334951ffc57e89f6a445855e3e5eb74daa60d8eebfbc6be26cd315af649e1a77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c67cbe0a1250f224990d9637546b4fc89c0e66e7dddda26b9952af88c024480\",\"dweb:/ipfs/QmZrzwVSXYfonakEtzxFNucZZcrE2PPym1MxoNum4fmXq5\"]},\".deps/github/0xcert/ethereum-erc721/src/contracts/utils/erc165.sol\":{\"keccak256\":\"0x926d28b30f5abaa07933383993c7f9a64cc2f93f7e51681edc957d8f5b9c5b90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f89a53e07499c04d0f667e6692da52a47d4cb8a79e5937809e08c23138a5b3b\",\"dweb:/ipfs/QmeoL8qx7cAUeXanVF7irgqdtLwwjhFo1QvZ8h4XAKreUe\"]},\".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0xf0daec317a540048091f2795f3bd7d31fe80858f5f17bf2c3936e112b18ec6e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c7a2248f7d03daafa1ff7547de55331875c8ae25b04ec8f48905016309be4db\",\"dweb:/ipfs/QmRq3jzFRVsuz63u2LURRCK9Ma81q1wRr3PXC765F4dAuK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 855,
								"contract": ".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol:NFToken",
								"label": "supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 178,
								"contract": ".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol:NFToken",
								"label": "idToOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 183,
								"contract": ".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol:NFToken",
								"label": "idToApproval",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 188,
								"contract": ".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol:NFToken",
								"label": "ownerToNFTokenCount",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 195,
								"contract": ".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol:NFToken",
								"label": "ownerToOperators",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
							},
							"getApproved(uint256)": {
								"notice": "Throws if `_tokenId` is not a valid NFT."
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\"."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
							},
							"setApprovalForAll(address,bool)": {
								"notice": "This works even if sender doesn't own any tokens at the time."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost."
							}
						},
						"version": 1
					}
				}
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol": {
				"AddressUtils": {
					"abi": [],
					"devdoc": {
						"details": "Utility library of inline functions on addresses.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":264:1232  library AddressUtils... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":264:1232  library AddressUtils... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122058ba9a929613c9452bfd65cfac3c78ec59fb03db42d62ec933507025592db52c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058ba9a929613c9452bfd65cfac3c78ec59fb03db42d62ec933507025592db52c64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xBA SWAP11 SWAP3 SWAP7 SGT 0xC9 GASLIMIT 0x2B REVERT PUSH6 0xCFAC3C78EC59 0xFB SUB 0xDB TIMESTAMP 0xD6 0x2E 0xC9 CALLER POP PUSH17 0x25592DB52C64736F6C6343000807003300 ",
							"sourceMap": "264:968:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058ba9a929613c9452bfd65cfac3c78ec59fb03db42d62ec933507025592db52c64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xBA SWAP11 SWAP3 SWAP7 SGT 0xC9 GASLIMIT 0x2B REVERT PUSH6 0xCFAC3C78EC59 0xFB SUB 0xDB TIMESTAMP 0xD6 0x2E 0xC9 CALLER POP PUSH17 0x25592DB52C64736F6C6343000807003300 ",
							"sourceMap": "264:968:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 264,
									"end": 1232,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122058ba9a929613c9452bfd65cfac3c78ec59fb03db42d62ec933507025592db52c64736f6c63430008070033",
									".code": [
										{
											"begin": 264,
											"end": 1232,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 264,
											"end": 1232,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 264,
											"end": 1232,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 264,
											"end": 1232,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 264,
											"end": 1232,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 1232,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 264,
											"end": 1232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 1232,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 264,
											"end": 1232,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Utility library of inline functions on addresses.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol Requires EIP-1052.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":\"AddressUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":{\"keccak256\":\"0x334951ffc57e89f6a445855e3e5eb74daa60d8eebfbc6be26cd315af649e1a77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c67cbe0a1250f224990d9637546b4fc89c0e66e7dddda26b9952af88c024480\",\"dweb:/ipfs/QmZrzwVSXYfonakEtzxFNucZZcrE2PPym1MxoNum4fmXq5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Based on: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol Requires EIP-1052.",
						"version": 1
					}
				}
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/utils/erc165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A standard for detecting smart contract interfaces.  See: https://eips.ethereum.org/EIPS/eip-165.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Checks if the smart contract includes a specific interface. This function uses less than 30,000 gas.",
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165."
								},
								"returns": {
									"_0": "True if _interfaceID is supported, false otherwise."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A standard for detecting smart contract interfaces.  See: https://eips.ethereum.org/EIPS/eip-165.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Checks if the smart contract includes a specific interface. This function uses less than 30,000 gas.\",\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/utils/erc165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/utils/erc165.sol\":{\"keccak256\":\"0x926d28b30f5abaa07933383993c7f9a64cc2f93f7e51681edc957d8f5b9c5b90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f89a53e07499c04d0f667e6692da52a47d4cb8a79e5937809e08c23138a5b3b\",\"dweb:/ipfs/QmeoL8qx7cAUeXanVF7irgqdtLwwjhFo1QvZ8h4XAKreUe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol": {
				"SupportsInterface": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of standard for detect smart contract interfaces.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Contract constructor."
							},
							"supportsInterface(bytes4)": {
								"details": "Function to check which interfaces are suported by this contract.",
								"params": {
									"_interfaceID": "Id of the interface."
								},
								"returns": {
									"_0": "True if _interfaceID is supported, false otherwise."
								}
							}
						},
						"stateVariables": {
							"supportedInterfaces": {
								"details": "Mapping of supported intefraces. You must not set element 0xffffffff to true."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":162:851  contract SupportsInterface is... */\n  mstore(0x40, 0x80)\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":407:482  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":463:467  true */\n  0x01\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":429:448  supportedInterfaces */\n  0x00\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":429:460  supportedInterfaces[0x01ffc9a7] */\n  dup1\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":449:459  0x01ffc9a7 */\n  0x01ffc9a7\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":429:460  supportedInterfaces[0x01ffc9a7] */\n  0xe0\n  shl\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":429:467  supportedInterfaces[0x01ffc9a7] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":162:851  contract SupportsInterface is... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":162:851  contract SupportsInterface is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":685:848  function supportsInterface(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":789:793  bool */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":810:829  supportedInterfaces */\n      dup1\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":810:843  supportedInterfaces[_interfaceID] */\n      0x00\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":830:842  _interfaceID */\n      dup4\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":810:843  supportedInterfaces[_interfaceID] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":803:843  return supportedInterfaces[_interfaceID] */\n      swap1\n      pop\n        /* \".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":685:848  function supportsInterface(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_12:\n        /* \"#utility.yul\":52:57   */\n      0x00\n        /* \"#utility.yul\":90:96   */\n      dup2\n        /* \"#utility.yul\":77:97   */\n      calldataload\n        /* \"#utility.yul\":68:97   */\n      swap1\n      pop\n        /* \"#utility.yul\":106:138   */\n      tag_14\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":106:138   */\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:477   */\n    tag_6:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":257:259   */\n      0x20\n        /* \"#utility.yul\":245:254   */\n      dup3\n        /* \"#utility.yul\":236:243   */\n      dup5\n        /* \"#utility.yul\":232:255   */\n      sub\n        /* \"#utility.yul\":228:260   */\n      slt\n        /* \"#utility.yul\":225:344   */\n      iszero\n      tag_17\n      jumpi\n        /* \"#utility.yul\":263:342   */\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":225:344   */\n    tag_17:\n        /* \"#utility.yul\":383:384   */\n      0x00\n        /* \"#utility.yul\":408:460   */\n      tag_20\n        /* \"#utility.yul\":452:459   */\n      dup5\n        /* \"#utility.yul\":443:449   */\n      dup3\n        /* \"#utility.yul\":432:441   */\n      dup6\n        /* \"#utility.yul\":428:450   */\n      add\n        /* \"#utility.yul\":408:460   */\n      tag_12\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":398:460   */\n      swap2\n      pop\n        /* \"#utility.yul\":354:470   */\n      pop\n        /* \"#utility.yul\":150:477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":483:592   */\n    tag_21:\n        /* \"#utility.yul\":564:585   */\n      tag_23\n        /* \"#utility.yul\":579:584   */\n      dup2\n        /* \"#utility.yul\":564:585   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":559:562   */\n      dup3\n        /* \"#utility.yul\":552:586   */\n      mstore\n        /* \"#utility.yul\":483:592   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":598:808   */\n    tag_9:\n        /* \"#utility.yul\":685:689   */\n      0x00\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":712:721   */\n      dup3\n        /* \"#utility.yul\":708:726   */\n      add\n        /* \"#utility.yul\":700:726   */\n      swap1\n      pop\n        /* \"#utility.yul\":736:801   */\n      tag_26\n        /* \"#utility.yul\":798:799   */\n      0x00\n        /* \"#utility.yul\":787:796   */\n      dup4\n        /* \"#utility.yul\":783:800   */\n      add\n        /* \"#utility.yul\":774:780   */\n      dup5\n        /* \"#utility.yul\":736:801   */\n      tag_21\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":598:808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":895:985   */\n    tag_24:\n        /* \"#utility.yul\":929:936   */\n      0x00\n        /* \"#utility.yul\":972:977   */\n      dup2\n        /* \"#utility.yul\":965:978   */\n      iszero\n        /* \"#utility.yul\":958:979   */\n      iszero\n        /* \"#utility.yul\":947:979   */\n      swap1\n      pop\n        /* \"#utility.yul\":895:985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":991:1140   */\n    tag_30:\n        /* \"#utility.yul\":1027:1034   */\n      0x00\n        /* \"#utility.yul\":1067:1133   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1060:1065   */\n      dup3\n        /* \"#utility.yul\":1056:1134   */\n      and\n        /* \"#utility.yul\":1045:1134   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:1140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1269:1386   */\n    tag_19:\n        /* \"#utility.yul\":1378:1379   */\n      0x00\n        /* \"#utility.yul\":1375:1376   */\n      dup1\n        /* \"#utility.yul\":1368:1380   */\n      revert\n        /* \"#utility.yul\":1392:1512   */\n    tag_15:\n        /* \"#utility.yul\":1464:1487   */\n      tag_36\n        /* \"#utility.yul\":1481:1486   */\n      dup2\n        /* \"#utility.yul\":1464:1487   */\n      tag_30\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1457:1462   */\n      dup2\n        /* \"#utility.yul\":1454:1488   */\n      eq\n        /* \"#utility.yul\":1444:1506   */\n      tag_37\n      jumpi\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1499:1500   */\n      dup1\n        /* \"#utility.yul\":1492:1504   */\n      revert\n        /* \"#utility.yul\":1444:1506   */\n    tag_37:\n        /* \"#utility.yul\":1392:1512   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205395336423732def0f77ca92f7ccfa8072c5e3997fcb69f4ca65bb6c0c84610664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_866": {
									"entryPoint": null,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506101bd806100716000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806301ffc9a714610030575b600080fd5b61004a600480360381019061004591906100dc565b610060565b6040516100579190610118565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000813590506100d681610170565b92915050565b6000602082840312156100f2576100f161016b565b5b6000610100848285016100c7565b91505092915050565b61011281610133565b82525050565b600060208201905061012d6000830184610109565b92915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600080fd5b6101798161013f565b811461018457600080fd5b5056fea26469706673582212205395336423732def0f77ca92f7ccfa8072c5e3997fcb69f4ca65bb6c0c84610664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1BD DUP1 PUSH2 0x71 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xDC JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6 DUP2 PUSH2 0x170 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2 JUMPI PUSH2 0xF1 PUSH2 0x16B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP5 DUP3 DUP6 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x112 DUP2 PUSH2 0x133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x109 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179 DUP2 PUSH2 0x13F JUMP JUMPDEST DUP2 EQ PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 SWAP6 CALLER PUSH5 0x23732DEF0F PUSH24 0xCA92F7CCFA8072C5E3997FCB69F4CA65BB6C0C8461066473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "162:689:5:-:0;;;407:75;;;;;;;;;;463:4;429:19;:31;449:10;429:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;162:689;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@supportsInterface_880": {
									"entryPoint": 96,
									"id": 880,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1515:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:86:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "68:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "90:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "77:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "77:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "68:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "106:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "106:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "106:32:6"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "36:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "44:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "52:5:6",
														"type": ""
													}
												],
												"src": "7:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:262:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "261:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "263:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "263:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "263:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "236:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "245:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "232:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "232:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "228:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:32:6"
															},
															"nodeType": "YulIf",
															"src": "225:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "354:116:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "369:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "383:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "373:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "398:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "432:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "443:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "428:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "452:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "408:19:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "408:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "398:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:6",
														"type": ""
													}
												],
												"src": "150:327:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "542:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "559:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "579:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "564:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "564:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "552:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "530:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "537:3:6",
														"type": ""
													}
												],
												"src": "483:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "690:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "700:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "712:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "723:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "708:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "700:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "774:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "787:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "798:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "783:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "783:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "736:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "736:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "662:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "674:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "685:4:6",
														"type": ""
													}
												],
												"src": "598:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "854:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "864:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "874:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "864:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "847:6:6",
														"type": ""
													}
												],
												"src": "814:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "937:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "947:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "972:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "965:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "947:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "919:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "929:7:6",
														"type": ""
													}
												],
												"src": "895:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1035:105:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1045:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1060:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1067:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1056:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1056:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1045:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1017:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1027:7:6",
														"type": ""
													}
												],
												"src": "991:149:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1235:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1252:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1255:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1245:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1146:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1358:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1375:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1378:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1368:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1368:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1368:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1269:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1434:78:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1490:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1499:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1502:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1492:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1492:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1492:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1457:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1481:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "1464:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1464:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1454:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1454:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:42:6"
															},
															"nodeType": "YulIf",
															"src": "1444:62:6"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1427:5:6",
														"type": ""
													}
												],
												"src": "1392:120:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806301ffc9a714610030575b600080fd5b61004a600480360381019061004591906100dc565b610060565b6040516100579190610118565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000813590506100d681610170565b92915050565b6000602082840312156100f2576100f161016b565b5b6000610100848285016100c7565b91505092915050565b61011281610133565b82525050565b600060208201905061012d6000830184610109565b92915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600080fd5b6101798161013f565b811461018457600080fd5b5056fea26469706673582212205395336423732def0f77ca92f7ccfa8072c5e3997fcb69f4ca65bb6c0c84610664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xDC JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6 DUP2 PUSH2 0x170 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2 JUMPI PUSH2 0xF1 PUSH2 0x16B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP5 DUP3 DUP6 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x112 DUP2 PUSH2 0x133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x109 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179 DUP2 PUSH2 0x13F JUMP JUMPDEST DUP2 EQ PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 SWAP6 CALLER PUSH5 0x23732DEF0F PUSH24 0xCA92F7CCFA8072C5E3997FCB69F4CA65BB6C0C8461066473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "162:689:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;789:4;810:19;:33;830:12;810:33;;;;;;;;;;;;;;;;;;;;;;;;;;;803:40;;685:163;;;:::o;7:137:6:-;52:5;90:6;77:20;68:29;;106:32;132:5;106:32;:::i;:::-;7:137;;;;:::o;150:327::-;208:6;257:2;245:9;236:7;232:23;228:32;225:119;;;263:79;;:::i;:::-;225:119;383:1;408:52;452:7;443:6;432:9;428:22;408:52;:::i;:::-;398:62;;354:116;150:327;;;;:::o;483:109::-;564:21;579:5;564:21;:::i;:::-;559:3;552:34;483:109;;:::o;598:210::-;685:4;723:2;712:9;708:18;700:26;;736:65;798:1;787:9;783:17;774:6;736:65;:::i;:::-;598:210;;;;:::o;895:90::-;929:7;972:5;965:13;958:21;947:32;;895:90;;;:::o;991:149::-;1027:7;1067:66;1060:5;1056:78;1045:89;;991:149;;;:::o;1269:117::-;1378:1;1375;1368:12;1392:120;1464:23;1481:5;1464:23;:::i;:::-;1457:5;1454:34;1444:62;;1502:1;1499;1492:12;1444:62;1392:120;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "89000",
								"executionCost": "24495",
								"totalCost": "113495"
							},
							"external": {
								"supportsInterface(bytes4)": "2824"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 162,
									"end": 851,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 162,
									"end": 851,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 162,
									"end": 851,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 407,
									"end": 482,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 407,
									"end": 482,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 407,
									"end": 482,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 407,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 407,
									"end": 482,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 407,
									"end": 482,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 407,
									"end": 482,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 407,
									"end": 482,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 407,
									"end": 482,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 407,
									"end": 482,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 407,
									"end": 482,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 463,
									"end": 467,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 429,
									"end": 448,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 449,
									"end": 459,
									"name": "PUSH",
									"source": 5,
									"value": "1FFC9A7"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 467,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 429,
									"end": 467,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 429,
									"end": 467,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 429,
									"end": 467,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 162,
									"end": 851,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 851,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 162,
									"end": 851,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 851,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 851,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 162,
									"end": 851,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 851,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205395336423732def0f77ca92f7ccfa8072c5e3997fcb69f4ca65bb6c0c84610664736f6c63430008070033",
									".code": [
										{
											"begin": 162,
											"end": 851,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 851,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 162,
											"end": 851,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 789,
											"end": 793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 810,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 810,
											"end": 843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 803,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 803,
											"end": 843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 685,
											"end": 848,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 52,
											"end": 57,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 96,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 77,
											"end": 97,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 68,
											"end": 97,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 68,
											"end": 97,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 106,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 106,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 106,
											"end": 138,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 106,
											"end": 138,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 106,
											"end": 138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 477,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 150,
											"end": 477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 236,
											"end": 243,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 232,
											"end": 255,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 228,
											"end": 260,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 225,
											"end": 344,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 225,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 225,
											"end": 344,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 263,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 263,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 263,
											"end": 342,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 342,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 263,
											"end": 342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 225,
											"end": 344,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 225,
											"end": 344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 383,
											"end": 384,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 459,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 432,
											"end": 441,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 428,
											"end": 450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 408,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 398,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 398,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 354,
											"end": 470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 150,
											"end": 477,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 150,
											"end": 477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 150,
											"end": 477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 150,
											"end": 477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 150,
											"end": 477,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 483,
											"end": 592,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 483,
											"end": 592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 564,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 579,
											"end": 584,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 564,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 564,
											"end": 585,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 564,
											"end": 585,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 564,
											"end": 585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 559,
											"end": 562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 552,
											"end": 586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 483,
											"end": 592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 592,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 808,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 598,
											"end": 808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 685,
											"end": 689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 712,
											"end": 721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 708,
											"end": 726,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 736,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 798,
											"end": 799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 796,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 783,
											"end": 800,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 774,
											"end": 780,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 736,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 736,
											"end": 801,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 801,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 736,
											"end": 801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 598,
											"end": 808,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 598,
											"end": 808,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 598,
											"end": 808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 598,
											"end": 808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 598,
											"end": 808,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 895,
											"end": 985,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 929,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 965,
											"end": 978,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 958,
											"end": 979,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 947,
											"end": 979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 947,
											"end": 979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 895,
											"end": 985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 895,
											"end": 985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 895,
											"end": 985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 895,
											"end": 985,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 991,
											"end": 1140,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 991,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1133,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1060,
											"end": 1065,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1134,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1045,
											"end": 1134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 991,
											"end": 1140,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 991,
											"end": 1140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 991,
											"end": 1140,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 991,
											"end": 1140,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1269,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1269,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1512,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1392,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1464,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1481,
											"end": 1486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1464,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1464,
											"end": 1487,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1464,
											"end": 1487,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1464,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1444,
											"end": 1506,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1504,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1506,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1444,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1512,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of standard for detect smart contract interfaces.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Contract constructor.\"},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}}},\"stateVariables\":{\"supportedInterfaces\":{\"details\":\"Mapping of supported intefraces. You must not set element 0xffffffff to true.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":\"SupportsInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/0xcert/ethereum-erc721/src/contracts/utils/erc165.sol\":{\"keccak256\":\"0x926d28b30f5abaa07933383993c7f9a64cc2f93f7e51681edc957d8f5b9c5b90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f89a53e07499c04d0f667e6692da52a47d4cb8a79e5937809e08c23138a5b3b\",\"dweb:/ipfs/QmeoL8qx7cAUeXanVF7irgqdtLwwjhFo1QvZ8h4XAKreUe\"]},\".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0xf0daec317a540048091f2795f3bd7d31fe80858f5f17bf2c3936e112b18ec6e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c7a2248f7d03daafa1ff7547de55331875c8ae25b04ec8f48905016309be4db\",\"dweb:/ipfs/QmRq3jzFRVsuz63u2LURRCK9Ma81q1wRr3PXC765F4dAuK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 855,
								"contract": ".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol:SupportsInterface",
								"label": "supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol": {
				"ast": {
					"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol",
					"exportedSymbols": {
						"ERC721TokenReceiver": [
							17
						]
					},
					"id": 18,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:132:0",
								"text": " @dev ERC-721 interface for accepting safe transfers.\n See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "ERC721TokenReceiver",
							"nameLocation": "200:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:921:0",
										"text": " @notice The contract address is always the message sender. A wallet/broker/auction application\n MUST implement the wallet interface if it will accept safe transfers.\n @dev Handle the receipt of a NFT. The ERC721 smart contract calls this function on the\n recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return\n of other than the magic value MUST result in the transaction being reverted.\n Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.\n @param _operator The address which called `safeTransferFrom` function.\n @param _from The address which previously owned the token.\n @param _tokenId The NFT identifier which is being transferred.\n @param _data Additional data with no specified format.\n @return Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`."
									},
									"functionSelector": "150b7a02",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "1158:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1188:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1180:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1211:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1203:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1230:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1222:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1259:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1244:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1244:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:94:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1294:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:8:0"
									},
									"scope": 17,
									"src": "1149:153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 18,
							"src": "190:1115:0",
							"usedErrors": []
						}
					],
					"src": "32:1274:0"
				},
				"id": 0
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721.sol": {
				"ast": {
					"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721.sol",
					"exportedSymbols": {
						"ERC721": [
							130
						]
					},
					"id": 131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 19,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 20,
								"nodeType": "StructuredDocumentation",
								"src": "57:121:1",
								"text": " @dev ERC-721 non-fungible token standard.\n See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md."
							},
							"fullyImplemented": false,
							"id": 130,
							"linearizedBaseContracts": [
								130
							],
							"name": "ERC721",
							"nameLocation": "189:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "201:373:1",
										"text": " @dev Emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are\n created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any\n number of NFTs may be created and assigned without emitting Transfer. At the time of any\n transfer, the approved address for that NFT (if any) is reset to none."
									},
									"id": 29,
									"name": "Transfer",
									"nameLocation": "583:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "613:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "597:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "640:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "624:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "665:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "649:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:86:1"
									},
									"src": "577:101:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "682:275:1",
										"text": " @dev This emits when the approved address for an NFT is changed or reaffirmed. The zero\n address indicates there is no approved address. When a Transfer event emits, this also\n indicates that the approved address for that NFT (if any) is reset to none."
									},
									"id": 38,
									"name": "Approval",
									"nameLocation": "966:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "996:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "980:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1024:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1008:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1055:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1039:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "974:93:1"
									},
									"src": "960:108:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1072:136:1",
										"text": " @dev This emits when an operator is enabled or disabled for an owner. The operator can manage\n all NFTs of the owner."
									},
									"id": 47,
									"name": "ApprovalForAll",
									"nameLocation": "1217:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1253:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1237:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1281:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1265:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1301:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1296:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1296:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:83:1"
									},
									"src": "1211:104:1"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1319:851:1",
										"text": " @notice Throws unless `msg.sender` is the current owner, an authorized operator, or the\n approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is\n the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this\n function checks if `_to` is a smart contract (code size > 0). If so, it calls\n `onERC721Received` on `_to` and throws if the return value is not\n `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`.\n @dev Transfers the ownership of an NFT from one address to another address. This function can\n be changed to payable.\n @param _from The current owner of the NFT.\n @param _to The new owner.\n @param _tokenId The NFT to transfer.\n @param _data Additional data with no specified format, sent in call to `_to`."
									},
									"functionSelector": "b88d4fde",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2182:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2212:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2204:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2231:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2223:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2248:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2240:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "2277:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2262:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2262:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2198:88:1"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2299:0:1"
									},
									"scope": 130,
									"src": "2173:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2304:392:1",
										"text": " @notice This works identically to the other function with an extra data parameter, except this\n function just sets data to \"\"\n @dev Transfers the ownership of an NFT from one address to another address. This function can\n be changed to payable.\n @param _from The current owner of the NFT.\n @param _to The new owner.\n @param _tokenId The NFT to transfer."
									},
									"functionSelector": "42842e0e",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2708:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2738:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2730:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2757:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2749:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2774:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2766:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:62:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2799:0:1"
									},
									"scope": 130,
									"src": "2699:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2804:558:1",
										"text": " @notice The caller is responsible to confirm that `_to` is capable of receiving NFTs or else\n they may be permanently lost.\n @dev Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero\n address. Throws if `_tokenId` is not a valid NFT.  This function can be changed to payable.\n @param _from The current owner of the NFT.\n @param _to The new owner.\n @param _tokenId The NFT to transfer."
									},
									"functionSelector": "23b872dd",
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3374:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3400:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3392:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3419:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3411:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3411:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3436:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3428:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3386:62:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3461:0:1"
									},
									"scope": 130,
									"src": "3365:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3466:381:1",
										"text": " @notice The zero address indicates there is no approved address. Throws unless `msg.sender` is\n the current NFT owner, or an authorized operator of the current owner.\n @param _approved The new approved NFT controller.\n @dev Set or reaffirm the approved address for an NFT. This function can be changed to payable.\n @param _tokenId The NFT to approve."
									},
									"functionSelector": "095ea7b3",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3859:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "3880:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3872:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3872:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3903:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3895:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3895:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3866:49:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3928:0:1"
									},
									"scope": 130,
									"src": "3850:79:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3933:387:1",
										"text": " @notice The contract MUST allow multiple operators per owner.\n @dev Enables or disables approval for a third party (\"operator\") to manage all of\n `msg.sender`'s assets. It also emits the ApprovalForAll event.\n @param _operator Address to add to the set of authorized operators.\n @param _approved True if the operators is approved, false to revoke approval."
									},
									"functionSelector": "a22cb465",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4332:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "4363:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "4355:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4355:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4383:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "4378:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 91,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4378:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4349:47:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4409:0:1"
									},
									"scope": 130,
									"src": "4323:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "4414:329:1",
										"text": " @dev Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are\n considered invalid, and this function throws for queries about the zero address.\n @notice Count all NFTs assigned to an owner.\n @param _owner Address for whom to query the balance.\n @return Balance of _owner."
									},
									"functionSelector": "70a08231",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4755:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "4778:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4770:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4764:24:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4824:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:1"
									},
									"scope": 130,
									"src": "4746:87:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "4837:287:1",
										"text": " @notice Find the owner of an NFT.\n @dev Returns the address of the owner of the NFT. NFTs assigned to the zero address are\n considered invalid, and queries about them do throw.\n @param _tokenId The identifier for an NFT.\n @return Address of _tokenId owner."
									},
									"functionSelector": "6352211e",
									"id": 111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "5136:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "5157:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5149:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:26:1"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5205:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5204:9:1"
									},
									"scope": 130,
									"src": "5127:87:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5218:231:1",
										"text": " @notice Throws if `_tokenId` is not a valid NFT.\n @dev Get the approved address for a single NFT.\n @param _tokenId The NFT to find the approved address for.\n @return Address that _tokenId is approved for."
									},
									"functionSelector": "081812fc",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5461:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "5486:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5478:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5472:26:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5534:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5534:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5533:9:1"
									},
									"scope": 130,
									"src": "5452:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "5547:357:1",
										"text": " @notice Query if an address is an authorized operator for another address.\n @dev Returns true if `_operator` is an approved operator for `_owner`, false otherwise.\n @param _owner The address that owns the NFTs.\n @param _operator The address that acts on behalf of the owner.\n @return True if approved for all, false otherwise."
									},
									"functionSelector": "e985e9c5",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5916:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5946:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5938:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5938:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "5966:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5958:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5958:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5932:47:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "6015:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6015:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6014:6:1"
									},
									"scope": 130,
									"src": "5907:114:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 131,
							"src": "179:5845:1",
							"usedErrors": []
						}
					],
					"src": "32:5993:1"
				},
				"id": 1
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol": {
				"ast": {
					"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol",
					"exportedSymbols": {
						"AddressUtils": [
							832
						],
						"ERC165": [
							844
						],
						"ERC721": [
							130
						],
						"ERC721TokenReceiver": [
							17
						],
						"NFToken": [
							800
						],
						"SupportsInterface": [
							881
						]
					},
					"id": 801,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721.sol",
							"file": "./erc721.sol",
							"id": 133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 801,
							"sourceUnit": 131,
							"src": "57:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol",
							"file": "./erc721-token-receiver.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 801,
							"sourceUnit": 18,
							"src": "80:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol",
							"file": "../utils/supports-interface.sol",
							"id": 135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 801,
							"sourceUnit": 882,
							"src": "118:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol",
							"file": "../utils/address-utils.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 801,
							"sourceUnit": 833,
							"src": "160:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 130,
										"src": "291:6:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "291:6:2"
								},
								{
									"baseName": {
										"id": 140,
										"name": "SupportsInterface",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 881,
										"src": "301:17:2"
									},
									"id": 141,
									"nodeType": "InheritanceSpecifier",
									"src": "301:17:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "198:70:2",
								"text": " @dev Implementation of ERC-721 non-fungible token standard."
							},
							"fullyImplemented": true,
							"id": 800,
							"linearizedBaseContracts": [
								800,
								881,
								844,
								130
							],
							"name": "NFToken",
							"nameLocation": "278:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 144,
									"libraryName": {
										"id": 142,
										"name": "AddressUtils",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 832,
										"src": "329:12:2"
									},
									"nodeType": "UsingForDirective",
									"src": "323:31:2",
									"typeName": {
										"id": 143,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "346:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "358:154:2",
										"text": " @dev List of revert message codes. Implementing dApp should handle showing the correct message.\n Based on 0xcert framework error codes."
									},
									"id": 148,
									"mutability": "constant",
									"name": "ZERO_ADDRESS",
									"nameLocation": "531:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "515:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 146,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "515:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "303033303031",
										"id": 147,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "546:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_805860f4087e294b95348925474004efcb8769bdc7fa60edda8d563f69bfda96",
											"typeString": "literal_string \"003001\""
										},
										"value": "003001"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 151,
									"mutability": "constant",
									"name": "NOT_VALID_NFT",
									"nameLocation": "574:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "558:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 149,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "558:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "303033303032",
										"id": 150,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "590:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1c321a9902f281869cccb39d8d4f78b53c118e8eb9ad89321ed647ecb96d1da4",
											"typeString": "literal_string \"003002\""
										},
										"value": "003002"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 154,
									"mutability": "constant",
									"name": "NOT_OWNER_OR_OPERATOR",
									"nameLocation": "618:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "602:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 152,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "602:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "303033303033",
										"id": 153,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "642:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_392475f811389a2336ce707cb245ab481cfe1137cf0768339b8cc5bf0aca521c",
											"typeString": "literal_string \"003003\""
										},
										"value": "003003"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 157,
									"mutability": "constant",
									"name": "NOT_OWNER_APPROVED_OR_OPERATOR",
									"nameLocation": "670:30:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "654:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 155,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "654:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "303033303034",
										"id": 156,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "703:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d071bd1021808c0513176db40a07a33c9124aece6df350c9ef4b58b878924cc1",
											"typeString": "literal_string \"003004\""
										},
										"value": "003004"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 160,
									"mutability": "constant",
									"name": "NOT_ABLE_TO_RECEIVE_NFT",
									"nameLocation": "731:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "715:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 158,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "715:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "303033303035",
										"id": 159,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "757:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8a9dcfef81b91d39d2dd5dd57045790c21a0eb3a78cec69fd6a8b889ea9f5abf",
											"typeString": "literal_string \"003005\""
										},
										"value": "003005"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 163,
									"mutability": "constant",
									"name": "NFT_ALREADY_EXISTS",
									"nameLocation": "785:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "769:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 161,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "769:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "303033303036",
										"id": 162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "806:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_aff7899b4a9e0ad82b23f45d98ed09506493877fd4cd3acb734c89dde045b2a3",
											"typeString": "literal_string \"003006\""
										},
										"value": "003006"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 166,
									"mutability": "constant",
									"name": "NOT_OWNER",
									"nameLocation": "834:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "818:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 164,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "818:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "303033303037",
										"id": 165,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "846:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cd582b8e37deb5a49490b94f89d2bc795901cec294340bd49b0a2f44b14ffe01",
											"typeString": "literal_string \"003007\""
										},
										"value": "003007"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 169,
									"mutability": "constant",
									"name": "IS_OWNER",
									"nameLocation": "874:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "858:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 167,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "858:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "303033303038",
										"id": 168,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "885:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e28e2185310afb34f65302219c755cbd47ceb7fe00a60a59a81119572b20e995",
											"typeString": "literal_string \"003008\""
										},
										"value": "003008"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "898:158:2",
										"text": " @dev Magic value of a smart contract that can receive NFT.\n Equal to: bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))."
									},
									"id": 173,
									"mutability": "constant",
									"name": "MAGIC_ON_ERC721_RECEIVED",
									"nameLocation": "1084:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "1059:62:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 171,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1059:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783135306237613032",
										"id": 172,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1111:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_353073666_by_1",
											"typeString": "int_const 353073666"
										},
										"value": "0x150b7a02"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "1126:70:2",
										"text": " @dev A mapping from NFT ID to the address that owns it."
									},
									"id": 178,
									"mutability": "mutable",
									"name": "idToOwner",
									"nameLocation": "1237:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "1199:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 177,
										"keyType": {
											"id": 175,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1208:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1219:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1251:60:2",
										"text": " @dev Mapping from NFT ID to approved address."
									},
									"id": 183,
									"mutability": "mutable",
									"name": "idToApproval",
									"nameLocation": "1352:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "1314:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 182,
										"keyType": {
											"id": 180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1323:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1314:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1334:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1370:72:2",
										"text": " @dev Mapping from owner address to count of their tokens."
									},
									"id": 188,
									"mutability": "mutable",
									"name": "ownerToNFTokenCount",
									"nameLocation": "1482:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "1445:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 187,
										"keyType": {
											"id": 185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1454:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1445:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 186,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1465:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1506:80:2",
										"text": " @dev Mapping from owner address to mapping of operator addresses."
									},
									"id": 195,
									"mutability": "mutable",
									"name": "ownerToOperators",
									"nameLocation": "1645:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "1589:72:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 194,
										"keyType": {
											"id": 190,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1598:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1589:46:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 193,
											"keyType": {
												"id": 191,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1618:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1609:25:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 192,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1629:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "1857:182:2",
										"statements": [
											{
												"assignments": [
													201
												],
												"declarations": [
													{
														"constant": false,
														"id": 201,
														"mutability": "mutable",
														"name": "tokenOwner",
														"nameLocation": "1871:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "1863:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 200,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1863:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"baseExpression": {
														"id": 202,
														"name": "idToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "1884:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 204,
													"indexExpression": {
														"id": 203,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "1894:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1884:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1863:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 207,
																	"name": "tokenOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "1924:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 208,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1938:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1938:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1924:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 211,
																		"name": "ownerToOperators",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "1952:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(address => bool))"
																		}
																	},
																	"id": 213,
																	"indexExpression": {
																		"id": 212,
																		"name": "tokenOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 201,
																		"src": "1969:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1952:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 216,
																"indexExpression": {
																	"expression": {
																		"id": 214,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1981:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1981:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1952:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1924:68:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 218,
															"name": "NOT_OWNER_OR_OPERATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2000:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1909:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1909:118:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "1909:118:2"
											},
											{
												"id": 221,
												"nodeType": "PlaceholderStatement",
												"src": "2033:1:2"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "1666:140:2",
										"text": " @dev Guarantees that the msg.sender is an owner or operator of the given NFT.\n @param _tokenId ID of the NFT to validate."
									},
									"id": 223,
									"name": "canOperate",
									"nameLocation": "1818:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1834:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1828:26:2"
									},
									"src": "1809:230:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2221:243:2",
										"statements": [
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "tokenOwner",
														"nameLocation": "2235:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "2227:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 228,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2227:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"baseExpression": {
														"id": 230,
														"name": "idToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "2248:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 232,
													"indexExpression": {
														"id": 231,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2258:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2248:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2227:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 235,
																		"name": "tokenOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2288:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 236,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2302:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2302:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2288:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 239,
																			"name": "idToApproval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 183,
																			"src": "2322:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 241,
																		"indexExpression": {
																			"id": 240,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 226,
																			"src": "2335:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2322:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 242,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2348:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2348:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2322:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2288:70:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 246,
																		"name": "ownerToOperators",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "2368:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(address => bool))"
																		}
																	},
																	"id": 248,
																	"indexExpression": {
																		"id": 247,
																		"name": "tokenOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2385:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2368:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 251,
																"indexExpression": {
																	"expression": {
																		"id": 249,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2397:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2397:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2368:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2288:120:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 253,
															"name": "NOT_OWNER_APPROVED_OR_OPERATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "2416:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2273:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2273:179:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "2273:179:2"
											},
											{
												"id": 256,
												"nodeType": "PlaceholderStatement",
												"src": "2458:1:2"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2043:126:2",
										"text": " @dev Guarantees that the msg.sender is allowed to transfer NFT.\n @param _tokenId ID of the NFT to transfer."
									},
									"id": 258,
									"name": "canTransfer",
									"nameLocation": "2181:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2206:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2198:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2198:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2192:26:2"
									},
									"src": "2172:292:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "2631:75:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 264,
																	"name": "idToOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "2645:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 266,
																"indexExpression": {
																	"id": 265,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "2655:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2645:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2676:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2668:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 267,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2668:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2668:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2645:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 272,
															"name": "NOT_VALID_NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2680:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2637:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2637:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "2637:57:2"
											},
											{
												"id": 275,
												"nodeType": "PlaceholderStatement",
												"src": "2700:1:2"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "2468:110:2",
										"text": " @dev Guarantees that _tokenId is a valid Token.\n @param _tokenId ID of the NFT to validate."
									},
									"id": 277,
									"name": "validNFToken",
									"nameLocation": "2590:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2616:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2608:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:26:2"
									},
									"src": "2581:125:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "2770:59:2",
										"statements": [
											{
												"expression": {
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 281,
															"name": "supportedInterfaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "2776:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 283,
														"indexExpression": {
															"hexValue": "30783830616335386364",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2796:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2158778573_by_1",
																"typeString": "int_const 2158778573"
															},
															"value": "0x80ac58cd"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2776:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2810:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2776:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "2776:38:2"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2710:41:2",
										"text": " @dev Contract constructor."
									},
									"id": 288,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2765:2:2"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2770:0:2"
									},
									"scope": 800,
									"src": "2754:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										59
									],
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "3829:57:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 302,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "3853:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "3860:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 304,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "3865:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 305,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "3875:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 301,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "3835:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3835:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "3835:46:2"
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "2833:851:2",
										"text": " @notice Throws unless `msg.sender` is the current owner, an authorized operator, or the\n approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is\n the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this\n function checks if `_to` is a smart contract (code size > 0). If so, it calls\n `onERC721Received` on `_to` and throws if the return value is not\n `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`.\n @dev Transfers the ownership of an NFT from one address to another address. This function can\n be changed to payable.\n @param _from The current owner of the NFT.\n @param _to The new owner.\n @param _tokenId The NFT to transfer.\n @param _data Additional data with no specified format, sent in call to `_to`."
									},
									"functionSelector": "b88d4fde",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3696:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 299,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3818:8:2"
									},
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3726:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3718:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3745:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3737:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3762:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3754:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3791:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3776:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3712:88:2"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3829:0:2"
									},
									"scope": 800,
									"src": "3687:199:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "4402:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 321,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "4426:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4433:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 323,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "4438:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4448:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 320,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "4408:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4408:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "4408:43:2"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "3890:393:2",
										"text": " @notice This works identically to the other function with an extra data parameter, except this\n function just sets data to \"\".\n @dev Transfers the ownership of an NFT from one address to another address. This function can\n be changed to payable.\n @param _from The current owner of the NFT.\n @param _to The new owner.\n @param _tokenId The NFT to transfer."
									},
									"functionSelector": "42842e0e",
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4295:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 318,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4391:8:2"
									},
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "4317:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4317:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4344:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "4336:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4361:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "4353:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4353:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4311:62:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4402:0:2"
									},
									"scope": 800,
									"src": "4286:170:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										79
									],
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "5185:173:2",
										"statements": [
											{
												"assignments": [
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "tokenOwner",
														"nameLocation": "5199:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "5191:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 345,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5191:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"baseExpression": {
														"id": 347,
														"name": "idToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "5212:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 349,
													"indexExpression": {
														"id": 348,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "5222:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5212:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5191:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 352,
																"name": "tokenOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "5245:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 353,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "5259:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5245:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 355,
															"name": "NOT_OWNER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5266:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5237:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "5237:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 359,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "5290:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5305:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5297:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 360,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5297:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5297:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5290:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 365,
															"name": "ZERO_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "5309:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5282:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5282:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "5339:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "5344:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "5329:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5329:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "5329:24:2"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "4460:557:2",
										"text": " @notice The caller is responsible to confirm that `_to` is capable of receiving NFTs or else\n they may be permanently lost.\n @dev Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero\n address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\n @param _from The current owner of the NFT.\n @param _to The new owner.\n @param _tokenId The NFT to transfer."
									},
									"functionSelector": "23b872dd",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 339,
													"name": "_tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 335,
													"src": "5146:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 340,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 338,
												"name": "canTransfer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "5134:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5134:21:2"
										},
										{
											"arguments": [
												{
													"id": 342,
													"name": "_tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 335,
													"src": "5173:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 343,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 341,
												"name": "validNFToken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "5160:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5160:22:2"
										}
									],
									"name": "transferFrom",
									"nameLocation": "5029:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 337,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5121:8:2"
									},
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "5055:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "5047:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5047:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5074:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "5066:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5066:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "5091:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "5083:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5083:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5041:62:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5185:0:2"
									},
									"scope": 800,
									"src": "5020:338:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5916:192:2",
										"statements": [
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "tokenOwner",
														"nameLocation": "5930:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "5922:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 389,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5922:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"baseExpression": {
														"id": 391,
														"name": "idToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "5943:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 393,
													"indexExpression": {
														"id": 392,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "5953:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5943:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5922:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 396,
																"name": "_approved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "5976:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 397,
																"name": "tokenOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "5989:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5976:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 399,
															"name": "IS_OWNER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "6001:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5968:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5968:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "5968:42:2"
											},
											{
												"expression": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 402,
															"name": "idToApproval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6017:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 404,
														"indexExpression": {
															"id": 403,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "6030:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6017:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 405,
														"name": "_approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "6042:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6017:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "6017:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 409,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "6071:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "_approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "6083:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "6094:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 408,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "6062:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6062:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "EmitStatement",
												"src": "6057:46:2"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "5362:405:2",
										"text": " @notice The zero address indicates there is no approved address. Throws unless `msg.sender` is\n the current NFT owner, or an authorized operator of the current owner.\n @dev Set or reaffirm the approved address for an NFT. This function can be changed to payable.\n @param _approved Address to be approved for the given NFT ID.\n @param _tokenId ID of the token to be approved."
									},
									"functionSelector": "095ea7b3",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 383,
													"name": "_tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 379,
													"src": "5877:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 384,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 382,
												"name": "canOperate",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 223,
												"src": "5866:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5866:20:2"
										},
										{
											"arguments": [
												{
													"id": 386,
													"name": "_tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 379,
													"src": "5904:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 387,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 385,
												"name": "validNFToken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "5891:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5891:22:2"
										}
									],
									"name": "approve",
									"nameLocation": "5779:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 381,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5853:8:2"
									},
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "5800:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5792:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5792:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "5823:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5815:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5815:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5786:49:2"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5916:0:2"
									},
									"scope": 800,
									"src": "5770:338:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										95
									],
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "6612:121:2",
										"statements": [
											{
												"expression": {
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 424,
																"name": "ownerToOperators",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "6618:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 428,
															"indexExpression": {
																"expression": {
																	"id": 425,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6635:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6635:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6618:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 429,
														"indexExpression": {
															"id": 427,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "6647:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6618:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 430,
														"name": "_approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "6660:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6618:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "6618:51:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 434,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6695:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6695:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "6707:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "_approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "6718:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 433,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "6680:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6680:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "EmitStatement",
												"src": "6675:53:2"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "6112:395:2",
										"text": " @notice This works even if sender doesn't own any tokens at the time.\n @dev Enables or disables approval for a third party (\"operator\") to manage all of\n `msg.sender`'s assets. It also emits the ApprovalForAll event.\n @param _operator Address to add to the set of authorized operators.\n @param _approved True if the operators is approved, false to revoke approval."
									},
									"functionSelector": "a22cb465",
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6519:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 422,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6601:8:2"
									},
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "6550:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "6542:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6542:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "6570:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "6565:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6565:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6536:47:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6612:0:2"
									},
									"scope": 800,
									"src": "6510:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										103
									],
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "7121:92:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 451,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "7135:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7153:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7145:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 452,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7145:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7145:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7135:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 457,
															"name": "ZERO_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "7157:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7127:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7127:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "7127:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "7201:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 460,
														"name": "_getOwnerNFTCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "7183:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7183:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 449,
												"id": 463,
												"nodeType": "Return",
												"src": "7176:32:2"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "6737:279:2",
										"text": " @dev Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are\n considered invalid, and this function throws for queries about the zero address.\n @param _owner Address for whom to query the balance.\n @return Balance of _owner."
									},
									"functionSelector": "70a08231",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7028:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 446,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7079:8:2"
									},
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "7051:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7043:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7037:24:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7110:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7110:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7109:9:2"
									},
									"scope": 800,
									"src": "7019:194:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										111
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7584:89:2",
										"statements": [
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 474,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "7590:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 475,
															"name": "idToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "7599:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 477,
														"indexExpression": {
															"id": 476,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "7609:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7599:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7590:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "7590:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 481,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "7632:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7650:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7642:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 482,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7642:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7642:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7632:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 487,
															"name": "NOT_VALID_NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "7654:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:44:2"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "7217:255:2",
										"text": " @dev Returns the address of the owner of the NFT. NFTs assigned to the zero address are\n considered invalid, and queries about them do throw.\n @param _tokenId The identifier for an NFT.\n @return _owner Address of _tokenId owner."
									},
									"functionSelector": "6352211e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "7484:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 470,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7535:8:2"
									},
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "7505:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7497:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7497:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:26:2"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "7574:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7566:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7565:16:2"
									},
									"scope": 800,
									"src": "7475:198:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										119
									],
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "8042:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 503,
														"name": "idToApproval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "8055:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 505,
													"indexExpression": {
														"id": 504,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8068:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8055:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 502,
												"id": 506,
												"nodeType": "Return",
												"src": "8048:29:2"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7677:229:2",
										"text": " @notice Throws if `_tokenId` is not a valid NFT.\n @dev Get the approved address for a single NFT.\n @param _tokenId ID of the NFT to query the approval of.\n @return Address that _tokenId is approved for."
									},
									"functionSelector": "081812fc",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 498,
													"name": "_tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 494,
													"src": "8008:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 497,
												"name": "validNFToken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "7995:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "7995:22:2"
										}
									],
									"name": "getApproved",
									"nameLocation": "7918:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 496,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7973:8:2"
									},
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "7943:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "7935:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7929:26:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "8031:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8030:9:2"
									},
									"scope": 800,
									"src": "7909:173:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										129
									],
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "8472:53:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 519,
															"name": "ownerToOperators",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "8485:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 521,
														"indexExpression": {
															"id": 520,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "8502:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8485:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 523,
													"indexExpression": {
														"id": 522,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "8510:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8485:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 518,
												"id": 524,
												"nodeType": "Return",
												"src": "8478:42:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "8086:254:2",
										"text": " @dev Checks if `_operator` is an approved operator for `_owner`.\n @param _owner The address that owns the NFTs.\n @param _operator The address that acts on behalf of the owner.\n @return True if approved for all, false otherwise."
									},
									"functionSelector": "e985e9c5",
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "8352:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 515,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8433:8:2"
									},
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "8382:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "8374:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "8402:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "8394:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8394:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8368:47:2"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "8464:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8464:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8463:6:2"
									},
									"scope": 800,
									"src": "8343:182:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "8797:185:2",
										"statements": [
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8811:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "8803:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8803:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"baseExpression": {
														"id": 536,
														"name": "idToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "8818:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 538,
													"indexExpression": {
														"id": 537,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "8828:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8818:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8803:34:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 541,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8858:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 540,
														"name": "_clearApproval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "8843:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8843:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "8843:24:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "8889:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8895:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 544,
														"name": "_removeNFToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "8874:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8874:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "8874:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8922:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8927:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_addNFToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "8910:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8910:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "8910:26:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 555,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "8957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8963:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8968:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 554,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "8948:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8948:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "EmitStatement",
												"src": "8943:34:2"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "8529:176:2",
										"text": " @notice Does NO checks.\n @dev Actually performs the transfer.\n @param _to Address of a new owner.\n @param _tokenId The NFT that is being transferred."
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8717:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "8740:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "8732:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8732:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "8757:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "8749:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8726:43:2"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8797:0:2"
									},
									"scope": 800,
									"src": "8708:274:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "9448:199:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 570,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "9462:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 571,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9462:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 576,
															"name": "ZERO_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "9481:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 569,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9454:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9454:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "9454:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 580,
																	"name": "idToOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "9508:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 582,
																"indexExpression": {
																	"id": 581,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "9518:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9508:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9539:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9531:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 583,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9531:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9531:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9508:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 588,
															"name": "NFT_ALREADY_EXISTS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "9543:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9500:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9500:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "9500:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9581:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 593,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "9586:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "_addNFToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "9569:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9569:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "9569:26:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9624:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9616:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 597,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9616:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9616:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9628:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "9633:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "9607:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9607:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "9602:40:2"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "8986:374:2",
										"text": " @notice This is an internal function which should be called from user-implemented external\n mint function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @dev Mints a new NFT.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9372:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "9391:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9383:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9383:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "9408:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9400:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9400:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9377:43:2"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9448:0:2"
									},
									"scope": 800,
									"src": "9363:284:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "10135:176:2",
										"statements": [
											{
												"assignments": [
													616
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "tokenOwner",
														"nameLocation": "10149:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "10141:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 615,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10141:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"baseExpression": {
														"id": 617,
														"name": "idToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "10162:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 619,
													"indexExpression": {
														"id": 618,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "10172:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10162:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10141:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "10202:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 621,
														"name": "_clearApproval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "10187:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10187:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "10187:24:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 626,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "10232:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "10244:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 625,
														"name": "_removeNFToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "10217:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10217:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "10217:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 631,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "10273:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10293:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10285:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 632,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10285:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10285:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "10297:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "10264:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10264:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "EmitStatement",
												"src": "10259:47:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "9651:386:2",
										"text": " @notice This is an internal function which should be called from user-implemented external burn\n function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @dev Burns a NFT.\n @param _tokenId ID of the NFT to be burned."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 612,
													"name": "_tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 609,
													"src": "10123:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 613,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 611,
												"name": "validNFToken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "10110:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "10110:22:2"
										}
									],
									"name": "_burn",
									"nameLocation": "10049:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "10068:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "10060:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10054:26:2"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10135:0:2"
									},
									"scope": 800,
									"src": "10040:271:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "10674:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 649,
																	"name": "idToOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "10688:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 651,
																"indexExpression": {
																	"id": 650,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "10698:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10688:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 652,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "10711:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10688:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 654,
															"name": "NOT_OWNER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "10718:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 648,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10680:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10680:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "10680:48:2"
											},
											{
												"expression": {
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 657,
															"name": "ownerToNFTokenCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "10734:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 659,
														"indexExpression": {
															"id": 658,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "10754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10734:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10764:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10734:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "10734:31:2"
											},
											{
												"expression": {
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10771:26:2",
													"subExpression": {
														"baseExpression": {
															"id": 663,
															"name": "idToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "10778:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 665,
														"indexExpression": {
															"id": 664,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "10788:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10778:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "10771:26:2"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "10315:260:2",
										"text": " @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @dev Removes a NFT from owner.\n @param _from Address from which we want to remove the NFT.\n @param _tokenId Which NFT we want to remove."
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeNFToken",
									"nameLocation": "10587:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "10615:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "10607:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10607:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "10634:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "10626:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10626:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10601:45:2"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10674:0:2"
									},
									"scope": 800,
									"src": "10578:224:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "11152:140:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 678,
																	"name": "idToOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "11166:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 680,
																"indexExpression": {
																	"id": 679,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "11176:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11166:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11197:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11189:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 681,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11189:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11189:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11166:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 686,
															"name": "NFT_ALREADY_EXISTS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "11201:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11158:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11158:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "11158:62:2"
											},
											{
												"expression": {
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 689,
															"name": "idToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "11227:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 691,
														"indexExpression": {
															"id": 690,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "11237:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11227:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 692,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "11249:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11227:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "11227:25:2"
											},
											{
												"expression": {
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 695,
															"name": "ownerToNFTokenCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "11258:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 697,
														"indexExpression": {
															"id": 696,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "11278:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11258:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11286:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11258:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "11258:29:2"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "10806:252:2",
										"text": " @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @dev Assigns a new NFT to owner.\n @param _to Address to which we want to add the NFT.\n @param _tokenId Which NFT we want to add."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addNFToken",
									"nameLocation": "11070:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "11095:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "11087:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11087:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "11112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "11104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11081:43:2"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11152:0:2"
									},
									"scope": 800,
									"src": "11061:231:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "11689:45:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 710,
														"name": "ownerToNFTokenCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "11702:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 712,
													"indexExpression": {
														"id": 711,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "11722:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11702:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 709,
												"id": 713,
												"nodeType": "Return",
												"src": "11695:34:2"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "11296:281:2",
										"text": " @dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\n extension to remove double storage (gas optimization) of owner NFT count.\n @param _owner Address for whom to query the count.\n @return Number of _owner NFTs."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnerNFTCount",
									"nameLocation": "11589:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "11620:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "11612:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11612:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11606:24:2"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "11678:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11677:9:2"
									},
									"scope": 800,
									"src": "11580:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "12183:389:2",
										"statements": [
											{
												"assignments": [
													734
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"mutability": "mutable",
														"name": "tokenOwner",
														"nameLocation": "12197:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 786,
														"src": "12189:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 733,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12189:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"baseExpression": {
														"id": 735,
														"name": "idToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "12210:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 737,
													"indexExpression": {
														"id": 736,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "12220:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12210:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12189:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "tokenOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "12243:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 741,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "12257:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12243:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 743,
															"name": "NOT_OWNER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "12264:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12235:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12235:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "12235:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 747,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "12288:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12303:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12295:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 748,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12295:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12295:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12288:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 753,
															"name": "ZERO_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "12307:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12280:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12280:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "12280:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 757,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "12337:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "12342:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 756,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "12327:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12327:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "12327:24:2"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 761,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "12362:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 831,
														"src": "12362:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12362:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 785,
												"nodeType": "IfStatement",
												"src": "12358:210:2",
												"trueBody": {
													"id": 784,
													"nodeType": "Block",
													"src": "12384:184:2",
													"statements": [
														{
															"assignments": [
																765
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 765,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "12399:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 784,
																	"src": "12392:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 764,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "12392:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 776,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 770,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12450:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12450:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 772,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 718,
																		"src": "12462:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 773,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "12469:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 774,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "12479:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 767,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 720,
																				"src": "12428:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 766,
																			"name": "ERC721TokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 17,
																			"src": "12408:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC721TokenReceiver_$17_$",
																				"typeString": "type(contract ERC721TokenReceiver)"
																			}
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12408:24:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC721TokenReceiver_$17",
																			"typeString": "contract ERC721TokenReceiver"
																		}
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "12408:41:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12408:77:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12392:93:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 778,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "12501:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 779,
																			"name": "MAGIC_ON_ERC721_RECEIVED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "12511:24:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "12501:34:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"id": 781,
																		"name": "NOT_ABLE_TO_RECEIVE_NFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "12537:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 777,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12493:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12493:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 783,
															"nodeType": "ExpressionStatement",
															"src": "12493:68:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "11738:262:2",
										"text": " @dev Actually perform the safeTransferFrom.\n @param _from The current owner of the NFT.\n @param _to The new owner.\n @param _tokenId The NFT to transfer.\n @param _data Additional data with no specified format, sent in call to `_to`."
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 727,
													"name": "_tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 722,
													"src": "12144:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 728,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 726,
												"name": "canTransfer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "12132:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "12132:21:2"
										},
										{
											"arguments": [
												{
													"id": 730,
													"name": "_tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 722,
													"src": "12171:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 729,
												"name": "validNFToken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "12158:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "12158:22:2"
										}
									],
									"name": "_safeTransferFrom",
									"nameLocation": "12012:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "12043:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "12035:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "12062:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "12054:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "12079:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "12071:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12071:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12106:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "12093:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12093:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12029:86:2"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12183:0:2"
									},
									"scope": 800,
									"src": "12003:569:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "12763:40:2",
										"statements": [
											{
												"expression": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "12769:29:2",
													"subExpression": {
														"baseExpression": {
															"id": 793,
															"name": "idToApproval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "12776:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 795,
														"indexExpression": {
															"id": 794,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "12789:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12776:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "12769:29:2"
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "12576:120:2",
										"text": " @dev Clears the current approval of a given NFT ID.\n @param _tokenId ID of the NFT to be transferred."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_clearApproval",
									"nameLocation": "12708:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "12736:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "12728:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12722:26:2"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12763:0:2"
									},
									"scope": 800,
									"src": "12699:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 801,
							"src": "269:12537:2",
							"usedErrors": []
						}
					],
					"src": "32:12775:2"
				},
				"id": 2
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol": {
				"ast": {
					"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol",
					"exportedSymbols": {
						"AddressUtils": [
							832
						]
					},
					"id": 833,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 802,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 803,
								"nodeType": "StructuredDocumentation",
								"src": "57:206:3",
								"text": " @notice Based on:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\n Requires EIP-1052.\n @dev Utility library of inline functions on addresses."
							},
							"fullyImplemented": true,
							"id": 832,
							"linearizedBaseContracts": [
								832
							],
							"name": "AddressUtils",
							"nameLocation": "272:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "566:663:3",
										"statements": [
											{
												"assignments": [
													812
												],
												"declarations": [
													{
														"constant": false,
														"id": 812,
														"mutability": "mutable",
														"name": "codehash",
														"nameLocation": "985:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 830,
														"src": "977:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 811,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "977:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 813,
												"nodeType": "VariableDeclarationStatement",
												"src": "977:16:3"
											},
											{
												"assignments": [
													815
												],
												"declarations": [
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "accountHash",
														"nameLocation": "1007:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 830,
														"src": "999:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 814,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "999:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1021:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "999:88:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1102:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1104:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "_addr",
																		"nodeType": "YulIdentifier",
																		"src": "1128:5:3"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1116:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1116:18:3"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1104:8:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "1128:5:3",
														"valueSize": 1
													},
													{
														"declaration": 812,
														"isOffset": false,
														"isSlot": false,
														"src": "1104:8:3",
														"valueSize": 1
													}
												],
												"id": 818,
												"nodeType": "InlineAssembly",
												"src": "1093:43:3"
											},
											{
												"expression": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 819,
														"name": "addressCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "1165:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 820,
																		"name": "codehash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "1181:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "307830",
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1193:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	},
																	"src": "1181:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 823,
																		"name": "codehash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "1200:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 824,
																		"name": "accountHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "1212:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "1200:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1181:42:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 827,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1180:44:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1165:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "1165:59:3"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "290:174:3",
										"text": " @dev Returns whether the target address is a contract.\n @param _addr Address to check.\n @return addressCheck True if _addr is a contract, false if not."
									},
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "476:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "500:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "492:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:23:3"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "addressCheck",
												"nameLocation": "550:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "545:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 808,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "545:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:19:3"
									},
									"scope": 832,
									"src": "467:762:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 833,
							"src": "264:968:3",
							"usedErrors": []
						}
					],
					"src": "32:1201:3"
				},
				"id": 3
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/utils/erc165.sol": {
				"ast": {
					"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/utils/erc165.sol",
					"exportedSymbols": {
						"ERC165": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 834,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 835,
								"nodeType": "StructuredDocumentation",
								"src": "57:116:4",
								"text": " @dev A standard for detecting smart contract interfaces. \n See: https://eips.ethereum.org/EIPS/eip-165."
							},
							"fullyImplemented": false,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "ERC165",
							"nameLocation": "184:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "196:266:4",
										"text": " @dev Checks if the smart contract includes a specific interface.\n This function uses less than 30,000 gas.\n @param _interfaceID The interface identifier, as specified in ERC-165.\n @return True if _interfaceID is supported, false otherwise."
									},
									"functionSelector": "01ffc9a7",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "474:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "_interfaceID",
												"nameLocation": "504:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "497:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 837,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "497:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:29:4"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "556:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 840,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "556:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:6:4"
									},
									"scope": 844,
									"src": "465:97:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 845,
							"src": "174:395:4",
							"usedErrors": []
						}
					],
					"src": "32:538:4"
				},
				"id": 4
			},
			".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol": {
				"ast": {
					"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol",
					"exportedSymbols": {
						"ERC165": [
							844
						],
						"SupportsInterface": [
							881
						]
					},
					"id": 882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": ".deps/github/0xcert/ethereum-erc721/src/contracts/utils/erc165.sol",
							"file": "./erc165.sol",
							"id": 847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 882,
							"sourceUnit": 845,
							"src": "57:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 849,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "194:6:5"
									},
									"id": 850,
									"nodeType": "InheritanceSpecifier",
									"src": "194:6:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 848,
								"nodeType": "StructuredDocumentation",
								"src": "81:80:5",
								"text": " @dev Implementation of standard for detect smart contract interfaces."
							},
							"fullyImplemented": true,
							"id": 881,
							"linearizedBaseContracts": [
								881,
								844
							],
							"name": "SupportsInterface",
							"nameLocation": "171:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "206:97:5",
										"text": " @dev Mapping of supported intefraces. You must not set element 0xffffffff to true."
									},
									"id": 855,
									"mutability": "mutable",
									"name": "supportedInterfaces",
									"nameLocation": "339:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "306:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
										"typeString": "mapping(bytes4 => bool)"
									},
									"typeName": {
										"id": 854,
										"keyType": {
											"id": 852,
											"name": "bytes4",
											"nodeType": "ElementaryTypeName",
											"src": "314:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											}
										},
										"nodeType": "Mapping",
										"src": "306:23:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
											"typeString": "mapping(bytes4 => bool)"
										},
										"valueType": {
											"id": 853,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "324:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "423:59:5",
										"statements": [
											{
												"expression": {
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 859,
															"name": "supportedInterfaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "429:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 861,
														"indexExpression": {
															"hexValue": "30783031666663396137",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "449:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_33540519_by_1",
																"typeString": "int_const 33540519"
															},
															"value": "0x01ffc9a7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "429:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "463:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "429:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "429:38:5"
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "363:41:5",
										"text": " @dev Contract constructor."
									},
									"id": 866,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "418:2:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:0:5"
									},
									"scope": 881,
									"src": "407:75:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										843
									],
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "797:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 875,
														"name": "supportedInterfaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "810:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
															"typeString": "mapping(bytes4 => bool)"
														}
													},
													"id": 877,
													"indexExpression": {
														"id": 876,
														"name": "_interfaceID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "830:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "810:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 874,
												"id": 878,
												"nodeType": "Return",
												"src": "803:40:5"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "486:196:5",
										"text": " @dev Function to check which interfaces are suported by this contract.\n @param _interfaceID Id of the interface.\n @return True if _interfaceID is supported, false otherwise."
									},
									"functionSelector": "01ffc9a7",
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "694:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 871,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "758:8:5"
									},
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "_interfaceID",
												"nameLocation": "724:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "717:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 868,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "717:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:29:5"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "789:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 872,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "789:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:6:5"
									},
									"scope": 881,
									"src": "685:163:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 882,
							"src": "162:689:5",
							"usedErrors": []
						}
					],
					"src": "32:820:5"
				},
				"id": 5
			}
		}
	}
}